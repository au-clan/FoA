{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 9.25 / 1.25 = 7.4 (left: 7.4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (3 * 6) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 1.25 * 9.25 = 11.5625 (left: 11.5625)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.25 9.25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10 1.25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10 1.25) -> 10 + 1.25 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 10 - 6 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 1.25 * 9.25 = 11.5625 (left: 11.5625)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "-1 8"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 3 + 5 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1 8) -> 8 / -1 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.25 9.25"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 5 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 - 8 = -2 (left: -2)\n-2 * -2 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * (-2) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 1.25 * 9.25 = 11.5625 (left: 11.5625)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.6"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6) -> 0.6 + 2 = 2.6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n8 - 3 = 5 (left: 5 21)\n5 * 21 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((3 * 7) / (8 - 3)) +",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 24 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) / 8 * 24 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 9.25 - 1.25 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.25 9.25"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: 4 * 6 = 24, 3 * 2 = 6, (6 * 24) / 144 = 24",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 10 30"
                }
            },
            "Step 4": {
                "Step": "6 * 5 = 30 (left: 4 10 30) -> 4 + 10 = 14 (left: 14 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 / 5 = 1.2 (left: 1.2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 / 5 = 1.2 (left: 1.2 10) -> 10 / 1.2 = 8.33333333333 (left: 8.33333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 9.25 - 1.25 = 8 (left: 8 9.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 9.25 - 1.25 = 8 (left: 8 9.25) -> 8 - 9.25 = -1.25 (left: -1.25)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.25 9.25"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10) -> 6 / 10 = 0.6 (left: 0.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24 12)\nAnswer: (3 + 9) * 8 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 + 10 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 + 10 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 1.25 * 9.25 = 11.5625 (left: 11.5625)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.25 9.25"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 + 3 = 15 (left: 5 15)\n15 + 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 * 4) + 3) + 5 + 4 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 2 + 4 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 5 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 24 (left: 24)\nAnswer: (3 * 4) * (12 - 8) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.25 9.25"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 9.25 / 1.25 = 7.4 (left: 7.4)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "21"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 + 5 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 5 = 30 (left: 4 10 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 1.25"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 - 1.25 = 6.75 (left: 1.25 6.75)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 - 1.25 = 6.75 (left: 1.25 6.75) -> 1.25 / 6.75 = 0.185185185 (left: 0.185185185)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "-1 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 + 5 = 11 (left: 10 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 + 5 = 11 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 9.25 - 1.25 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 - 8 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * (10 - 8) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 30 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 30 10) -> 10 / 30 = 0.333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 9.25 / 1.25 = 7.4 (left: 7.4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.25 9.25"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 3 + 5 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + 5) - 3 + 1 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 * 10 = 50 (left: 6 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 * 10 = 50 (left: 6 50) -> 50 / 6 = 8.33 (left: 8.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.25 9.25"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 + 1.25 = 9.25 (left: 1.25 9.25) -> 1.25 * 9.25 = 11.5625 (left: 11.5625)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 1.25"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 / 1.25 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.25 9.25"
                }
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7) -> 8 / 7 = 1.14285714286 (left: 1.14285714286)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps for the input 0 as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps for the input 0 as there are no numbers provided to perform operations on. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> N/A",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "14"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 2 = 2 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided. -> There are no possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 2 + 3 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> N/A",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input 0."
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 1 + 2 = 3 (left: 3 7) -> 7 / 3 = 2.3333333333333335 (left: 2.3333333333333335)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no more possible next steps. The numbers cannot be combined using basic arithmetic operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no more possible next steps. The numbers cannot be combined using basic arithmetic operations. -> There are no more possible next steps. The numbers cannot be combined using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with an input of 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with an input of 0. -> There are no possible next steps with an input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as all possible operations have been exhausted."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers to operate on. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps as all possible operations have been exhausted. -> There are no possible next steps as all possible operations have been exhausted. -> N/A",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 0."
                }
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.67"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps as the input is a single number and there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps as the input is a single number and there are no other numbers to perform operations with. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further."
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> It seems like there was a mistake in the input provided. Can you please provide the correct input for me to generate the possible next steps? -> Without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further. -> Without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 + 10 = 20"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 + 10 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> It seems like there was a mistake in the input provided. Can you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> It seems like there was a mistake in the input provided. Can you please provide the correct input for me to generate the possible next steps? -> Without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 26 / 13 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                }
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> There are no possible next steps with the given input. -> Input must have at least 2 numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 * 26 = 338 (left: 338)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps."
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps as the input is a single number and there are no other numbers to perform operations with. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 3 - 8 = -5 (left: -5 8) -> -5 - 8 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps: -> There are no possible next steps with the given input. -> 5 + 7 = 12 (left: 3 12 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> Possible next steps: -> There are no possible next steps with the given input. -> 5 + 7 = 12 (left: 3 12 9) -> 12 - 3 = 9 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "264"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> Input: 5 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> Input: 5 10 -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.8181818181818182"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 * 26 = 338 (left: 338)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.8181818181818182 * 2 = 1.6363636363636364"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364 -> 0.8181818181818182 + 2 = 2.818181818181818",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further."
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> It seems like there was a mistake in the input provided. Can you please provide the correct input for me to generate the possible next steps? -> Without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further. -> Without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.8181818181818182"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364 -> 0.8181818181818182 - 2 = -1.1818181818181818",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11.67"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps for the input 11.67 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> Input: 6 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> Input: 6 9 -> 6 + 9 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "121"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 1 * 2 + 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "13"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 * 26 = 338 (left: 338)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 13 11"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "13"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 + 8 = 21 (left: 8 21)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 * 13 = 26 (left: 11 26) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 26 + 13 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11.67"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There are no possible next steps for the input 11.67 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0.8181818181818182 + 2 = 2.818181818181818"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364 -> 0.8181818181818182 + 2 = 2.818181818181818 -> 2 - 0.8181818181818182 = 1.1818181818181818 (left: 1.1818181818181818 2.818181818181818)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "121"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 1 * 2 + 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 40 11"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 2 40 11) -> 40 - 11 = 29 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 * 26 = 338 (left: 338)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.8181818181818182 * 2 = 1.6363636363636364"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364 -> 0.8181818181818182 + 2 = 2.818181818181818 (left: 2.818181818181818 1.6363636363636364)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 4 + 7 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> 12 - 4 = 8 (left: 3 8) -> 4 + 7 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "0.8181818181818182 - 2 = -1.1818181818181818"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.8181818181818182"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 / 2 = 0.4090909090909091",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 / 2 = 0.4090909090909091 -> 2 + 0.8181818181818182 = 2.8181818181818183 (left: 2.818181818181818",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "13"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24) -> 24 - 11 = 13 (left: 13) -> 13 - 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "264"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2.818181818181818 1.6363636363636364"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364 -> 0.8181818181818182 + 2 = 2.818181818181818 (left: 2.818181818181818 1.6363636363636364) -> 2.818181818181818 * 1.6363636363636364 = 4.606060606060606 (left: 4.606060606060606)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2.818181818181818 1.6363636363636364"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364 -> 0.8181818181818182 + 2 = 2.818181818181818 (left: 2.818181818181818 1.6363636363636364) -> 2.818181818181818 + 1.6363636363636364 = 4.454545454545455 (left: 4.454545454545455)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.8181818181818182 * 2 = 1.6363636363636364"
                }
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75) -> 3.25 + 4 = 7.25 (left: 7.25 - 4 = 3.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 / 9 = 0.749988 (left: 0.749988)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left:  -> It seems like the input is missing. If you provide the numbers, I can give you the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3.25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20 -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20 -> Possible next steps: -> There are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 / 9 = 0.749988 (left: 0.749988)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 7 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 4 7 13) -> 4 * 7 = 28 (left: 28 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 7 - 3 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 7 - 3 = -> 7 - 3 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3.25"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps for the input 3.25. -> There are no possible next steps for the input 3.25 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 / 9 = 0.749988889 (left: 0.749988889)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "52 + 2 = 54"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 + 52 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 * 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 + 9 = 15.7499 (left: 15.7499)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 4 13"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 / 4 = 3.25 (left: 1 3.25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 9 / 6.7499 = 1.3334 (left: 1.3334)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "13 - 4 = 9 (left"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left:  -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left:  -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 6 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 / 9 = 0.749988889 (left: 0.749988889)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left:  -> It seems there was no input provided. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 + 8 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no more possible next steps with the given input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3.25"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> There are no possible next steps with the input 3.25.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 * 9 = 60.7491 (left: 60.7491)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 4 13"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 2 = 40",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 2 = 40 -> 20 + 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 - 9 = -2.2501 (left: -2.2501)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left:  -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "52 + 2 = 54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "52 + 2 = 54"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54 -> 2 + 52 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 - 2 = 0 (left: 0 2)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52) -> 52 + 2 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 + 9 = 15.7499 (left: 15.7499)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7.25 - 4 = 3.25"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75) -> 3.25 + 4 = 7.25 (left: 7.25 - 4 = 3.25) -> 7.25 / 4 = 1.8125 (left: 1.8125)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 4 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> There are no possible next steps with the input 9. -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "15"
                }
            },
            "Step 8": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15) -> There is only one possible step: 15 + 2 = 17",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6.7499 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> Input: 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> Input: 10 -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 20 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 20 100) -> 20 / 100 = 0.2 (left: 0.2 100)",
                "Pruning": null
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input 0.666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 + 2 + 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "110"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110) -> 110 - 2 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3.733 + 2 = 5.733"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733 -> 3.733 + 2 = 5.733 -> 3.733 / 2 = 1.8665 (left: 1.8665 2 5.733)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733 -> 3.733 + 2 = 5.733 -> 3.733 / 2 = 1.8665 (left: 1.8665 2 5.733) -> 1.8665 + 2 = 3.8665 (left: 3.8665 5.733)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 + 2 = 32 (left: 32 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 + 2 = 32 (left: 32 4) -> 32 / 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with the input 0.666."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "6 47"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (left: 6 47) -> 6 / 47 = 0.12766... (left: 0.12766...)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "Please provide at least two numbers for the next step calculation."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers for the next step calculation. -> 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers for the next step calculation. -> 2 + 8 = 10 (left: 8 10 14) -> 8 * 10 = 80 (left: 80 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 + 24 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 / 7 = 0.857..."
                }
            },
            "Step 7": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 / 7 = 0.857... -> Input: 7 42 -1",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 / 7 = 0.857... -> Input: 7 42 -1 -> 7 * 6 = 42 (left: 42 -1)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 (left: 2.83 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 17 / 6 = 2.83 (left: 2.83 7) -> Input: 10 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 * 2 * 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 9 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (left: 6 47)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "15 54"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 6 * 9 = 54 (left: 15 54) -> 7 + 3 = 10 (left: 10 9 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 6 * 9 = 54 (left: 15 54) -> 7 + 3 = 10 (left: 10 9 5) -> 5 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.12766..."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (left: 6 47) -> 6 / 47 = 0.12766... (left: 0.12766...) -> 0.12766... \u00d7 10 = 1.2766... (left: 1.2766...)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56) -> 15 - 56 = -41 (left: -41)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 = 3 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3.733"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "110"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110) -> 110 - 2 = 108 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No numbers provided. -> Please provide numbers for the next step.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 ( -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 / 24 = 1",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 / 24 = 1 -> 24 / 1 = 24 (left: 30 = 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 1 9"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 * 1 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 / 7 = 0.857..."
                }
            },
            "Step 7": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 / 7 = 0.857... -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 / 7 = 0.857... -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 + 2 * 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3024"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 + 2 + 4 = 6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers for the next step calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5 *"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 6 * 9 = 54 (left: 15 54) -> 7 + 3 = 10 (left: 10 9 5) -> 5 * -> 9 - 3 = 6 (left: /)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 ( -> 3 + 5 = 8 (left: 7 8 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 7 17"
                }
            },
            "Step 6": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 6 / 7 = 0.857...",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 * 1 = 6 (left: 6 9) -> 6 - 9 = -3 (left: -3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 * 1 = 6 (left: 6 9) -> 6 - 9 = -3 (left: -3 9) -> -3 + 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "3.733 + 2 = 5.733"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 * 9 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 + 2 * 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 9 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3024 / 1 = 3024 (left: 3024)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 6 * 9 = 54 (left: 15 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 2"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 0 + 2 = 2 (left: 4 3 2) -> 4 + 3 = 7 (left: 7 2) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3.733"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56) -> 56 / 15 = 3.7333333333333334 (left: 3.733 -> 3.733 + 2 = 5.733",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 * 1 = 6 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 7 = 1 (left: 6 1 9) -> 6 * 1 = 6 (left: 6 9) -> 9 - 6 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 *"
                }
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps to take.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps to take. -> There are no possible next steps as 36 is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> 25 - 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 - 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input 36."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36. -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 36."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "13.18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 + 13 = 14"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 + 13 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> None - this is a single number input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> None - this is a single number input. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 36."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36. -> 36 / 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps as there is only one number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 + 2 = 38 -> 38 / 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input 36."
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36. -> None",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "38 + 8 = 46"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "11.9091"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 - 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 18 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 / 11 = 1.1818181818181819 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 / 11 = 1.1818181818181819 ( -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "38 + 8 = 46"
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 + 2 = 38 -> 38 + 8 = 46 -> 38 - 8 = 30 (left: 30 8 46)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 + 2 = 38 -> 38 + 8 = 46 -> 38 - 8 = 30 (left: 30 8 46) -> 46 / 8 = 5.75 (left: 5.75 46)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 13 = -1 (left: 11 -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 13 = -1 (left: 11 -1) -> 11 + (-1) = 10 (left: -1 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-10"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> -10 * 2 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "8 26"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181 -> 13 / 11 = 1.181818181 (left: 1.181818181)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 - 0.5 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 + 13 = 14"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 1 - 13 = -12 (left: -12 14)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps for the number 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps for the number 36. -> None",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 + 13 = 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 5": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "11.9091"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 - 1.0909 = 11.9091 (left: 11.9091) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 + 2 = 38 -> 38 + 8 = 46",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 13 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 7": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 5 + 5 = 10 (left: 5 10 -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "-1 10"
                }
            },
            "Step 8": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 13 = -1 (left: 11 -1) -> 11 + (-1) = 10 (left: -1 10) -> 5",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "38 + 8 = 46"
                }
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 8) -> 8 / 1.375 = 5.81818181818 (left: 5.81818181818)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with just the number 80."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 / 4 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with just the number 80.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625) -> 9.625 / 1.375 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "4 4"
                }
            },
            "Step 8": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "4 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Input: 8 14 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Input: 8 14  -> Input: 22 112 6 1.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 22 112 6 1.75"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Input: 8 14  -> Input: 22 112 6 1.75 -> 1.75 * 22 = 38.5 (left: 38.5 6 1.75)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Input: 8 14  -> Input: 22 112 6 1.75 -> 1.75 * 22 = 38.5 (left: 38.5 6 1.75) -> 38.5 + 6 = 44.5 (left: 1.75 44.5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 9.625 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 9.625 11) -> 9.625 + 11 = 20.625 (left: 20.625)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "It seems like the input is missing. Could you please provide the numbers again so I can generate the possible next steps for you?"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 8 10  -> Possible next steps: -> It seems like the input is missing. Could you please provide the numbers again so I can generate the possible next steps for you? -> It seems like the input is missing. Could you please provide the numbers again so I can generate the possible next steps for you?",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1) -> 8 / -1 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 1.375 * 11 = 15.125 (left: 11)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 - 4 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 - 4 = 4 (left: 4) -> There is only one number left, so no possible next steps. The result is 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20) -> There is only one possible step: 20 / 2 = 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20) -> There is only one possible step: 20 / 2 = 10 -> 20 - 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8 (left: 2.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 1.375 * 11 = 15.125 (left: 11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 / 4 = 2 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 - 4 = 4 (left: 4) -> 4 + 4 = 8 -> 8 / 4 = 2 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 - 1.375 = 9.625 (left: 1.375 9.625) -> 9.625 - 1.375 = 8.25 (left: 8.25)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> Possible next steps: -> It seems like the input is missing. Could you please provide the numbers again so I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 1 = 10 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 11 * 1.375 = 15.125 (left: 15.125)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input: 22 112 6 1.75"
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Input: 8 14  -> Input: 22 112 6 1.75 -> 22 - 112 = -90 (left: -90 6 1.75)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20) -> There is only one number, so no calculations can be performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20) -> There is only one number, so no calculations can be performed. -> Input: 5",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 * 1 = 10 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 14",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 14 -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.375 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 1.375 * 11 = 15.125 (left: 15.125)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "9 10 11"
                }
            },
            "Step 4": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 11 / 9 = 1.2222222222222 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 10 "
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 / 4 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1.375 11"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11) -> 11 / 1.375 = 8 (left: 1.375 11) -> 1.375 - 11 = -9.625 (left: -9.625)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "4 4"
                }
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 * 9 = 54"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 / 9 = 0.67",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54 -> 6 / 9 = 0.67 -> 9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "0 9"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 - 2 = 0 (left: 0 9) -> 9 / 0 = undefined (left: 0 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 - 2 = 0 (left: 0 9) -> 9 / 0 = undefined (left: 0 9) -> 0 + 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "9 15"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 - 6 = 3"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6667 (left: 1.6667)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 3"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 2 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 3"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 - 6 = 3 (left: 6 3) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 - 6 = 3 (left: 6 3) -> 4 + 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9 15"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 - 2 = 0 (left: 0 9) -> 0 + 9 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 - 6 = 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 * 9 =  -> 6 * 9 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "6.5"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5) -> 6.5 * 8 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 6 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "It seems like there was a mistake in your input. Can you please provide the correct input for me to generate the possible next steps?"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Possible -> It seems like there was a mistake in your input. Can you please provide the correct input for me to generate the possible next steps? -> I'm sorry, there was a mistake in my input. Can you please provide the correct numbers for me to generate the possible next steps?",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Possible -> It seems like there was a mistake in your input. Can you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 3 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1 15"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 / 9 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 6 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 + 2 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 + 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 3"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 - 6 = 3"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 9 / 1.5 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 6 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 + 9 = 15 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 - 2 = 0 (left: 0 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 - 2 = 0 (left: 0 9) -> 0 + 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "7.8"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6) -> 1.8 + 6 = 7.8 (left: 7.8) -> There are no possible next steps for the input 7.8, as it is only one number and there are no other numbers to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 9 / 3 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> Possible -> It looks like there was a mistake in the input provided. Can you please provide the correct input so that I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "6.5"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5) -> 6.5 * 8 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 - 6 = 3"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 - 6 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "6 9"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 9 / 1.5 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 - 6 = 3"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 / 9 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 - 2 = 0 (left: 0 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 / 5 = 1.2 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 / 5 = 1.2 ( -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 - 2 = 0 (left: 0 9) -> 0 + 9 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 7 / 12 = 0.583333 (left: 0.583333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 6 7"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6) -> 1.8 + 6 = 7.8 (left: 7.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 2 9) -> 2 - 2 = 0 (left: 0 9) -> 0 + 9 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 - 6 = 3"
                }
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 15 9"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 9"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6 9) -> 6 * 9 = 54 (left: 1 54) -> 54 / 1 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4.5 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "144 / 24 = 6 (left"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 3 "
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 3 / 1 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 3 / 1 = 3 (left: 3) -> There are no possible next steps with just one number. -> Input more numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Input more numbers to continue the calculations."
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 3 / 1 = 3 (left: 3) -> There are no possible next steps with just one number. -> Input more numbers to continue the calculations. -> 5. 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "No possible next steps for the input 144 as it is a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 5 9"
                }
            },
            "Step 4": {
                "Step": "3 - 1 = 2 (left: 2 5 9) -> 9 / 2 = 4.5 (left: 4.5 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4.5 9"
                }
            },
            "Step 5": {
                "Step": "3 - 1 = 2 (left: 2 5 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 - 4.5 = 4.5 (left: 4.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 - 1 = 2 (left: 2 5 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 - 4.5 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 9 13.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "No possible next steps for the input 144 as it is a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (1 / 9) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10.67"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the input 10.67 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 10.67 as it is already a single number."
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the input 10.67 as it is already a single number. -> There are no possible next steps for the input 10.67 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the input 10.67 as it is already a single number. -> There are no possible next steps for the input 10.67 as it is already a single number. -> There are no possible next steps for the input \"10.67\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (9 + 1) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "No possible next steps for the input 144 as it is a single number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "17"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "144 / 24 = 6 (left"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 144 / 24 = 6 (left -> 144 * 24 = 3456 (left: 3456)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "No possible next steps for the input 144 as it is a single number."
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> No possible next steps for the input 144 as it is a single number. -> No possible next steps for the input 144 as it is a single number. -> 144 / 2 = 72",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 8 9"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> 9 / 1 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.25"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single number. -> There are no possible next steps for the input 2.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "144 / 24 = 6 (left"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 144 / 24 = 6 (left -> 24 * 144 = 3456",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 144 / 24 = 6 (left -> 24 * 144 = 3456 -> 24 - 144 = -120 (left: -120 * 3456)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 / 9 = 0.8888888889 (left: 0.8888888889)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 5 9"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "144"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 144 / 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 15 9"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "144 / 24 = 6 (left"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 144 / 24 = 6 (left -> 144 * 24 = 3456 (left: 3456)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the input 10.67 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the input 10.67 as it is already a single number. -> There are no possible next steps for the input 10.67 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.5555555555555556"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.25"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25. -> There are no possible next steps for the input 2.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the input 2.25 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single number. -> There are no possible next steps for the input 2.25 as it is already a single number. -> There are no possible next steps for the input 2.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (9 + 1) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "144"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.5555555555555556"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556) -> 1.5555555555555556 * 2 = 3.111111111111111 (left: 3.111111111111111)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "144"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 144 / 24 = 6 (left",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "144 / 24 = 6 (left"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 144 / 24 = 6 (left -> 24 - 144 = -120 (left: 144 -120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> 144 / 24 = 6 (left -> 24 - 144 = -120 (left: 144 -120) -> 144 - 120 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 17."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "144"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> No possible next steps for the input 144 as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 + 15 = 16 (left: 9 16) -> 9 * 16 = 144 (left: 144) -> No possible next steps for the input 144 as it is a single number. -> No possible next steps for the input 144 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> 17 / 8 = 2.125 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the input 10.67 as it is already a single number."
                }
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 5\nSteps:\n2 * 5 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) - 5) * 3 +",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "0.5833"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12) -> 7 / 12 \u2248 0.5833 (left: 0.5833) -> 0.5833 * 2 = 1.1666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n36 / 6 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((6 * 6) - 6) * 4 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps as there are no numbers provided to operate on with -18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 5 9\nSteps:\n2 * 9 = 18 (left: 3 5 18)\n18 - 5 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 16 = 24\nAnswer: ((2 * 9) - 5) + 3 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.5833 * 2 = 1.1666"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> These are all valid ways to obtain the number 24 using the given numbers and arithmetic operations.",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 6 12\nSteps:\n6 * 2 = 12 (left: 3 12)\n3 + 12 = 15 (left: 15)\n15 + 15 = 24 (left: 24)\nAnswer: (6 * 2) + (3 + 12) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "0.875"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (6 - 2) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) * 6) / 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "None, as there are no other numbers to perform operations with."
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with. -> None.",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 * 9 = 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 / 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 / 3) = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((6 + 6) * 6) + 6 =",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 5 9\nSteps:\n5 * 3 = 15 (left: 2 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: 9 + (2 * 3) * 5 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "0.444... = 36"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n36 / 0 = undefined (left: 6 6)\nAnswer: No solution.",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + (6 + 2) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "0.5833"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: 7 * (3 + 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: 7 * (3 + 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 7 49"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 3 * 7 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 56"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 7 * 7 = 49 (left: 7 7 49)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 7 * 7 = 49 (left: 7 7 49) -> 7 / 7 = 1 (left: 1 7 49)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 4 = 8 (left: 3 5 8)\n8 - 5 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 + 4 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 13 = 13 (left: 13)\n13 + ",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3 9 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 - 6 = 10 (left: 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + (6 -",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 7 49"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18) -> There are no possible next steps as there are no numbers provided to operate on with -18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 5 6 7 8\nSteps:\n5 * 7 = 35 (left: 6 8 35)\n35 - 8 = 27 (left: 6 27)\n27 - 6 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((5 * 7) - 8) - 6 + 3 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 5 8\nSteps:\n2 + 8 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((2 + 8) * (5 * 3)) - 10 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n3 + 5 = 8 (left: 8 14)\n8 * 14 = 112 (left: 112)\n112 / 4 = 24 (left: 24)\nAnswer: ((2 * 7) * (3 + 5)) / 4 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 / 5 ="
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 84",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 5 12"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 3 5 12) -> 3 + 5 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 * 2) * 3) * 4 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 * 9 = 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24 -> Input: 3 5 6 7\nSteps:\n5 * 6 = 30 (left: 3 7 30)\n30 - 7 = 23 (left: 3 23)\n23 - 3 = 20 (left: 20)\nAnswer: ((5 * 6) - 7) - 3 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (5 - 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 * 9 = 36"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 / 9 = 0.444... (left: 0.444... = 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 7 49"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 7 * 7 = 49 (left: 7 7 49) -> 7 / 7 = 1 (left: 1 7 49) -> 7 * 7 = 49 (left: 1 49)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 7 * 7 = 49 (left: 7 7 49) -> 7 / 7 = 1 (left: 1 7 49) -> 7 * 7 = 49 (left: 1 49) -> 27 / 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 / 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 / 3) = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((6 + 6) * 6) / (6 /",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "27 / 3 ="
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n4 + 6 = 10 (left: 2 3 10)\n10 * 2 = 20 (left: 3 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((4 + 6) * 2) + (3 + 1) = 24",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 7 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)  -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 4 5\nSteps:\n3 * 4 = 12 (left: 2 5 12)\n12 + 2 = 14 (left: 5 14)\n5 * 14 = 70 (left: 70)\nAnswer: (3 * 4) + (2 + 5) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 7 49"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12) -> 7 / 12 \u2248 0.5833 (left: 0.5833)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 7 49"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 7 * 7 = 49 (left: 7 7 49) -> 7 / 7 = 1 (left: 1 7 49) -> 49 / 7 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 7 * 7 = 49 (left: 7 7 49) -> 7 / 7 = 1 (left: 1 7 49) -> 49 / 7 = 7 (left: 1 7) -> 10 / 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 / 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 / 3) = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((6 + 6) * 6) / 6 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "6 8"
                }
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.7777777777777777"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777) -> 1.7777777777777777 * 2 = 3.5555555555555554",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 / 25 = 1 (left: )",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 - 5 = -1 (left:"
                }
            },
            "Step 6": {
                "Step": "4 - 5 = -1 (left: -> 4 / 5 = 0.8 (left: -1 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "48"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35) -> 13 + 35 = 48 (left: 48) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50 -> 50 + 25 = 75 (left: 25 75)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35) -> 13 + 35 = 48 (left: 48) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35) -> 13 + 35 = 48 (left: 48) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 3 * 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 3 * 8 = 24 (left: 12 24) -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4.49 12"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 / 2.67 = 4.49 (left: 4.49 12) -> 12 / 4.49 = 2.67 (left: 4.49 2.67)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 / 2.67 = 4.49 (left: 4.49 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 + 2 = 52)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Input: 5 3"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2 + 2.25 = 4.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16) -> 20 - 16 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "63"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "48"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35) -> 13 + 35 = 48 (left: 48) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 9"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 + 2.25 = 4.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 - 2 = 23 (left: 2 23)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 - 2 = 23 (left: 2 23) -> 23 - 2 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4.49 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 35"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 4 + 9 = 13 (left: 13 35) -> 13 + 35 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Input: 5 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50 -> 25 * 25 = 625 (left: 625)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 4 12 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "9 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "25"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4.49 12"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 / 2.67 = 4.49 (left: 4.49 12) -> 4.49 * 12 = 53.88 (left: 53.88)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 4 5 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2 + 2.25 = 4.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "25"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 8)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "7 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 -> 6 / 2 = 3 (left: 3 8 12) -> 8 - 3 = 5 (left: ",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "9 9"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9 -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "25"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 + 4 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 2 = 27 -> 25 - 2 = 23 (left: 23 27)",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "312"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 8 = 2.25 -> 18 * 8 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "2 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps with the single input of 16.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps with the single input of 16. -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 "
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 * 2 = 6"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 * 2 = 6 -> 1 * 2 = 2 (left: 3 * 2 = 6) -> 3 - 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 8 "
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 2 8  -> 4 * 16 = 64 (left: 10 64 6",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "None - there is only one number provided, so no operations can be performed."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 2.67 + 13 = 15.67 (left: 15.67) -> There is only one number provided (15.67), so there are no possible next steps to calculate with that input. -> None - there is only one number provided, so no operations can be performed. -> None - there is only one number provided, so no operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 * 2 = 6"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 * 2 = 6 -> 1 * 2 = 2 (left: 3 * 2 = 6) -> 6 * 2 = 12 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 4 8 16"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 - 8 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 - 8 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "37"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> 37 + 2 = 39",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 (left: 16) -> 16 / 2 = 8 -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 8 "
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8 13) -> 13 - 2.6666666666666665 = 10.333333333333334 (left: 10.333333333333334 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) ",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "11"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "15.67"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 2.67 + 13 = 15.67 (left: 15.67) -> There is only one number provided (15.67), so there are no possible next steps to calculate with that input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 2.67 + 13 = 15.67 (left: 15.67) -> There is only one number provided (15.67), so there are no possible next steps to calculate with that input. -> None - there is only one number provided, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 2.67 + 13 = 15.67 (left: 15.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "312"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 * 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 * 2 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 - 2.67 = 10.33 (left: 10.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 8 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = 4 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = 4 (left: -> 3 - 13 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 8 16 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 8 16 20) -> 20 - 8 = 12 (left: 12 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7 8) -> 8 + 7 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "312"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 * 2 = 6",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 * 2 = 6 -> 1 * 2 = 2 (left: 3 * 2 = 6)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 * 2 = 6"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 * 2 = 6 -> 1 * 2 = 2 (left: 3 * 2 = 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 2 = 16 (left: 8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "-10"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = 4 (left: -> 3 - 13 = -10 (left: -10) -> -10 + 2 = -8 (left: 2)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "2 16"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 4 8 16"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 / 4 = 4 (left: 4 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 16 / 4 = 4 (left: 4 8 16) -> 8 / 4 = 2 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the number 18. -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 - 6 = -4.8 (left: -4.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 5 6 7\nSteps:\n5 * 7 = 35 (left: 3 6 35)\n6 - 3 = 3 (left: 3 35)\n3 * 35 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\n21 - 6 = 15 (left: 15)\n15 + 7 = 22 (left: 22)\n22 - ",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 * 9 = 54 (left: 6 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 54"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 9 - 6 = 3 (left: 1 2 3 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\nAnswer: (3 + 7) * (8 - 3) = 50",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you."
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you. -> I'm sorry for any confusion. Please provide a clear set of numbers or an equation for me to generate possible next steps for you. Thank you.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 / 4 = 1.5 (left"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24 54"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 3 5 7)\n7 - 5 = 2 (left: 3 2)\n3 * 2 * 4 = 24 (left: 24)\nAnswer: 3 * (6 - 3) * 4 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 / 6 = 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 9 8 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * ",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "153"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153) -> 15 - 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1.5 6 9"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "I'm sorry, I am unable to provide possible next steps without a clear input. Please provide a set of numbers or a mathematical operation for me to generate possible next steps. Thank you."
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 / 6 = 2"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 12 / 6 = 2 -> 12 - 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 / 4 = 1.5 (left"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 54"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 12 / 6 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 2 3 6"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 9 - 6 = 3 (left: 1 2 3 6) -> 1 * 2 = 2 (left: 2 3 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 9 - 6 = 3 (left: 1 2 3 6) -> 1 * 2 = 2 (left: 2 3 6) -> 2 + 3 = 5 (left: 5 6)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7.2"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2) -> 7.2 * 8 = 57.6 (left: 57.6)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 6 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24 54"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 - 54 = -30 (left: -30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 3 = 9 (left: 6 7 9)\n6 + 7 = 13 (left: 9 13)\n13 - 9 = 4 (left: 4 24)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 * 3) - 6) * (7 + 9) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps. -> There are no more possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 ( -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 * 3 = 21 (left: 5 21)\n21 + 5 = 26 (left: 26)\nAnswer: (3 + 4) * (5 + 3) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 - 9 = -5 (left: -5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 - 9 = -5 (left: -5 9) -> -5 / 9 = -0.5555555555555556 (left: -0.5555555555555556)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 / 3 = 5.33 (left: 5.33)\n5.33 * 5 = 26.65 (left: 26.65)\nAnswer: ((3 * 7) - 5) / 3 = 26.",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7.2"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2) -> 7.2 + 8 = 15.2",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 / 4 = 1.5 (left"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left -> 6 - 4 = 2 (left: 2 1.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24 54"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 + 8 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 4 = 9 (left: 9)\n9 - 5 = 4 (left: 4)\n4 * 3 = 12 (left: 12)\n12 + ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 2 3 6"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 9 - 6 = 3 (left: 1 2 3 6) -> 6 / 2 = 3 (left: 1 3 6)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2.25 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "30"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 ( -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 2 3 6"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 9 - 6 = 3 (left: 1 2 3 6) -> 3 * 2 = 6 (left: 1 2 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 9 - 6 = 3 (left: 1 2 3 6) -> 3 * 2 = 6 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "I'm sorry, I am unable to provide possible next steps without a clear input. Please provide a set of numbers or a mathematical operation for me to generate possible next steps. Thank you."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 4 5 8\nSteps:\n3 * 8 = 24 (left: 4 5 24)\n4 + 5 = 9 (left: 9 24)\n9 - 9 = 0 (left: 0 24)\n0 + 24 = 24 (left: 24)\nAnswer: ((3 * 8) + (4 + 5)) - 9 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you."
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you. -> I'm sorry, I am unable to provide possible next steps without a clear input. Please provide a set of numbers or a mathematical operation for me to generate possible next steps. Thank you.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "I'm sorry, I am unable to provide possible next steps without a clear input. Please provide a set of numbers or a mathematical operation for me to generate possible next steps. Thank you."
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 2 3 6"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 9 - 6 = 3 (left: 1 2 3 6) -> 6 / 2 = 3 (left: 1 3 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296) -> 9 - 6 = 3 (left: 1 2 3 6) -> 6 / 2 = 3 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (4 + 6) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (6 - 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you."
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate possible next steps for you? Thank you. -> I'm here to help! Please provide a new set of numbers for me to generate possible next steps for.",
                "Pruning": null
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 4"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> There is only one possible next step: 8 / 2 = 4 (left: 4).",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 4 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 + 5 = 9 (left: 9 8) -> 9 + 8 = 17 (left: 17) -> 17 * 2 = 34 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 - 3 = 5 (left: 5 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 - 3 = 5 (left: 5 8 -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 4"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "-1"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 + 5 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1) -> There are no possible next steps with the input of -1.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 * 2 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 * 2 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 20 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 20 8) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 1 + (4 * (4 * 8)) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 * 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input provided."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 + 5 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 + 5 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 + 5 = 9 (left: 9 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 + 5 = 9 (left: 9 8) -> 9 + 8 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 4 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 32 - 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 + 8 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 5 + 8 = 13 (left: 4 13) -> 4 / 13 = 0.307692 (left: 0.307692)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (1 + 4) * (4 + 8) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 50 11"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 / 11 = 4.54 (left: 1 50)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 - 1 = 10 (left:"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left: -> 1 + 11 = 12 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left: -> 1 + 11 = 12 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 20"
                }
            },
            "Step 8": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left: -> 11 + 1 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0.5454545454545454 * 2 = 1.0909090909090908"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "9 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "9 27"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the given input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0.5454545454545454 * 2 = 1.0909090909090908"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454) -> 0.5454545454545454 * 2 = 1.0909090909090908 -> 0.5454545454545454 + 2 = 2.5454545454545454",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 10 11"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "66"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 / 2 = 33",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 4 / 5 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 4 / 5 = -> 4 / 5 = 0.8",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 - 27 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 - 1 = 10 (left:"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left: -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left: -> 11 - 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the given input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Possible next steps: -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16) -> 11 + 16 = 27 (left: 27) -> 27 / 2 = 13.5 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.75"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps for the input 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 - 1 = 10 (left:"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left: -> 11 + 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left: -> 11 + 1 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 5 + 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-4"
                }
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 10 11) -> 6 + 10 = 16 (left: 11 16) -> 11 + 16 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "5 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "9 27"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "0.5454545454545454"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454) -> 0.5454545454545454 * 2 = 1.0909090909090908",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "Input: 3 9 27"
                }
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> Input: 3 9 27 -> 27 - 9 = 18 (left:",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 ^ 27 = 7625597484987 (left: 7625597484987)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "5 10"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4).",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 5 + 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 + 10 = 20"
                }
            },
            "Step 8": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left: -> 1 + 11 = 12 (left: 10) -> 10 + 10 = 20 -> Input: 1 * 2 = 2",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 50 11"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 - 1 = 10 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 5 + 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11) -> Possible next steps: -> There are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There is only one possible step: 16 - 12 = 4 (left: 5 4). -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55) -> 9 / 3 = 3 (left: 3 27) -> Possible next steps: -> There are no possible next steps with the given input. -> - None",
                "Pruning": null
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4 - 3) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible -> It seems like the input is missing. Could you please provide the input so that I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4 - 3) * 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 + 6 = 17 (left: 12 17) -> 12 * 17 = 204 (left: 204)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4) * (3 - 7) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4) - (3 + 6) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4) * (3 - 6) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4) * (3 - 6) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) ->  -> There are no possible next steps since there are no more integers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4 - 3) * 6 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 4 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4) - (3 + 6) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4) - (3 - 6) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 "
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10  -> 3 + 10 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 10  -> 3 + 10 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 4) * (3 - 6) = 24"
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4 9"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 6 + 3 = 9 (left: 9 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 6 + 3 = 9 (left: 9 5) -> 9 + 5 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8 11"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "47"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 13"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "47"
                }
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 - 9 = 47 (left: 47) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4 9"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 + 5 = 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 5 + 8 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 5 - 3 = 2 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 5 - 3 = 2 ( -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8 11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 + 5 = 14"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 6 + 3 = 9 (left: 9 5) -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 13"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 5 + 8 = 13 (left: 9 13) -> 13 / 9 = 1.4444 (left: 1.4444)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 5 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 9"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 7 - 3 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8 11"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9 8) -> 4 * 9 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 / 9 = 1.4444 (left: 1.4444)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 11"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 / 11 = 0.7273 (left: 0.7273)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "32"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32 as it is the final result.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "47"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 2"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 7 - 3 = 4 (left: 4 2) -> 4 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 13"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 - 9 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2. -> 9 - 4 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 9"
                }
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 11 - 3 = 8 (left: 8",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4 9"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 9 - 5 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "8 11"
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 2"
                }
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "400"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400) -> 400 - 2 = 398 (left: 398)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "20 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "13"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0.9523809523809523"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523) -> 0.9523809523809523 / 2 = 0.4761904761904761",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523) -> 0.9523809523809523 / 2 = 0.4761904761904761 -> 2 / 0.9523809523809523 = 2.0999999999999996 (left: 2.099999999999999",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "0.9523809523809523"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No further steps can be taken as there is only one number provided."
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> None, as there is only one number provided. -> No further steps can be taken as there is only one number provided. -> No further steps can be taken as there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> None, as there is only one number provided. -> No further steps can be taken as there is only one number provided. -> No further steps can be taken as there is only one number provided. -> No further steps can be taken as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 / 26 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No further steps can be taken as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> None, as there is only one number provided. -> No further steps can be taken as there is only one number provided. -> No further steps can be taken as there is only one number provided. -> No further steps can be taken as there is only one number provided. -> No further steps can be taken with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20) -> 20 - 2 = 18 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.9524"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> None, as there is only one number provided. -> No further steps can be taken as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "Input: 5 3"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> 9 + 5 = 14 (left: 2 4) -> Input: 5 3 -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.9523809523809523"
                }
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523) -> 0.9523809523809523 * 2 = 1.9047619047619046",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39 -> 13 * 26 = 338",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 8 8 26)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 8 8 26) -> 8 + 8 = 16 (left: 16 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> No possible next steps. -> There are no possible next steps with the current numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 - 26 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.9048 2"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number. -> Input: 0.9524 -> 0.9524 + 2 = 2.9524 -> 0.9524 * 2 = 1.9048 (left: 1.9048 2) -> 1.9048 - 2 = -0.0952 (left: -0.0952)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "13 26"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.92 (left: 1.92)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "13"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 26 / 13 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the current numbers provided."
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> No possible next steps. -> There are no possible next steps with the current numbers provided. -> None",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "0.9524 - 2 = -1.0476"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12) -> 12 + 2 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12) -> 12 + 2 = 14 -> 2 * 2 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.92"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.92 (left: 1.92) -> 9 / 2 = 4.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 / 13 = 1.92 (left: 1.92) -> 9 / 2 = 4.5 -> 9 + 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 26 - 13 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "There are no possible next steps as the input value does not match any of the remaining numbers in the list."
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8 -> There are no possible next steps as the input value does not match any of the remaining numbers in the list. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the current numbers provided."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 1 20 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8 -> There are no possible next steps as the input value does not match any of the remaining numbers in the list.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.9524"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number. -> Input: 0.9524",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Input: 0.9524"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number. -> Input: 0.9524 -> 0.9524 + 2 = 2.9524",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number. -> Input: 0.9524 -> 0.9524 + 2 = 2.9524 -> 0.9524 * 2 = 1.9048 (left: 1.9048 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "42"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 21) -> 21 * 2 = 42 (left: 42) -> There are no possible next steps for the input 42.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 4 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 = 0.9523809523809523 (left: 0.9523809523809523)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "20 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> Input: 5 3 1",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> Input: 5 3 1 -> 5 / 3 = 1.67 (left: 1 1.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13) -> 25 - 13 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.9524"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> 9 + 5 = 14 (left: 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> 9 + 5 = 14 (left: 2 4) -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Input: 0.9524"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number. -> Input: 0.9524 -> 0.9524 * 2 = 1.9048",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number. -> Input: 0.9524 -> 0.9524 * 2 = 1.9048 -> 0.9524 - 2 = -1.0476",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 13 * 26 = 338 (left: 338)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "0.9524 - 2 = -1.0476"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21) -> 20 / 21 \u2248 0.9524 (left: 0.9524) -> There are no possible next steps for the input 0.9524 as it is already a single number. -> Input: 0.9524 -> 0.9524 * 2 = 1.9048 -> 0.9524 - 2 = -1.0476 -> 0.9524 / 2 = 0.4762",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "400"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400) -> 400 - 2 = 398 (left: 398)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "There are no possible next steps as the input value does not match any of the remaining numbers in the list."
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8 -> There are no possible next steps as the input value does not match any of the remaining numbers in the list. -> N/A",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "20 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.67 (left: 1.67) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 26"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 5 + 5 = 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 * 2 = 26 (left: 13 26) -> 5 + 5 = 10 -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 9 12"
                }
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 2 9 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 10 = 70 (left: 2 70)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 10 = 70 (left: 2 70) -> 2 + 70 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((12 - 2) * 7) + 2 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "84"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 4 * 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 5 12"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 12 - 2 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 12 - 2 = 10 (left: 5 10) -> 5 - 10 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 12 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 2 = 12 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 3.5 12"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 12 - 2 = 10 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "38"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 12 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "84"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 10)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 5 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 / 2 = 3.5 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 / 2 = 3.5 ( -> 7 * 2 = 14 (left: 14 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "38"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38) -> 38 + 3 = 41 (left: 41",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 12 14) -> 6 * 2 = 12 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "12 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 / 2 = 6 (left: 6 12 14) -> 6 * 2 = 12 (left: 12 14) -> 12 / 14 = 0.857 (left: 0.857)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "38"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "63"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 + 3 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "63"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 / 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "63"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> - 8 + 14 = 22 (left: 2 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> - 8 + 14 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 8 = 10 (left: 10 8 14) -> 14 - 10 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 8 = 10 (left: 10 8 14) -> 14 - 10 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "- Addition: If there are two numbers that can be added together."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance."
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "14 18"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18) -> 14 * 18 = 252 (left: 252)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.57"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> 2 + 57 = 59",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.5"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> 1.5 + 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.57"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> - 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> - 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.28571428571"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There is only one number given, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1.5"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1.5"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number given, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 8 = 10 (left: 10 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 8 = 10 (left: 10 8 14) -> 10 + 8 = 18 (left: 18 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 2 7"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> 8 / 3.5 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 -"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 3 - -> 3 * 2 = 6 (left: -)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.57"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There are no possible next steps with the input of 2.57.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 8 + 8 = 16 (left: 2 16 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There is only one number given, so there are no possible next steps. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There is only one number given, so there are no possible next steps. -> There are no possible next steps as there is only one number given. -> None",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 -"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 3 - -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "63"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> Input: 2 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> Input: 2 16 -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "14 18"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18) -> 18 / 14 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 -"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 3 - -> 3 / 3 = 1 (left: -)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "63"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There are no possible next steps for the number 63 as it is a prime number and cannot be divided evenly by any other number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There are no possible next steps for the number 63 as it is a prime number and cannot be divided evenly by any other number. -> 63 is a prime number and cannot be divided evenly by any other number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 14 = 16 (left: 16 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 14 = 16 (left: 16 8 8) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 8 = 10 (left: 10 8 14) -> 14 - 10 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 8 = 10 (left: 10 8 14) -> 14 - 10 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input of 2.57."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 -"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 3 - -> 3 / 2 = 1.5 (left: -)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7 11"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 7 11) -> 7 + 11 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 9 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 8 + 8 = 16 (left: 2 16 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "I'm sorry, without knowing the specific numbers in the input, it is impossible to provide possible next steps. Please provide the numbers in the input for further assistance."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 -"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 3 - -> 3 / 2 = 1.5 (left: -)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> I'm sorry, without knowing the specific numbers in the input, it is impossible to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 8 = 10 (left: 10 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 8 = 10 (left: 10 8 14) -> 14 - 10 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.28571428571"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> 8 / 3.5 = 2.28571428571 (left: 2.28571428571) -> 2.28571428571 + 2 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "8 8"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 14 = 16 (left: 16 8 8) -> 16 - 8 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "63 is a prime number and cannot be divided evenly by any other number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 3 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance."
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "- Addition: If there are two numbers that can be added together."
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 14 + 2 = 16 (left: 2 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 14 + 2 = 16 (left: 2 8 16) -> 8 * 2 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 8"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> - Addition: If there are two numbers that can be added together. -> 2 + 14 = 16 (left: 16 8 8) -> 16 - 8 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input of 2.57."
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There are no possible next steps with the input of 2.57. -> There are no possible next steps with the input of 2.57.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 22 - 1 = 21 (left: 5 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 22 - 1 = 21 (left: 5 21) -> 21 - 5 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> Input: 3 7 5 12 -> 7 - 3 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> Input: 3 7 5 12 -> 7 - 3 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.2826086956521739 / 2 = 0.14130434782608695"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 26.4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 / 45 \u2248 0.3111 (left: 0.3111)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.2826086956521739 / 2 = 0.14130434782608695"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13) -> 45 / 13 = 3.46 (left: 3.46)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 / 4.4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 9 13"
                }
            },
            "Step 4": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 4 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 12 - 9 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There seems to be a mistake in the input provided. Can you please clarify or provide a new set of numbers for the calculation?"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 / 22 = 0.2 (left: 0.2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "0.2826086956521739"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739) -> 0.2826086956521739 / 2 = 0.14130434782608695",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 + 13 = 58 (left: 1 58)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 + 13 = 58 (left: 1 58) -> 1 + 58 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 12 / 9 = 1.33 ( -> 12 / 9 = 1.33",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 3 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 3 9  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 9 + 21 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.2826086956521739 / 2 = 0.14130434782608695"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> Input: 3 7 5 12",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> Input: 3 7 5 12 -> 7 - 3 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 10 5 2.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Input: 10 5 2.5 -> 10 * 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 13 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 13 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.2826086956521739 / 2 = 0.14130434782608695"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 + 22 = 26.4 (left: 26.4)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "1 5 22"
                }
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 5 * 1 = 5 (left: 5 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 45 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 45 14) -> 45 + 14 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 * 5 ="
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 13 = 22 (left: 1 5 22)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 * 22 = 96.8 (left: 22 96.8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 4.4 * 22 = 96.8 (left: 22 96.8) -> 22 - 96.8 = -74.8 (left: -74.8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 13 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 13 = 3 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 * 5 ="
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 - 1 = 4 (left: 4 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> Possible next steps: -> There seems to be a mistake in the input provided. Can you please clarify or provide a new set of numbers for the calculation?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 * 9 =  -> 9 * 9 = 81",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 / 1 = 5 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46) -> 13 / 46 = 0.2826086956521739 (left: 0.2826086956521739)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.4 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 / 4.4 = 5 (left: 5 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22) -> 22 / 5 = 4.4 (left: 4.4 22) -> 22 / 4.4 = 5 (left: 5 22) -> 5 * 22 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3.46"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 45 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 45 12) -> 45 * 12 = 540 (left: 540)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10 * 5 ="
                }
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 / 11 = 0.636363 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3 3) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: ((5 + 6) * 13) - 7 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "66"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.33 (left: 1.33 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.33 (left: 1.33 3) -> 3 + 1.33 = 4.33 (left: 4.33)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24) -> 7 * 3 = 21 (left: 21 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with the input \"66\" as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4) ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 / 6 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 3"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 - 3 = 1 (left: 1 3 3) -> 3 - 1 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 11 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 7 12"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12) -> 12 + 7 = 19 (left: 7 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12) -> 12 + 7 = 19 (left: 7 19) -> 7 + 19 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "17"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 + 11 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 + 11 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4.8"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 - 1.2 = 4.8 (left: 4.8) -> There are no additional operations that can be performed on the number 4.8.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 - 1.2 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 7 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 7 3) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "7 11 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 / 7 = 1.57 (left: 1.57 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 / 7 = 1.57 (left: 1.57 13) -> 1.57 * 13 = 20.41 (left: 20.41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 17) -> 17 / 8 = 2.125 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Input: 5 10 15"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 / 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 * 4 = 12 (left: 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 * 4 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 - 7 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 - 7 = 4 (left: 4 13) -> 4 - 13 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "26"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 11 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 / 2 = 13",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 3) -> 1.3333333333333333 / 3 = 0.4444444444444444 (left: 0.4444444444444444 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 + 11 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 7 + 11 = 18 (left: 18 13) -> 18 / 13 \u2248 1.38461538462 (left: 1.38461538462)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 + 8 = 25 (left: 8) ",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 3"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7 -> 3 * 4 = 12 (left: 7 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.33 (left: 1.33 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.33 (left: 1.33 3) -> 1.33 + 3 = 4.33 (left: 4.33)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0.4444444444444444 3"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 3) -> 1.3333333333333333 / 3 = 0.4444444444444444 (left: 0.4444444444444444 3) -> 3 / 0.4444444444444444 = 6.75 (left: 3 6.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 3) -> 1.3333333333333333 / 3 = 0.4444444444444444 (left: 0.4444444444444444 3) -> 3 / 0.4444444444444444 = 6.75 (left: 3 6.75) -> 3 * 6.75 = 20.25 (left: 20.25)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "234"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 3 * 4 = 12 (left: 2 12)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 - 4 = -1 (left: -1 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 - 4 = -1 (left: -1 3) -> -1 + 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "7 11 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 11 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 * 13 = 143 (left: -> 11 + 13 = 24 (left: 24) -> Answer: (5 + 6) * (7 + 13) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15 -> 2 * 15 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "8 10 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30) -> 30 / 7.5 = 4 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 10 - 5 = 5 ( -> 10 / 5 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "20"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 2 10)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with the input 30. -> None",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 30 - 4 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 5 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10) -> 10 / 5 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10) -> 10 / 5 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "4 30"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 8 10"
                }
            },
            "Step 1": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 0 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 0 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with just the number 30.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with just the number 30. -> 30 - 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 4 * 30 = 120 (left: 30 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 4 * 30 = 120 (left: 30 120) -> 120 - 30 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "30 / 2 = 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 10 - 5 = 5 ( -> 10 / 5 = 2 (left: 2 5) -> 5 + 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 30."
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> - 30 / 2 = 15",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> - 30 / 2 = 15 -> - 30 / 2 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 8 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> Input: 5 12 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> Input: 5 12 15 -> 5 + 12 = 17 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 10 - 5 = 5 ( -> 10 / 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "20"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> There are no possible next steps with the number 20. It is a standalone number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> Input: 5 2 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> Input: 5 2 10 -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 5 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10) -> 10 + 5 = 15 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10) -> 10 + 5 = 15 (left: -> 15 - 5 = 10 (left: 10 10)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 5 8 50)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 / 5 = 1.6 (left: 1.6 10) -> 10 / 1.6 = 6.25 (left: 1.6 6.25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one step possible with the input 30:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> There is only one step possible with the input 30: -> 30 / 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 4 * 30 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 2 10"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 10 - 5 = 5 ( -> 10 / 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) ",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> 17 / 8 = 2.125 (left: 2.125 17)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 8 = 3.75 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 8 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 4 + 30 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 10"
                }
            },
            "Step 6": {
                "Step": "8 + 2 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 5 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10) -> 10 - 5 = 5 (left: 5 10) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "30 - 2 = 28"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 2 8 10) -> 10 - 8 = 2 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 20",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 8 50"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 5 8 50) -> 8 * 5 = 40 (left: 40 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 30"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 30 / 4 = 7.5 (left: 7.5 30) -> 30 / 7.5 = 4 (left: 4 30) -> 4 * 30 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "30 - 2 = 28"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 30"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 10 - 5 = 5 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 10 - 5 = 5 ( -> 10 / 5 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 + 2 = 32 -> 8 / 2 = 4 (left: 4 30) -> 10 - 5 = 5 ( -> 10 / 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "40"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80) -> 80 / 2 = 40 (left: 40) -> There are no possible next steps for the number 40.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 5 8 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> No possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> No possible next steps with the input 30. -> 30 - 2 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 * 8 = 80 (left: 80) -> 80 / 2 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 5 10"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10) -> 5 / 5 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5 10) -> 5 / 5 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "30 / 2 = 15"
                }
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> None, as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> There are no possible next steps with the input of 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "4 + 16 = 20 (left"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 -> 4 + 16 = 20 (left -> 20 / 16 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n3 + 8 = 11 (left: 11 21)\n11 * 21 = 231 (left: 231)\nAnswer: (3 * 7) * (3 + 8) = 231",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 + 16 = 20 (left"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 -> 4 + 16 = 20 (left -> 4 * 16 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "0"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 6) * 3 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 18"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 18 = 2 (left: 2 18) -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Provide additional numbers to perform operations."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 - 2 = 11 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps since there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps since there is only one number provided. -> There are no possible next steps since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There is only one number provided, so there are no possible next steps to calculate. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5 -> 9 / 3 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 18 = 2 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 is a single number so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 is a single number so there are no possible next steps. -> There are no possible next steps as 36 is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 8 = 4",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 10 5 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 10 5 2 -> 10 + 5 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 5 6 8\nSteps:\n6 - 3 = 3 (left: 3 5 8)\n5 + 8 = 13 (left: 3 13)\n3 * 13 = 39 (left: 39)\n39 / 13 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((6 - 3) * (5 + 8)) -",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> No possible next steps as there is only one number provided. -> Provide additional numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 -> 4 + 16 = 20 (left",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 * 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 + 8 = 15 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 + 8 = 15 (left: 5 15) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4) -> 4 - 2 = 2 (left: 2)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 6 9) -> 10 * 5 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4) -> 4 + 4 = 8"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 1 * 6 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 1 * 6 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) + 8 - 4 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 6 - 4 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 5 * 7 = 35 (left: 8 35) -> 8 * 35 = 280 (left: 280)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 / 6 = 3.1666666666666665 (left: 3.1666666666666665 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 / 6 = 3.1666666666666665 (left: 3.1666666666666665 19) -> 3.1666666666666665 * 19 = 60 (left: 19 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 / 1 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> 11 / 1 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15) -> None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 9 "
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9  -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9  -> 2 + 9 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27) -> 27 - 6 = 21 (left: 21) -> There are no possible next steps with the input 21."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 / 15 = 0.6 (left: 0.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 7 + 13 = 20 (left: 20 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 7 + 13 = 20 (left: 20 27) -> 20 - 27 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 13 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27) -> 27 - 6 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 13 - 7 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 + 7 = 20 (left: 7 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13) -> 4.5 + 13 = 17.5 (left: 17.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 7 13 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 9 / -2 = -4.5 (left: -4.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 9 / -2 = -4.5 (left: -4.5 13) -> -4.5 / 13 = -0.34615384615 (left: -0.34615384615)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27) -> 27 - 6 = 21 (left: 21) -> 21 / 2 = 10.5"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 / 1 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 / 1 = 9 (left: 9 13) -> 9 / 13 = 0.6923 (left: 0.6923)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 7 13 27) -> 13 - 7 = 6 (left: 6 27) -> 27 - 6 = 21 (left: 21) -> None."
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It looks like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 18 12"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 9 18 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "93"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93) -> There is only one number provided, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "No possible next steps as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.33 23.94"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94) -> 23.94 - 1.33 = 22.61 (left: 22.61)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 9 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 / 12 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "10.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as the input is 0."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as the input is 0. -> There are no possible next steps as the input is 0.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as the input is 0. -> There are no possible next steps as the input is 0. -> There are no possible next steps as the input is 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.33 23.94"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94) -> 1.33 * 23.94 = 31.86 (left: 31.86)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 -> 12 + 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 * 3 = 18 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 3 9) -> 6 * 3 = 18 (left: -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10.5"
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> 10.5 + 8 = 18.5 (left: 18.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as the input is 0."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 5 7"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> Input: 3 5 7 -> 3 * 5 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "It looks like the input is missing. Please provide the numbers to continue finding possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "93"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93) -> 93 - 9 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "54"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> 54 - 2 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "7 15"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "6"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 + 9 = 27 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "54"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "93"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93) -> There is only one number given, so there are no possible next steps. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 * 12 = 72 (left: 9 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 * 12 = 72 (left: 9 72) -> 72 / 9 = 8 (left: 8 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10.5"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> There are no possible next steps with the input 10.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5) -> There are no possible next steps with the input 10.5. -> There are no possible next steps with the input 10.5.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15) -> 9 + 9 = 18 (left: 18 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 15) -> 9 / 3 = 3 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)  -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)  -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.33 23.94"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94) -> 23.94 - 1.33 = 22.61 (left: 22.61)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 9 9"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 3 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 3 9) -> 6 * 3 = 18 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "54"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> No possible next steps with the input 54.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> No possible next steps with the input 54. -> No possible next steps with the input 54.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 + 9 = 27 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 + 9 = 27 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 9 12"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12) -> There are no possible next steps with the input of -12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "93"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93) -> 9 + 3 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93) -> 9 + 3 = 12 -> 3 * 9 = 27 (left: 27 12)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "18 9 12"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)  -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 * 3 = 18 (left:"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 3 9) -> 6 * 3 = 18 (left: -> 3 / 6 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "54"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> 54 is a single number, so there are no possible next steps in this case.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15 60"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 60 - 15 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1.444444"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * (8 - 5)) + 12 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n8 - 3 = 5 (left: 5 21)\n5 * 21 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\n21 * 1 = 21 (left: 21)\nAnswer: ((3 * 7) * (8 - 3)) /",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10 / 2 = 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * ((5 + 6) / 2) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1.444444"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 5 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\nAnswer: (3 * 5) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15 60"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 60 - 15 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "15 60"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 60 - 15 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10 / 2 = 5"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5 -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((5 * 4) - 6) + 3 + 7 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2.5 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15 60"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n3 + 9 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 + 10 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) + 8) + 9 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 13 54"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 2 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15 60"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "15 60"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 4 * 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 4 * 6 -> 4 - 6 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1.444444"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444) -> 1.444444 + 1 = 2.444444 (left: 1 2.444444)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "15 60"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 60 - 15 = 45 (left: 45 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 60 - 15 = 45 (left: 45 60) -> 45 - 60 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "27 27"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "15 60"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Input: 7 21 3",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Input: 7 21 3 -> 21 - 3 = 18 (left: 7 18)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (5 + 7 - 8) * 3 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "-2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 4 * 6 -> 4 - 6 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "15 60"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 3",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "27 27"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 27 27) -> 27 - 27 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input of -2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 + 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (6 + 3) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 / 9 = 1.444444 (left: 1.444444)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "15 60"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 6 = 15 (left: 3 15)\n15 + 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 7) - 6) + 3 + 6 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15 60"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "15 60"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 7 + 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 4 * 6 -> 4 - 6 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((3 + 7) * 10) / 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "15 60"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n24 - 27 = -3 (left: -3)\n-3 + 24 = 21 (left: 21)\nAnswer: ((3 * ",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 / 3 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 / 3 = 4 (left: 4 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * (5 + 7)) - 8 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 13 = 2 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "15 60"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 60 - 15 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 12 13"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "15 60"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 60 / 5 = 12 (left: 12 60)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 60 / 5 = 12 (left: 12 60) -> 60 / 12 = 5 (left: 5 60)",
                "Pruning": null
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 24 (left: 24)\nAnswer: ((3 + 4) + (7 + 7)) * 2 = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 + 9 = 22 (left: 22 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 18 * 72 = 1296 (left: 1296)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "9 19 13"
                }
            },
            "Step 6": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 28 - 9 = 19 (left: 9 19 13) -> 19 - 13 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9)\n7 + 9 = 16 (left: 16)\n16 - 7 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 7 = 20 (left: 20)\n20 / 5 = 4",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 72"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 72 - 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n6 + 9 = 15 (left: 15)\n15 - 6 = 9 (left: 9)\n9 + 9 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 + 9 = 18 (left: 18)\n18 - 9 = 9",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 / 9 = 1.444 (left: 1.444 13 28)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 72 - 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "13 - 4 = 9"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 =  -> 13 - 4 = 9 -> 13 - 9 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 + 8 = 14 (left: 14 6)\n14 - 6 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) + 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.5 + 2 = 3.5"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 - 2 = -0.5 (left: -0",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 5 7\nSteps:\n5 * 5 = 25 (left: 3 7 25)\n25 - 7 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\nAnswer: (5 * 5) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 28 - 9 = 19 (left: 19 13 28)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 18 + 72 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.444 13 28"
                }
            },
            "Step 6": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 / 9 = 1.444 (left: 1.444 13 28) -> 13 / 1.444 = 9 (left: 9 28",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n8 - 6 = 2 (left: 2 3 9)\n2 * 9 = 18 (left: 18 3)\n18 - 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((8 - 6) * 9) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.5 + 2 = 3.5"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5 -> 1.5 + 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 72"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 3 + 9 = 12 (left: 12 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 3 + 9 = 12 (left: 12 3) -> 12 - 3 = 9 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 6 9\nSteps:\n6 * 3 = 18 (left: 6 9 18)\n9 - 6 = 3 (left: 3 18)\n3 * 18 = 54 (left: 54)\nAnswer: (6 * 3) * (9 - 6) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 13 / 9 = 1.44 (left: 1.44 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 18 + 72 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 7 13"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 * 7 = 28 (left: 28 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 6) - 12) * 4 = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 28 - 9 = 19 (left: 19 13 28) -> 19 - 13 = 6 (left: 6 28) -> Possible next steps: -> There are no possible next steps with the provided input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 + 2 = 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 + 3 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 * 7) - 4) + 3 + 4 = 24",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 9 * 13 = 117 (left: 117 28)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 18 + 72 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "117 28"
                }
            },
            "Step 6": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 9 * 13 = 117 (left: 117 28) -> 117 * 28 = 3276 (left: 3276)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 3"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 3 + 9 = 12 (left: 12 3) -> 12 - 3 = 9 (left: 9 3) -> Input: 5 2",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 5 * 9 = 45 (left: 45 13) -> 45 / 13 = 3.4615 (left: 3.4615)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 24)\nAnswer: (3 * 6) + (5 + 7) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 9 * 13 = 117 (left: 117 28)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 7) - 4) * 6 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 72"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 72 / 18 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 =  -> 13 - 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 72 / 18 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) + (16 - 8) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 + 3 = 10 (left: 10 14)\n10 * 14 = 140 (left: 140)\n140 / 6 = 24 (left: 24)\nAnswer: ((6 + 8) + (7 + 3)) * 140 / 6 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 13 28"
                }
            },
            "Step 4": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 28 - 9 = 19 (left: 9 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "19 13 28"
                }
            },
            "Step 5": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 28 - 9 = 19 (left: 19 13 28) -> 19 - 13 = 6 (left: 6 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 28 - 9 = 19 (left: 19 13 28) -> 19 - 13 = 6 (left: 6 28) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 + 3 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) + 3 + 2 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 13"
                }
            },
            "Step 8": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 28 - 9 = 19 (left: 9 19 13) -> 19 - 13 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "27 27"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 18 * 4 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 9 13"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 5 + 9 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n27 - 6 = 21 (left: 3 21)\n21 / 3 = 7 (left: 7 21)\n7 + 21 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 * 9) - 6) + ((",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 6 = 18 (left: 3 8 18)\n8 - 3 = 5 (left: 5 18)\n5 * 18 = 90 (left: 90)\nAnswer: (3 * 6) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with the input of -2."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n9 - 6 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (9 - 6) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n1 * 18 = 18 (left: 18)\nAnswer: (6 * 3) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18 72"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 18) -> 12 + 6 = 18 -> 6 * 12 = 72 (left: 18 72) -> 72 - 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "13 - 4 = 9"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 =  -> 13 - 4 = 9 -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "9 19 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n1 * 18 = 18 (left: 18)\nAnswer: (6 * 3) + (9 - 8) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Great job on solving those number puzzles! Let me know if you want to try more.",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 72"
                }
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 - 4 = 2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 * 6",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 * 6 -> 4 * 6 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 14 / 6 = 2.33 (left: 4 2.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 14 / 6 = 2.33 (left: 4 2.33) -> 4 - 2.33 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> 14 / 2 = 7 -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 4 * 6 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 4 * 6 = 24 (left: 14 24) -> 14 * 24 = 336 (left: 336)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> There are no possible next steps with just one number. -> Possible next steps: -> It seems like there was an error in the input. Can you please provide the correct input so I can generate the possible next steps for you?",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> There are no possible next steps with just one number. -> Possible next steps: -> It seems like there was an error in the input. Can you please provide the correct input so I can generate the possible next steps for you? -> Apologies for the error. Please provide the correct input so I can generate the possible next steps for you.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 - 4 = 2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 14 / 4 = 3.5 (left: 3.5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 14 / 4 = 3.5 (left: 3.5 14) -> 14 - 3.5 = 10.5 (left: 10.5 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 * 6 = 24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 * 6 -> 4 * 6 = 24 -> 4 / 6 = 0.6666666666666666 (left: ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 6 14"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 14 / 4 = 3.5 (left: 3.5 6)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> No possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 6 * 4 = 24 (left: 24 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 6 * 4 = 24 (left: 24 14) -> 24 / 14 = 1.71 (left: 1.71)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "14"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 - 4 = 2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 * 4 = 24 (left: 24 2) -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 6 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "No further steps possible as there is only one number left."
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "100"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100) -> 100 - 200 = -100",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88) -> 12 + 88 = 100 (left: 100) -> 100 - 200 = -100 -> 200 / 100 = 2 (left: -100 2)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> There are no possible next steps with just one number. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 4 + 6 = 10 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 4 + 6 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 - 4 = 2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 / 2 = 2 (left: 6 - 2 = 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 / 2 = 2 (left: 6 - 2 = 4) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 6 / 4 = 1.5 (left: 1.5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 6 / 4 = 1.5 (left: 1.5 14) -> 1.5 + 14 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "4 * 6 = 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 * 6 = 24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 * 6 -> 4 * 6 = 24 -> 6 / 4 = 1.5 (left: 1.5 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 * 6 -> 4 * 6 = 24 -> 6 / 4 = 1.5 (left: 1.5 24) -> 1.5 + 24 = 25.5 (left: 25.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "4 * 6 = 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No further steps possible as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left.",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 6 / 4 = 1.5 (left: 1.5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 6 / 4 = 1.5 (left: 1.5 14) -> 14 - 1.5 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "100"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 * 6 = 24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 * 6 -> 4 * 6 = 24 -> 4 + 6 = 10 (left: 10 = 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 * 6 -> 4 * 6 = 24 -> 4 + 6 = 10 (left: 10 = 24) -> 24 - 10 = 14 (left: 14 24)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 + 2 = 4 -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 6 * 4 = 24 (left: 24 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 6 * 4 = 24 (left: 24 14) -> 24 * 14 = 336 (left: 336)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 * 6 = 24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 4 * 6 -> 4 * 6 = 24 -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 14"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 14 + 4 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 =  -> 6 - 4 = 2 -> 6 + 4 = 10 (left: 10 - 4 = 6) -> 10 + 4 = 14 (left: 4 6 14) -> 14 + 4 = 18 (left: 6 18) -> 18 * 6 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No further steps possible as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left. -> No further steps possible as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 + 9.6 = 11.6 (left: 6.8 11.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 + 9.6 = 11.6 (left: 6.8 11.6) -> 6.8 + 11.6 = 18.4 (left: 18.4)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the input 4.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 1"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1) -> 0 * 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "50"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with the number 50 as a single input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 1"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1) -> 0 + 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4.8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 / 6 = 1.333 (left: 1.333 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 / 6 = 1.333 (left: 1.333 7) -> 1.333 + 7 = 8.333 (left: 8.333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 6) -> 6 - 1.16666666667 = 4.83333333333 (left: 4.83333333333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9.6 - 2 = 7.6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 - 2 =  -> 9.6 - 2 = 7.6 -> 9.6 / 2 = 4.8 (left: 4.8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4.8"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number. -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 * 9.6 = 19.2 (left: 6.8 19.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 2 * 9.6 = 19.2 (left: 6.8 19.2) -> 6.8 * 19.2 = 130.56 (left: 130.56)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 1"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1) -> 0 + 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> Not enough information provided. Please input a set of numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 - 2 = 2.8 (left: 2.8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 / 2 = 4.8 (left: 4.8 6.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 / 2 = 4.8 (left: 4.8 6.8) -> 12",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "7 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 1"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1) -> 1 - 0 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 15"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> Input: 3 5 7 -> 3 * 5 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with the input of 4.8 as it is already a single number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> Input: 3 5 7 -> 3 * 5 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 / 2 = 4.8 (left: 4.8 6.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 / 2 = 4.8 (left: 4.8 6.8) -> Input: 10 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 1"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1) -> 0 + 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the input 4.8."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 7 - 2 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 7 - 2 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8. -> There are no possible next steps for the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 6.8 + 2 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 6.8 + 2 =  -> 6.8 + 2 = 8.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 15"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> Input: 3 5 7 -> 3 * 5 = 15 (left: 7 15) -> 15 - 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 7 - 2 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1) -> 1 is the only input, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 - 2 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 - 2 =  -> 9.6 - 2 = 7.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 1"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1) -> 0 * 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 4  -> Possible next steps: -> There are no more possible next steps with the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps with the input of 4.8 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps with the input of 4.8 as it is already a single number. -> There are no possible next steps with the input of 4.8 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 1"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1) -> 0 + 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 4.8."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 4 -> 4.8 + 4 = 8.8 (left: 8.8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9.6 6.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 * 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8 -> 4.8 * 2 = 9.6 (left: 2 9.6 6.8) -> 9.6 * 6 -> 9.6 * 6 = 57.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 1"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 1 * 0 = 0 (left: 0 1) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 7 - 2 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with just the number 5 provided."
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided. -> There are no possible next steps with just the number 5 provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33333 (left: 3.33333 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33333 (left: 3.33333 10) -> 3.33333 * 10 = 33.3333 (left: 33.3333)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-3 10 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> -3 + 10 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> -3 + 10 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 10)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "25 - 2 = 23"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5 provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> There are no possible next steps with just one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> There are no possible next steps with just one number given. -> Please provide more than one number to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33 (left: 3 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33 (left: 3 10 10) -> 3 * 10 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-3 10 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> -3 / 10 = -0.3 (left: -0.3 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> -3 / 10 = -0.3 (left: -0.3 10) -> -0.3 + 10 = 9.7 (left: 9.7)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "25 - 2 = 23"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 10 10"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 - 3 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10  -> 2 + 10 = 12 (left: 10)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with just the number 5 provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 10 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 =  -> 10 / 3 = 3.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 10 15)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 divided by 5 = 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 divided by 5 = 5 -> 25 - 5 = 20 (left: 20 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 + 3 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 + 3 = 13 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "20 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-3 10 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> 10 + (-3) = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> 10 + (-3) = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 10 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 * 5 = 50 (left: 10 10 50) -> 50 / 10 = 5 (left: 10 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 * 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> 10 / -3 = -3.33 (left: -3.33 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> 10 / -3 = -3.33 (left: -3.33 10) -> -3.33 + 10 = 6.67 (left: 6.67)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 10 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-3 10 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> -3 + 10 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> -3 + 10 = 7 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Please provide more than one number to generate possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 10 10"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 3 * 10 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 3 * 10 = 30 (left: 10 30) -> 10 + 30 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-3 10 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> -3 - 10 = -13 (left: -13 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> -3 - 10 = -13 (left: -13 10) -> -13 - 10 = -23 (left: -23)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 30"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 * 8 = 160 (left: 8) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 - 3 = 7 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "-3 10 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10 30"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33 (left: 3 10 10) -> 3 * 10 = 30 (left: 10 30) -> 30 - 10 = 20 (left: 20 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33 (left: 3 10 10) -> 3 * 10 = 30 (left: 10 30) -> 30 - 10 = 20 (left: 20 30) -> 20 * 30 = 600 (left: 600)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "10 / 3 = 3.33"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "25"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 - 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33 (left: 3.33 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 / 3 = 3.33 (left: 3.33 10) -> 3.33 * 10 = 33.3 (left: 33.3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 10 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 10"
                }
            },
            "Step 7": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 10 - 5 = 5 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "20 5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 + 5 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "25"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 5 10 10) -> 5 + 10 = 15 (left: 10 15) -> 10 + 15 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 10 10"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 10 10"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 7 = 3 (left: 3 10 10) -> 10 - 3 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-3 10 10"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> 10 - 10 = 0 (left: -3 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10 10) -> 10 - 10 = 0 (left: -3 0) -> -3 - 0 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "20 5"
                }
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72) -> 72 - 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 14 17"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "44"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> 44 / 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 /"
                }
            },
            "Step 6": {
                "Step": "12 / -> Not enough numbers provided for a valid operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72) -> 72 - 36 = 36 (left: 36 36)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 - 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are no possible next steps for the input 36."
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "9"
                }
            },
            "Step 6": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 + 2 = 9 (left: 9) -> 8 + 9 = 17 (left: 8 14 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 - 2 = 70 (left: 70 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 - 2 = 70 (left: 70 72) -> 70 - 72 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2 8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are no possible next steps for the input 36."
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72) -> 72 / 36 = 2 (left: 2 36)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "36 * 2 = 72"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 - 2 = 70 (left: 70 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 - 2 = 70 (left: 70 72) -> 70 * 72 = 5040 (left: 5040)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 6 = 13 (left: 6 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 / 48 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "36 * 2 = 72"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 36 - 2 = 34 (left: 34 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "48"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> None, since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 - 2 = 70 (left: 70 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 - 2 = 70 (left: 70 72) -> 70 - 72 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 36."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 + 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 /"
                }
            },
            "Step 4": {
                "Step": "12 / -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 1"
                }
            },
            "Step 6": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 2 * 72 = 144 (left: 144 2 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 2 * 72 = 144 (left: 144 2 72) -> 144 - 2 = 142 (left: 72 142)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "44 / 2 = 22"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> 44 / 2 = 22 -> 44 - 22 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "9"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 14 17"
                }
            },
            "Step 7": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 + 2 = 9 (left: 9) -> 8 + 9 = 17 (left: 8 14 17) -> 8 + 14 = 22 (left: 22 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 + 2 = 9 (left: 9) -> 8 + 9 = 17 (left: 8 14 17) -> 8 + 14 = 22 (left: 22 17) -> 22 * 17 = 374 (left: 374)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "34 36"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 - 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 1"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "44"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with a single number input of 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72) -> 72 / 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 36."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 - 2 = 22 (left: 22 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 - 2 = 22 (left: 22 24) -> 22 / 24 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-36 - 2 = -38"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 / 24 = 2 (left: 24 2) -> 24 / 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "44"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72 2 72"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 -> 2 * 36 = 72 (left: 72 2 72) -> 72 / 2 = 36 (left: 36 72) -> 36 * 72 = 2592 (left: 2592)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "44 / 2 = 22"
                }
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 =  -> 4 -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.83"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 + 2 = 11 (left: 6 11) -> 11 / 6 = 1.83 (left: 1.83) -> 1.83 - 2 = -0.17",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 54"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65) -> 6 * 5 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1.33333 * 2 = 2.66666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 4.909."
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909) -> There are no possible next steps for the input 4.909. -> There are no possible next steps for the input 4.909 as it is not a whole number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "29"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> There are no possible next steps with the input 29.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> There are no possible next steps with the input 29. -> None",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 9 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 11 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 11 27) -> 27 / 11 = 2.45454545455 (left: 2.45454545455)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There is no possible next step with the input 3.67 as it is a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 =  -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "108"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.33333"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 2 / 1.5 = 1.33333 (left: 1.33333) -> 1.33333 * 2 = 2.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 54"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the number 30."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 =  -> 4 -> 4 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.83"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 + 2 = 11 (left: 6 11) -> 11 / 6 = 1.83 (left: 1.83) -> 1.83 + 2 = 3.83",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 + 2 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.33333"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 2 / 1.5 = 1.33333 (left: 1.33333) -> There are no possible next steps with the input of 1.33333.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> There are no possible next steps with the number 30.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> There are no possible next steps with the number 30. -> There are no possible next steps with the number 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 54"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 9 * 3 = 27 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 9 * 3 = 27 ( -> 9 + 3 = 12 (left: 12 = 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 + 2 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 + 2 = 11 (left: 6 11) -> 11 / 6 = 1.83 (left: 1.83)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> There are no possible next steps with the given input of 30.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15) -> 2 * 15 = 30 (left: 30) -> There are no possible next steps with the given input of 30. -> There are no possible next steps with the given input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 54"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 / 54 = 0.2037037037037037 (left: 0.2037037037037037)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 / 54 = 0.2037037037037037 (left: 0.2037037037037037) -> 0.2037037037037037 * 2 = 0.4074074074074074 (left: 0.4074074074074074)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.33333"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.33333 * 2 = 2.66666"
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 2 / 1.5 = 1.33333 (left: 1.33333) -> 1.33333 * 2 = 2.66666 -> 2 - 1.33333 = 0.66667 (left: 0.66667)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps with the given input of 30."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 - 2 =  -> 4 -> 4 + 2 = 6 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.67"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> There is no possible next step with the input 3.67 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 54"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909) -> There are no possible next steps for the input 4.909.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 3 / 24 = 0.125 (left: 0.125 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 3 / 24 = 0.125 (left: 0.125 24) -> 24 + 0.125 = 24.125 (left: 24.125)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1.83 + 2 = 3.83"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 3 5 -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "108"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108) -> 10 / 8 = 1.25 (left: 108)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.5"
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 54"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 59 - 4 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the number 30."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 24)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 - 6 = 3 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 2 / 1.5 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "594"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 + 4 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 / 3 = 3 (left: 3 11) -> 11 / 3 = 3.66666666667 (left: 3.66666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "2 / 2 = 1"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 3 5 -> 5 - 3 = 2 (left: 2) -> No further steps can be taken with the input of just \"2\". -> 2 / 2 = 1 -> Input: 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 + 9 = 15 (left: 2 15) -> 2 * 15 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 3 5 -> 5 - 3 = 2 (left: 2) -> No further steps can be taken with the input of just \"2\".",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> Input: 3 5 -> 5 - 3 = 2 (left: 2) -> No further steps can be taken with the input of just \"2\". -> 2 / 2 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "11 54"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65) -> 65 - 8 = 57",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> Input: 5 10 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24) -> Input: 5 10 20 -> 20 / 10 = 2 (left: 5 2)",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 50"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> 2 + 50 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 50"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> 50 / 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": ""
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 - 11 = 1 (left:"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: -> 12 * 11 = 132 (left: 132) ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: -> 12 * 11 = 132 (left: 132)  -> 132",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 - 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 - 2 = 23 -> 23 * 2 = 46 (left: 8 14 46)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 50"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> Possible next steps: -> There seems to be a formatting issue with the input. Could you please provide the correct input so I can generate the possible next steps for you? Thank you.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 - 11 = 1 (left:"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: -> 12 - 11 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: -> 12 - 11 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2 12.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left:  -> It seems like you have not provided any input values. Could you please provide the numbers for which you would like to find possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 50"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> 2 + 50 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 12 13"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 - 11 = 1 (left:"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: -> 12 / 11 = 1.0909 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: -> 12 / 11 = 1.0909 (left: 1) -> There are no possible next steps with the input given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 50"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> 2 + 50 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "11 12 40"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 40)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 - 11 = 1 (left:"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: -> 12 - 11 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: -> 12 - 11 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "64"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64) -> 64 - 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 50"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> 2 * 50 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 12 16"
                }
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 13 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5 -> 25 * 2 = 50 (left: 50 2 12.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0.6666666666666666 16"
                }
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666 16) -> 0.6666666666666666 * 16 = 10.666666666666668 (left: 10.666666666666668)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666 16) -> 0.6666666666666666 * 16 = 10.666666666666668 (left: 10.666666666666668) -> 10.666666666666668 / 2 = 5.333333333333334 (left: 5.333333333333334)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "145"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No more possible steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "11 12 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40) -> 23 + 40 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 3.125)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left:  -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2 12.5"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5 -> 25 * 2 = 50 (left: 50 2 12.5) -> 2 * 12.5 = 25 (left: 50 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 / 2 = 12.5 -> 25 * 2 = 50 (left: 50 2 12.5) -> 2 * 12.5 = 25 (left: 50 25) -> 50 * 25 = 1250 (left: 1250)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the given input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 14 46"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12) -> -2 + 12 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> There is only one number given, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 50"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> 2 + 50 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 12 13"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "50 2 12.5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13) -> 1.0909090909090908 * 13 = 14.272727272727726 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 (left: 25 50)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 (left: 25 50) -> 25 * 50 = 1250 (left: 1250)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "11 12 40"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 50"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> 2 * 50 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "15"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 * 2 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 13) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 14 46"
                }
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 4 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 4 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 5 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 5 10 -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 + 10 = 20 (left: 14 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 + 10 = 20 (left: 14 20) -> 14 * 20 = 280 (left: 280)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 10 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 6 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> 1",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 + 7 ="
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 5 + 7 = -> 5 + 7 = 12",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 * 10 = 100 (left: 100 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 * 10 = 100 (left: 100 14) -> 100 / 14 = 7.142857 (left: 7.142857)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32) -> 10 * 32 = 320 (left: 320)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 102"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 * 11 = 110 (left: 8 110) -> 110 - 8 = 102 (left: 8 102) -> 8 - 102 = -94 (left: -94)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 10 = 1 (left: 8 1) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one possible next step since there is only one number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 10 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 10 4) -> 10 + 4 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 10 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 3 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one possible next step since there is only one number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 / 10 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 / 10 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 10 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 + 4 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 + 4 = 14 (left: 8 14) -> 8 / 14 = 0.57 (left: 0.57)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "168"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168) -> No possible next steps for the number 168.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 * 10 = 100 (left: 100 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 * 10 = 100 (left: 100 14) -> 100 / 14 = 7.142857 (left: 7.142857)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 10 = 1 (left: 8 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 10 = 1 (left: 8 1) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.25"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 (left: 2 3.25)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 * 10 = 100 (left: 100 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 * 10 = 100 (left: 100 14) -> 100 - 14 = 86 (left: 86)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 + 7 ="
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> 3 * 9 = 27 -> 9 * 3 = 27 (left: 27 = 27)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 5 + 7 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 - 10 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 - 10 = 0 (left: 0 14) -> 14 - 0 = 14 (left: 0)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 10 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "20"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one possible next step since there is only one number."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 10 = 18 (left: 5 18 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8) -> Input: 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10) -> 10 - 8 = 2 (left: 2 8) -> Input: 8 -> There is only one possible next step since there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 * 11 = 110 (left: 8 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 * 11 = 110 (left: 8 110) -> 110 - 8 = 102 (left: 8 102)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2 5"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one possible next step since there is only one number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 / 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 / 2 =  -> 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 10 14"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "168"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168) -> 68 / 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 + 7 ="
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 102"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 * 11 = 110 (left: 8 110) -> 110 - 8 = 102 (left: 8 102) -> 102 / 8 = 12.75 (left: 12.75)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one possible next step since there is only one number."
                }
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9.018"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 / 0.545 = 22.018 (left: 22.018 13) -> 22.018 - 13 = 9.018 (left: 9.018) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 / 0.545 = 22.018 (left: 22.018 13) -> 22.018 - 13 = 9.018 (left: 9.018) -> 18 - 9 = 9 (left: 9 18) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 6 - 11 = -5 (left: -5 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 6 - 11 = -5 (left: -5 19) -> -5 - 19 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "163.185 / 2 = 81.5925"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> There are no possible next steps because the equation is already balanced and equal.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> There are no possible next steps because the equation is already balanced and equal. -> N/A",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "72 = 72"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "163.185"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185) -> 163.185 / 2 = 81.5925",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185) -> 163.185 / 2 = 81.5925 -> 163.185 - 2 = 161.185 (left: 161.185)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "7 11 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.125 17"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 -> 9 / 8 = 1.125 (left: 1.125 17) -> 17 - 1.125 = 15.875 (left: 15.875)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "163.185"
                }
            },
            "Step 6": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185) -> 163 + 185 = 348 (left: 185 348)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 - 72 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "163.185 / 2 = 81.5925"
                }
            },
            "Step 8": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185) -> 163.185 * 2 = 326.37 -> 163.185 / 2 = 81.5925 -> 163.185 * 2 = 326.37",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 1": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 + 13 = 25.545 (left: 25.545)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "89"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - 7 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - 7 = 5 (left: 7 5) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 * 72 = 5184 (left: 5184)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "0.68 + 2 = 2.68"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68) -> There is only one number provided (0.68), so there are no possible next steps to perform any operations. -> 0.68 + 2 = 2.68 -> 0.68 * 2 = 1.36 (left: 1.36 2)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 1": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 / 0.545 = 22.018 (left: 22.018 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 / 0.545 = 22.018 (left: 22.018 13) -> 22.018 - 13 = 9.018 (left: 9.018)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "163.185"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185) -> 163.185 * 2 = 326.37",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185) -> 163.185 * 2 = 326.37 -> 163.185 / 2 = 81.5925",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "42"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 / 72 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "185 348"
                }
            },
            "Step 8": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185) -> 163 + 185 = 348 (left: 185 348) -> 185 + 348 = 533 (left: 533)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "0.68 - 2 = -1.32"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - -> 12 - 8 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 - 8 = 4"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - -> 12 - 8 = 4 -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5 / 5 = "
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23) -> 5 / 5 =  -> 5 / 5 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.125 17"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 -> 9 / 8 = 1.125 (left: 1.125 17) -> 3 * 9 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 -> 9 / 8 = 1.125 (left: 1.125 17) -> 3 * 9 = -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 / 2 = 36 (left: 36 = 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 / 2 = 36 (left: 36 = 72) -> 72 - 2 = 70 (left: 70 36)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "89"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 -> 9 / 8 = 1.125 (left: 1.125 17)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 11 * 6 = 66 (left: 66 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 11 * 6 = 66 (left: 66 19) -> 66 * 19 = 1254 (left: 1254)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "72 = 72"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 / 72 = 1 (left: 1 72)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 / 72 = 1 (left: 1 72) -> 1 + 72 = 73 (left: 73)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "0.68 + 2 = 2.68"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23) -> 5 / 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.68"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68) -> There is only one number provided (0.68), so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68) -> There is only one number provided (0.68), so there are no possible next steps to perform any operations. -> 0.68 + 2 = 2.68",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.125 17"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 -> 9 / 8 = 1.125 (left: 1.125 17) -> 1.125 * 17 = 19.125 (left: 19.125)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "5 / 5 = 1"
                }
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 13 - 6 = 7 (left: 7 23) -> 5 / 5 =  -> 5 / 5 = 1 -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "72 = 72"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 - 72 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.68"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68) -> 0.68 * 2 = 1.36",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 25 + 17 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 - 8 = 4"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 12 - -> 12 - 8 = 4 -> 12 / 4 = 3 (left: 3 8 -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9.018"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6  -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.68"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 * 72 = 5184 (left: 72 5184)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 * 72 = 5184 (left: 72 5184) -> 72 - 5184 = -",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 * 13 = 156 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 30 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "89"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 (left: 17)  ",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.125 17"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 -> 9 / 8 = 1.125 (left: 1.125 17) -> 1.125 + 17 = 18.125 (left: 18.125)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "89"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "6 11 19"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 19)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 11 / 6 = 1.83 (left: 1.83 19) -> Input: 3 5 7",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 1": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 * 13 = 163.185 (left: 163.185)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.68"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68) -> 0.68 * 2 = 1.36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25) -> 17 / 25 = 0.68 (left: 0.68) -> 0.68 * 2 = 1.36 -> 0.68 - 2 = -1.32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.125 17"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 + 9 = 17 -> 9 / 8 = 1.125 (left: 1.125 17) -> 17 / 1.125 = 15.1111 (left: 15.1111)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "72 = 72"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 / 2 = 36 (left: 36 72)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "72 = 72"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12) -> 77 + 12 = 89 (left: 89) -> 8 * 9 = 72 -> 8 * 9 = 72 (left: 72 = 72) -> 72 / 72 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "25.545"
                }
            },
            "Step 8": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 12 + 0.545 = 12.545 (left: 12.545 13) -> 12.545 + 13 = 25.545 (left: 25.545) -> 25.545 * 2 = 51.09",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "8 32"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "8 32"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "8 32"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)"
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 * 13 = -78 (left: -78)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3.5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857 (left: 3.42857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None, as there is only one number given in the input. -> There is only one number given, so there are no possible next steps. -> No possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None, as there is only one number given in the input. -> There is only one number given, so there are no possible next steps. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 + 13 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 12 13"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None, as there is only one number given in the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None, as there is only one number given in the input. -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input of 21."
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21. -> 21 - 14 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Please provide at least two numbers to perform operations."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.5 (left: 8.5 13) -> 8.5 * 13 = 110.5 (left: 110.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 * 13 = -78 (left: -78)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 14 "
                }
            },
            "Step 4": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "No more possible next steps with only one number given."
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 + 8 = 29 (left: 8) -> No more possible next steps with only one number given. -> There are no more possible next steps with only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 + 8 = 29 (left: 8) -> No more possible next steps with only one number given. -> There are no more possible next steps with only one number given. -> -",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "14 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 14 12 13) -> 12 + 13 = 25 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 - 13 = -19 (left: -19)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "273"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273) -> Input: 56",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 - 8 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 - 8 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 / 13 = -0.46 (left: -0.46)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.43 (left: 3.43 13) -> 5 + 2 = 7 (left:  -> It seems like you didn't provide an input to work with. Please input a set of numbers for me to provide possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 =  -> 9 / 12 = 0.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 / 13 \u2248 -0.46 (left: -0.46)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 7 13"
                }
            },
            "Step 4": {
                "Step": "12 + 1 = 13 (left: 2 7 13) -> 7 * 2 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 + 8 = 29 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 + 8 = 29 (left: 8) -> No more possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 19"
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with just the number 21. -> 21 - 2 = 19 (left: 2 19) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with just the number 21. -> 21 - 2 = 19 (left: 2 19) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.43 (left: 3.43 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.43 (left: 3.43 13) -> 5 + 2 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 + 13 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "29"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13) -> 42 - 13 = 29 (left: 29) -> 29 - 2 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with just the number 21.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with just the number 21. -> 21 - 2 = 19 (left: 2 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 4"
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 2) -> 2 + 2 = 4 (left: 2 4) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 2) -> 2 + 2 = 4 (left: 2 4) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 15.5 13) -> 15.5 / 13 = 1.1923076923076923 (left: 1.1923076923076923)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 / 13 (left: -0.46153846153846156)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "9 / 12 = 0.75"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 =  -> 9 / 12 = 0.75 -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "110.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None. The input does not have enough numbers to perform any operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None. The input does not have enough numbers to perform any operations. -> Please provide at least two numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> None -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 + 1 = 13 (left: 2 7 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108) -> 108 / 13 = 8.3076923076923077 (left: 8.3076923076923077)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 + 13 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3.5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 - 3.5 = 8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with the input of 21.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input of 21."
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21. -> There are no possible next steps with the input of 21. -> 21 * 8 = 168 (left: 8 168)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 42 13) -> 42 - 13 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6 13) -> -6 * 13 = -78 (left: -78)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 12 13"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.33 (left: 1.33 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "21"
                }
            },
            "Step 5": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "13 + 2 = 15"
                }
            },
            "Step 7": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 - 8 = 13 (left: 13) -> 13 + 2 = 15 -> Invalid input. Please enter a valid mathematical operation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 12 = 14 (left: 7 14  -> 7 + 14 = 21 (left: 21) -> 21 - 8 = 13 (left: 13) -> 13 + 2 = 15 -> Invalid input. Please enter a valid mathematical operation. -> - Retry entering a valid mathematical operation.",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 /",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 / -> 6 / 2 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 8 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((12 - 2) + (6 + 8)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 =  -> 12 - 8 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "14"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((12 - 2) + (6 + 8)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 6 8 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 8 + 12 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12) -> 12 - 1.33 = 10.67 (left: 10.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 / 10 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12) -> 14 * 12 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "168"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12) -> 14 * 12 = 168 (left: 168) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 2 = 7 (left: 10 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 4 = 2 (left: 2 14)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 12 48 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (8 - 6) * 12 = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 8 12"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.6666666666666666 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666 12) -> 0.6666666666666666 * 12 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666 12) -> 0.6666666666666666 * 12 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 8 10) -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (approximation) (left: 6 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (approximation) (left: 6 1.33 12) -> 6 / 1.33 = 4.51 (left: 4.51 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "-36"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36) -> Sorry, I cannot provide possible next steps for the input -36 as there are no previous numbers given to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 10 * 2 = 20 (left: 20 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 12 - 48 = -36 (left: -36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 14"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 6 8 2) -> 6 + 8 = 14 (left: 2 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "168"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 10 - 8 = 2 (left: 2 10) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) + (6 + 8) = 24"
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 150"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "12"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 3 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "14"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 4 7) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8) -> 8 / 0.375 = 21.333333333333336 (left: 21.333333333333336)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "12 9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with the input of -6 as it does not match any of the remaining numbers."
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: -> 7 - 13 = -6 (left: -6) -> There are no possible next steps with the input of -6 as it does not match any of the remaining numbers. -> There are no possible next steps with the input of -6 as it does not match any of the remaining numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: -> 7 - 13 = -6 (left: -6) -> There are no possible next steps with the input of -6 as it does not match any of the remaining numbers. -> There are no possible next steps with the input of -6 as it does not match any of the remaining numbers. -> There are no possible next steps with the input of -6 as it does not match any of the remaining numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 76."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "-6"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: -> 7 - 13 = -6 (left: -6) -> There are no possible next steps with the input of -6 as it does not match any of the remaining numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "76"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 150"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150) -> 150 / 10 = 15 (left: 15 150)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "9 12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "12"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 3 = 12 (left: 12) -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 3 = 12 (left: 12) -> 12 + 2 = 14 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 + 1 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 + 1 = 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4 -> 4 / 1 = 4 (left: 3 4)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "76"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> There are no possible next steps for the number 76.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> There are no possible next steps for the number 76. -> 76 / 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input of -6 as it does not match any of the remaining numbers."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 - 7 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "76"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "76"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> 76 + 2 = 78",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> 76 + 2 = 78 -> 76 - 2 = 74",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "14"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 4 7) -> 5 + 9 = 14 (left: 14) -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 9 13"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 12 9 13) -> 12 + 9 = 21 (left: 21 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 12 9 13) -> 12 + 9 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 76."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "76"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> 7 + 6 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.33"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33) -> None. The input is a single number, so there are no operations that can be performed on it.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 + 3 = 7 (left: 4 7) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 150"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150) -> 150 - 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "76"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> There are no possible next steps with the input 76.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 * 9 = 63 (left: 63 13) -> 63 + 13 = 76 (left: 76) -> There are no possible next steps with the input 76. -> There are no possible next steps with the input 76.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 150"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150) -> 10 - 150 = -140 (left: -140)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input of -6 as it does not match any of the remaining numbers."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 13 / 7 = 1 (left: -> 7 - 13 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 + 1 = 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4 -> 3 * 1 = 3 (left: 3 4)",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 - 4 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 16.666666666666668"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200) -> 200 / 12 = 16.666666666666668 (left: 12 16.666666666666668) -> 12 / 16.666666666666668 = 0.7199999999999999 (left: 0.7199999999999999 16.666666666666668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200) -> 200 / 12 = 16.666666666666668 (left: 12 16.666666666666668) -> 12 / 16.666666666666668 = 0.7199999999999999 (left: 0.7199999999999999 16.666666666666668) -> 16.666666666666668 - 0.7199999999999999 = 15.94666666666667 (left: 15.946666666666",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 10.8."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 6) -> There are no possible next steps with just the number 6.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 6) -> There are no possible next steps with just the number 6. -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 =  -> 12 + 10 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "42"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42) -> There are no possible next steps with the input of 42. -> There are no possible next steps with the input of 42.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "42"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42) -> There are no possible next steps with the input of 42. -> There are no possible next steps with the input of 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "42"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42) -> There are no possible next steps for the input 42 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42) -> There are no possible next steps for the input 42 as it is a single number. -> There are no possible next steps for the input 42 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "42"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42) -> There are no possible next steps with the input 42.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42) -> There are no possible next steps with the input 42. -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "20 10 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 30 - 12 = 18 (left: 18 30)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 16.666666666666668"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200) -> 200 / 12 = 16.666666666666668 (left: 12 16.666666666666668) -> 12 + 16.666666666666668 = 28.666666666666668 (left: 16.666666666666668 28.666666666666668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200) -> 200 / 12 = 16.666666666666668 (left: 12 16.666666666666668) -> 12 + 16.666666666666668 = 28.666666666666668 (left: 16.666666666666668 28.666666666666668) -> 16.666666666666668 / 28.666666666666668 = 0.5806451612903226 (left: 0.5806451612903226)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input of 42."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 - 4 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 - 4 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.8"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps with the input 10.8.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps with the input 10.8. -> There are no possible next steps with the input 10.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 30 / 12 = 2.5 (left: 2.5 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 + 10 = 22"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 =  -> 12 + 10 = 22 -> 12",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "360"
                }
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360) -> 360 / 2 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input of 42."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5) -> 5 / 0.8 = 6.25 (left: 6.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 2 * 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 5 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 5 - 6 = -1 (left: -1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 32 / 10 = 3.2 (left: 3.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18 30"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 30 - 12 = 18 (left: 18 30) -> 18 - 30 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 - 4 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "42"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 12 = 32 (left: 10 32) -> 10 + 32 = 42 (left: 42) -> ",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 10 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "42"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42) -> 42 - 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "8.25 12.5"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5) -> 5 / 0.8 = 6.25 (left: 6.25) -> 6.25 * 2 = 12.5 -> 6.25 + 2 = 8.25 (left: 8.25 12.5) -> 8.25 / 12.5 = 0.66 (left: 0.66)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "180 2 = 362"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 2 - 4 = -2 (left: -2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 2 - 4 = -2 (left: -2 5) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6.25"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5) -> 5 / 0.8 = 6.25 (left: 6.25) -> 6.25 * 2 = 12.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5) -> 5 / 0.8 = 6.25 (left: 6.25) -> 6.25 * 2 = 12.5 -> 6.25 + 2 = 8.25 (left: 8.25 12.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 16.666666666666668"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200) -> 200 / 12 = 16.666666666666668 (left: 12 16.666666666666668) -> 12 * 16.666666666666668 = 200 (left: 16.666666666",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "23"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 5 10 8) -> 5 + 10 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23) -> There are no possible next steps with the input \"23\".",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 5 10 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "360"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360) -> 360 + 2 = 362",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 12 30) -> 12 * 30 = 360 (left: 360) -> 360 + 2 = 362 -> 360 / 2 = 180 (left: 180 2 = 362)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200) -> 200 / 12 = 16.666666666666668 (left: 12 16.666666666666668)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 + 10 = 22"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 =  -> 12 + 10 = 22 -> 22 / 2 = 11",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 =  -> 12 + 10 = 22 -> 22 / 2 = 11 -> 22 - 2 = 20 (left",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 4 50 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 / 2 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 12 / 2 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6.25"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 4 / 5 = 0.8 (left: 0.8 5) -> 5 / 0.8 = 6.25 (left: 6.25) -> 6.25 / 8 = 0.78125 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "9 10 12"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 9 * 10 = 90 (left: 12 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 10 + 12 = 22 (left: 20 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 10 + 12 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "42"
                }
            },
            "Step 7": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42) -> There are no possible next steps with the input 42.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 + 10 = 22 (left: 20 22) -> 20 + 22 = 42 (left: 42) -> There are no possible next steps with the input 42. -> There are no possible next steps with the input 42.",
                "Pruning": null
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 7 11"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.142857 8"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 8 / 7 = 1.142857 (left: 1.142857 8) -> 8 - 1.142857 = 6.857143 (left: 6.857143)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2.33 8.67"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> 8.67 / 2.33 = 3.72 (left: 3.72)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 7 11"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.33 8.67"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> 2.33 + 8.67 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2.33 8.67"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> Input: 5 5 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.33 8.67"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> 2.33 + 8.67 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "5 8"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.142857 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 = 10 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 = 10 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 2 4"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2.33 8.67"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.33 8.67"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> Possible next steps: -> - 14 + 2 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.909"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 3 + 7 = 10 (left: 10 11) -> 10 / 11 = 0.909 (left: 0.909) -> 0.909 * 2 = 1.818 (left: 1.818)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "2.33 8.67"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 8 / 7 = 1.142857 (left: 1.142857 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.33 8.67"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> 8.67 - 2.33 = 6.34 (left: 6.34)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 + 8 = 15"
                }
            },
            "Step 8": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> 7 + 8 = 15 -> 15 - 8 = 7 (left: 7 8 23)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 / 1 = 14 (left: 14 11) -> 14 * 11 = 154",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.33 8.67"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> 2.33 * 8.67 = 20.17 (left: 20.17)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> 7 + 8 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.33 8.67"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> 8.67 / 2.33 = 3.72 (left: 3.72)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.142857 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 =  -> 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "5 8"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.142857 8"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 8 / 7 = 1.142857 (left: 1.142857 8) -> 1.142857 - 8 = -6.857143 (left: -6.857143)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "5 8"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.142857 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "88"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "5 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 8 + 9 = 17 (left: 9) ",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.142857 8"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 8 / 7 = 1.142857 (left: 1.142857 8) -> 1.142857 - 8 = -6.857143 (left: -6.857143)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 - 3 = 4 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "7 + 8 = 15"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 =  -> 10 -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 7 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.142857 8"
                }
            },
            "Step 7": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 8 / 7 = 1.142857 (left: 1.142857 8) -> 8 - 1.142857 = 6.857143 (left: 6.857143)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "5 8"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 ( -> 11 + 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 22"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.33 8.67"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> Possible next steps: -> - 8 / 8 = 1 (left: 2 1)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 2 * 4 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2.33 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.33 8.67"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2.33 (left: 2.33 11) -> 11 - 2.33 = 8.67 (left: 2.33 8.67) -> 2.33 + 8.67 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 - 1 =  -> 10 -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 + 4 = 12 (left: 12 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 + 4 = 12 (left: 12 30) -> 12 + 30 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 * 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20) -> 20 / 1.33 = 15.04 (left: 15.04)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15.04"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20) -> 20 / 1.33 = 15.04 (left: 15.04) -> There are no possible next steps for the input 15.04 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20) -> 20 / 1.33 = 15.04 (left: 15.04) -> There are no possible next steps for the input 15.04 as it is already a single number. -> There are no possible next steps for the input 15.04 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 - 6 = 2 (left: 2 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 - 6 = 2 (left: 2 20) -> 2 * 20 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "280"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280) -> 80 - 2 = 78 (left: 2 78)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280) -> 80 - 2 = 78 (left: 2 78) -> 2 + 78 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the input 11.97 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 * 8 = 32 (left: 32 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 * 8 = 32 (left: 32 30) -> 32 - 30 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 - 6 = 2 (left: 6 20 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 - 6 = 2 (left: 6 20 2) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "280"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280) -> 8 * 8 * 2 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "25 + 25 = 50"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "40"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 - 6 = 2 (left: 2 20) -> 2 * 20 = 40 (left: 40) -> There are no possible next steps with the input 40.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 - 6 = 2 (left: 2 20) -> 2 * 20 = 40 (left: 40) -> There are no possible next steps with the input 40. -> There are no possible next steps with the input 40.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 5 14"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 10 / 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 10 / 5 -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 / 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 / 6 -> 20 * 6 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15.04"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20) -> 20 / 1.33 = 15.04 (left: 15.04) -> There are no possible next steps for the input 15.04.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20) -> 20 / 1.33 = 15.04 (left: 15.04) -> There are no possible next steps for the input 15.04. -> There are no possible next steps for the input 15.04.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8) -> 7.5 / 8 = 0.9375 (left: 0.9375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 4 5 14) -> 14 - 5 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 / 20 = 0.7 (left: 0.7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "960"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 * 20 = 960 (left: 960) -> 6 * 0 = 0 (left: 9 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 * 20 = 960 (left: 960) -> 6 * 0 = 0 (left: 9 0) -> 9 - 0 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "25 + 25 = 50"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 30 / 4 = 7.5 (left: 7.5 8) -> 8 - 7.5 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 * 8 = 200 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "11.97"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> There are no possible next steps for the input 11.97 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 6 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 6 = 14 (left: 6 14) -> 14 / 6 = 2.3333 (left: 2.3333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "280"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280) -> 80 - 2 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "280"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280) -> 2 * 8 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the input 11.97 as it is already a single number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 / 8 = 0.5 (left: 0.5 8 30) -> 8 / 0.5 = 16 (left: 16 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20) -> 20 + 1.33 = 21.33 (left: 21.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15.04"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20) -> 20 / 1.33 = 15.04 (left: 15.04) -> There is only one number given, so there are no possible next steps for calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 / 6 = 1.33 (left: 1.33 20) -> 20 / 1.33 = 15.04 (left: 15.04) -> There is only one number given, so there are no possible next steps for calculation. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 - 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 - 2 = 23 -> 25",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 20"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 * 6 = 48 (left: 48 20) -> 48 * 20 = 960 (left: 960)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "280"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280) -> 8 * 0 = 0 (left: 2 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 6 + 8 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280) -> 8 * 0 = 0 (left: 2 0) -> 2 + 0 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the input 11.97 as it is already a single number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> Input: 5 5 -> 5 * 5 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 8 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 / 8 = 2.5 (left: 2.5 8 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 / 8 = 2.5 (left: 2.5 8  -> 8 - 2.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 - 6 = 2 (left: 6 20 2) -> 6 / 2 = 3 (left: 3) -> 6 + 3 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 8 - 6 = 2 (left: 6 20 2) -> 6 / 2 = 3 (left: 3) -> 6 + 3 = 9 (left: 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "25 + 25 = 50"
                }
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 12 + 7 = 19 (left: 10 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 12 + 7 = 19 (left: 10 19) -> 10 * 19 = 190 (left: 190)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "190"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 12 + 7 = 19 (left: 10 19) -> 10 * 19 = 190 (left: 190) -> 19 / 1 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16 / 2 = 8"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "29"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 / 2 = 8"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> 17 * 2 = 34 (left: 8)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 12 "
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 12  -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 20"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> Input: 4 6 12",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> Input: 4 6 12 -> 6 + 4 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 20"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "17"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 12"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> Input: 4 6 12 -> 6 + 4 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 * 22 = 1716 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 20"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "12 13 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> Input: 1 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 12"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> Input: 4 6 12 -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "29"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29) -> 29 / 2 = 14.5 (left: 2 8 12 14.5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> 17 * 8 = 136 (left: 8 136)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> 17 * 8 = 136 (left: 8 136) -> 136 / 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 12"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> Input: 4 6 12 -> 6 + 4 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "29"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 10 12) -> 7 + 10 = 17 (left: 12 17) -> 12 + 17 = 29 (left: 29) -> 29 / 2 = 14.5 (left: 14.5 29)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 13 120)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 * 13 = 78 (left: 78 22) -> 78 / 22 = 3.5454545454545454 (left: 3.5454545454545454)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "96"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps with the number 96.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps with the number 96. -> 96 / 16 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 16) -> 16 - 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "96"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps with the input 96.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 13 22) -> 22 - 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96) -> There are no possible next steps with the input 96. -> There are no possible next steps with the input 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> 17 / 2 = 8.5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 - 12 = 4 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> 17 / 2 = 8.5 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No more steps can be taken as the equation has been simplified to its simplest form."
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16) -> 16 / 2 = 8 -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form. -> No more steps can be taken as the equation has been simplified to its simplest form.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on. -> 3 * 5 = 15 (left: 15 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.8"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> There is only one number given, so there are no possible next steps to calculate. -> None",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.2222"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 * 10 = 100"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "Input: 4 16"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 16 / 4 = 4 (left: 4 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 16 / 4 = 4 (left: 4 16) -> 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "- Add the two numbers together"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations. -> - Add the two numbers together -> - Subtract the second number from the first number",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations. -> - Add the two numbers together -> - Subtract the second number from the first number -> 2 - 8 = -6 (left: -6 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "81"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81) -> 8 + 1 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81) -> 8 + 1 = 9 -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "11.67"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "- Add the two numbers together"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations. -> - Add the two numbers together -> - Divide one of the numbers by the other",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations. -> - Add the two numbers together -> - Divide one of the numbers by the other -> 14 / 2 = 7 (left: 8 7 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 * 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 * 10 = 100"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "Input: 4 16"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 4 * 16 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 1 + 6 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "11.67"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 1 9 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "Input: 4 16"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 16 - 4 = 12 (left: 4 12",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 16 - 4 = 12 (left: 4 12 -> 4 + 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 * 10 = 100"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 / 3 = 0.3333333333333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 / 3 = 0.3333333333333333 -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations. -> - Add the two numbers together",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 / 1 = 9 (left: 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "7 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.2222"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 / 9 = 1.2222 (left: 1.2222) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 * 10 = 100",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 5 + 5 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 * 10 = 100"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "Input: 4 16"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 16 / 4 = 4 (left: 4 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 3 9) -> Input: 4 16 -> 16 / 4 = 4 (left: 4 16) -> 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 8 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) * (4 - 4) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 12 / 5 = 2.4 (left: 2.4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) - (4 - 4) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 4 - 4 = 0 (left: 0 12)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) * (4 - 4) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "7 * 5 = 35 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) - (4 - 4) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16) -> 16 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7) -> 7 * 5 = 35 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> Input:",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 4 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": " -> There are no possible next steps given the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1 - 4) * 4 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) * (4 - 4) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 11"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) - (4 - 4) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 / 5 = 1.4 (left: 1.4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 7 / 5 = 1.4 (left: 1.4 12) -> 12 - 1.4 = 10.6 (left: 10.6)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8 -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 4 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45) -> 10 * 45 = 450 (left: 450)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "-4 14"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4 14) -> 14 - (-4) = 18 (left: 18)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 / 5 = 1.8 (left: 1.8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.55556 (left: 5.55556)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 + 5 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (2 + 3) * (9 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9) -> 9 + 2.67 = 11.67 (left: 8 11.67)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 -> 18 - 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 9 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "10 40"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10 40) -> 40 - 10 = 30 (left: 10 30)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with just the input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with just the input of 18. -> There are no possible next steps for the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with just the number 18. -> There are no possible next steps with just the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 + 5 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 + 3 = 30 (left: 30)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 + 5 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 + 5 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> None",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 5 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 5 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 - 9 = -4 (left: -4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 - 9 = -4 (left: -4 10) -> -4 * 10 = -40 (left: -40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6 -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 9 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 9 8) -> 3 + 9 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10 40)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 + 5 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (2 + 3) * (9 + 10) = 24"
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 * 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 3.1666666666666665 + 2.1666666666666665 = 5.333333333333333 (left: 5.333333333333333 - 1.)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 + 3.1666666666666665 = 5.333333333333333 (left: 3.1666666666666665 5.333333333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 + 3.1666666666666665 = 5.333333333333333 (left: 3.1666666666666665 5.333333333333333) -> 3.1666666666666665 + 5.333333333333333 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.1666666666666665 3.1666666666666665"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Input is complete. No further steps needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Input is complete. No further steps needed. -> Input is complete. No further steps needed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 * 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 * 3. -> 2.1666666666666665 * 3 = 6.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 * 3.1666666666666665 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 * 3.1666666666666665 =  -> 6.888888888888888",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the number 13."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 + 12 = 15 (left: 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 3 + 12 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 + 3.1666666666666665 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "-2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 + 3.1666666666666665 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 3 12"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 12 - 3 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed. -> Calculation has been completed.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12) -> 12 + 5 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 ( -> 3.1666666666666665 / 2.1666666666666665 = 1.4615384615384615 (left: 1.4615384615384615)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 19"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 1 * 19 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> N/A",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "30 / 2 = 15"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15 -> 30 / 15 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5.333333333333333 - 1."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 11"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 * 11 = 33 (left: 1 33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 * 11 = 33 (left: 1 33) -> 1 * 33 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 + 3.1666666666666665 = 5.333333333333332 (left: 5.333333333333332)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3.1666666666666665 + 2.1666666666666665 = 5.333333333333333"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 3.1666666666666665 + 2.1666666666666665 = 5.333333333333333 -> 5.333333333333333 / 2.1666666666666665 = 2.4615384615384617",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 3.1666666666666665 + 2.1666666666666665 = 5.333333333333333 -> 5.333333333333333 / 2.1666666666666665 = 2.4615384615384617 -> 5.333333333333333 - 2.1666666666666665 = 3.1666666666666665 (left: 3.1666666666666665 = 2.4615384615384617)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed. -> No possible next steps. Calculation has been completed.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 + 3.1666666666666665 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2.1667"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667) -> There are no possible next steps with the input 2.1667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "-2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 - 3.1666666666666665 = -5.333333333333333 (left: -5.333333333333333)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "30"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> N/A",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "30"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 3.1666666666666665 + 2.1666666666666665 = 5.333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 - 3.1666666666666665 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "17"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 2 + 3 = 5 (left: 5 12) -> 12 + 5 = 17 (left: 17) -> There are no possible next steps as there are no other numbers to operate with. The input 17 is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation is complete. No further steps needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation is complete. No further steps needed. -> Calculation is complete. No further steps needed.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 - 3.1666666666666665 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> No possible next steps with the input of just 7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed. -> No further steps are possible as the calculation has been completed.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 + 3.1666666666666665 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 2 16"
                }
            },
            "Step 4": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 1 + 2 = 3 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 3.1666666666666665 + 2.1666666666666665 = 5.333333333333333 (left: 5.333333333333333)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "17"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.1666666666666665 = 2.4615384615384617"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 3.1666666666666665 + 2.1666666666666665 = 5.333333333333333 -> 5.333333333333333 / 2.1666666666666665 = 2.4615384615384617 -> 5.333333333333333 - 2.1666666666666665 = 3.1666666666666665 (left: 3.1666666666666665 = 2.4615384615384617) -> 3.1666666666666665 + 2.4615384615384617 = 5.628205128205128 (left: 5.628205128205128)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3.1666666666666665 = 2.4615384615384617"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 3.1666666666666665 + 2.1666666666666665 = 5.333333333333333 -> 5.333333333333333 / 2.1666666666666665 = 2.4615384615384617 -> 5.333333333333333 - 2.1666666666666665 = 3.1666666666666665 (left: 3.1666666666666665 = 2.4615384615384617) -> 3.1666666666666665 / 2.461538461",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13) -> 13 / 6 = 2.1667 (left: 2.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "-2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.1666666666666665 3.1666666666666665"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1. -> 1 * 2 = 2 (left: 2.1666666666666665 3.1666666666666665) -> 2.1666666666666665 + 3.1666666666666665 = 5.333333333333332 (left: 5.333333333333332)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 13 / 6 = 2.1666666666666665 (left: 1 2.1666666666666665) -> 1 + 2.1666666666666665 = 3.1666666666666665 (left: 2.1666666666666665 3.1666666666666665) -> 3.1666666666666665 - 2.1666666666666665 = 1 (left: 1 3.1666666666666665) -> 1 - 3.1666666666666665 = -2.1666666666666665 (left: -2.1666666666666665 3.1666666666666665) -> -2.1666666666666665 / 3.1666666666666665 = -0.6837606837606837 -> There are no possible next steps as the calculation has been completed. -> Calculation is complete.",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9 -> 4 + 3 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8) -> 8 - 7 = 1 (left: 1) -> No operations can be performed with only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8) -> 8 - 7 = 1 (left: 1) -> No operations can be performed with only one number. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> 30 / 15 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as there are no numbers provided to perform operations on."
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 5 = 11 (left: 11 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 5 = 11 (left: 11 6) -> 11 + 6 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 2 * 2 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 2 * 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps as there are no numbers to work with."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "17"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 5 = 11 (left: 11 6) -> 11 + 6 = 17 (left: 17) -> 17 / 2 = 8.5 (left: 2 8 8.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 5 = 11 (left: 11 6) -> 11 + 6 = 17 (left: 17) -> 17 / 2 = 8.5 (left: 2 8 8.5) -> 8 + 2 = 10 (left: 2 10)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps since there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps since there is no input provided. -> There are no possible next steps since there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> There are no possible next steps with the input of 6.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> There are no possible next steps with the input of 6. -> Input: 14 48 2 1.33",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers to work with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers to work with. -> There are no possible next steps as there are no numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please enter a set of numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 8 0.75)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 8 0.75) -> 8 + 0.75 = 8.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "17"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 5 = 11 (left: 11 6) -> 11 + 6 = 17 (left: 17) -> There are no possible next steps with the input 17 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 5 = 11 (left: 11 6) -> 11 + 6 = 17 (left: 17) -> There are no possible next steps with the input 17 as there are no other numbers provided to perform operations with. -> N/A",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 6) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 6) -> 6 - 8 = -2 (left: -2 8) -> -2 + 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 6"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 5 0) -> 5 + 0 = 5 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 5 0) -> 5 + 0 = 5 (left: 0) -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 5 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 5 0) -> 5 + 0 = 5 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "66"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 * 2 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "66"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 6 + 6 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 6 + 6 = 12 -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 + 2.25 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2.25"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 - 8 = -5.75 (left: 8 -5.75)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "Input: 3 6"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5 9) -> Input: 3 6 -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 5 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 / 9 = 1.4444 (left: 1.4444)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 + 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> 8 - 2 = 6 (left: 6 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> ",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 9)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 * 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 * 1 = 5 (left: 1 5 6) -> 5 - 1 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 * 1 = 5 (left: 1 5 6) -> 5 * 1 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 * 1 = 5 (left: 1 5 6) -> 5 * 1 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 2 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 36) -> None - 36 is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 3 * 12 = 36",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 3 * 12 = 36 -> 3 + 12 = 15 (left: 15 36)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 2 8"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 2 2 8) -> 2 + 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "Input: 3 6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 -5.75"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 - 8 = -5.75 (left: 8 -5.75) -> 8 / (-5.75) = -1.39130434783 (left: -1.39130434783)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There is only one possible next step: 4 itself (left: 4)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 * 1 = 5 (left: 1 5 6) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "Input: 3 6 9"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "2.25 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 * 1 = 5 (left: 1 5 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 + 5 = 10 (left: 10 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 + 5 = 10 (left: 10 25) -> 10 * 25 = 250 (left: 250)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 2 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 + 1 = 5 (left: 5 9) -> Possible next steps: -> 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5 9) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 -5.75"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 - 8 = -5.75 (left: 8 -5.75) -> 8 * (-5.75) = -46 (left: -46)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 3 + 7 = 10 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 3 + 7 = 10 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9 13"
                }
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10.5 + 2 = 12.5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 12.5 / 2 = 6.25",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 12.5 / 2 = 6.25 -> 12.5 / 2 = 6.25 (left: 6.25)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "-1"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 * 6.25 = 32.8125 (left: 32.8125)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10.5 + 2 = 12.5"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 =  -> 11 / 4 = 2.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 - 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 18 11"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 11 = 1.63636363636 (left: 1 1.63636363636)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10.5 + 2 = 12.5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 + 5.25 = 17.75 (left: 2 17.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 * 6.25 = 32.8125 (left: 32.8125)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> There is only one number left, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 1 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 1 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10.5 + 2 = 12.5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 2 / 10.5 = 0.1904761904761905 (left: 0.1904761904761905 12.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 2 / 10.5 = 0.1904761904761905 (left: 0.1904761904761905 12.5) -> 0.1904761904761905 - 12.5 = -12.30952380952381 (left: -12.309523809523",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "-1"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 + 6.25 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "-1"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 4 = 2.75"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 / 4 =  -> 11 / 4 = 2.75 -> 11 + 4 = 15.0 (left: 15.0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 6 8) -> 6 - 1 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10.5 + 2 = 12.5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 - 2 = 8.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 - 2 = 8.5 -> 10.5 * 2 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 - 6.25 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 13"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10.5 12.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> N/A",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10.5 + 2 = 12.5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 2 + 10.5 = 12.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 2 + 10.5 = 12.5 -> 2 * 10.5 = 21 (left: 21 12.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 - 6.25 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10.5 + 2 = 12.5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10.5 + 2 = 12.5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 * 6.25 = 32.8125 (left: 32.8125)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "21 12.5"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 2 + 10.5 = 12.5 -> 2 * 10.5 = 21 (left: 21 12.5) -> 21 * 12.5 = 262.5 (left: 262.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "10.5 * 2 = 21"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 1 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 1 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input of 11. -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 1 / 3 = 0.33 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 1 / 3 = 0.33 ( -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 - 6.25 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> None",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 3 5"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 1 + 3 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 1 + 3 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 + 6.25 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 7 28)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> There are no possible next steps with the input of 16. -> 16 + 2 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10.5 + 2 = 12.5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 5.25 * 2 = 10.5 (left: 10.5 12.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 + 6.25 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "10.5 + 2 = 12.5"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 - 2 = 8.5 ",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 1 + 3 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 1 + 3 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5.25 6.25"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5 + 2 = 12.5) -> 10.5 / 2 = 5.25 (left: 5.25 2 12.5) -> 12.5 / 2 = 6.25 (left: 5.25 6.25) -> 5.25 + 6.25 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 * 5 = 15 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps. -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "There are no possible next steps with the number 36."
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36. -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 8 7"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 -> 8 * 0.875 = 7 (left: 7 8 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.875 * 8 = 7"
                }
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 -> 0.875 * 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.875 * 8 = 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 + 8 = 17 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.875 * 8 = 7"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 -> 8 * 0.875 = 7 (left: 7 8 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 60 / 13 = 4.615384615384615 (left: 4.615384615384615)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 60 / 13 = 4.615384615384615 (left: 4.615384615384615) -> 4.615384615",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "There are no possible next steps with the number 36."
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36. -> None",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 25 + 5 = 30 (left: 30 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 25 + 5 = 30 (left: 30 3) -> 3 / 30 = 0.1 (left: 0.1)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "There are no possible next steps with the number 36."
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36. -> None.",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "There are no possible next steps with the number 36."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 60 - 13 = 47 (left: 47)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 60 - 13 = 47 (left: 47) -> There is only one number provided, so there are no possible next steps for calculation.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 / 12 = 0.25 (left: 0.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 + 60 = 73 (left: 73)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 + 60 = 73 (left: 73) -> 73 + 2 = 75",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 12 = 0 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 12 = 0 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "12 13 15"
                }
            },
            "Step 6": {
                "Step": "5 + 10 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 * 60 = 780 (left: 780)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 * 60 = 780 (left: 780) -> 7 + 8 + 0 = 15 (left: 15 7)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: 15 - 8 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 + 60 = 73 (left: 73)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 + 60 = 73 (left: 73) -> 7 + 3 = 10",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> There is only one number, so no additional operations can be performed.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> There is only one number, so no additional operations can be performed. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 12 18"
                }
            },
            "Step 6": {
                "Step": "13 + 5 = 18 (left: 10 12 18) -> 10 * 12 = 120 (left: 18 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 - 60 = -47 (left: -47)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 - 60 = -47 (left: -47) -> There are no possible next steps with the input of -47.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 12 13"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 5 * 25 = 125 (left: 125",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 5 * 25 = 125 (left: 125 -> 12 - 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 - 9 = 4 (left: 4) -> 4 + 2 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13) -> 13 - 9 = 4 (left: 4) -> 4 + 2 = 6 (left: 2 6) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "17 23"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17 23) -> 17 - 23 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "13 60"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 + 60 = 73 (left: 73)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 5 * 12 = 60 (left: 13 60) -> 13 + 60 = 73 (left: 73) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "7 8 7"
                }
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 60"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432) -> 42 - 3 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the number 30 as there are no other numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the number 30 as there are no other numbers provided to perform operations on. -> There are no possible next steps with the number 30 as there are no other numbers provided to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 60"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 60)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 60"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 60 240)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 12 - 36 = -24 (left: -24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 12 - 36 = -24 (left: -24) -> -24 * 2 = -48 (left: -48)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "30"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "60 240"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 60 240) -> 60 / 240 = 0.25 (left: 0.25 240)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "30"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Please provide a set of numbers to find possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps. -> It looks like you haven't provided a set of numbers. Please input a set of numbers separated by spaces to find the possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 3 * 4 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 * 6 - 12) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> There are no possible next steps as there are no other numbers provided. -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 60"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 * (6 / 2)) = 24",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 3 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 60"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "18"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6) -> 24 - 6 = 18 (left: 18) -> 8 + 8 = 16 (left: 16 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432) -> 4 + 3 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4 60"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 + 60 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "16 18"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 60"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 6 6"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 2 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 * (6 / 2)) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 24 6) -> 24 - 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 * (6 / 2)) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "12 5"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 3 + 9 = 12 (left: 12 5) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "432"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "30"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 2) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 4 + 6 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "60 240"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 60 240) -> 240 - 60 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "60 240"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 ( -> 6 * 10 = 60 (left: 4 60) -> 4 * 60 = 240 (left: 60 240) -> 240 - 60 = 180 (left: 180 240)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "48 / 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 2 = 24 -> 48 + 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 3 "
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3  -> 3 / 2 = 1.5 (left: 1.5) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((6 * 2) * (6 * 6)) - 12 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "48 / 2 = 24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 2 = 24 -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "48 / 2 = 24"
                }
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0.375"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)   -> 0.375 - 2 = -1.625",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)   -> 0.375 - 2 = -1.625 -> 2 - 0.375 = 1.625 (left: 1",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5040"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 - 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 + 3 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "36 3"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-53 57"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 / 22 = 0.5909090909090909 (left: 0.5909090909090909)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "55"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57  -> 2 - 55 = -53 (left: -53 57)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 - 22 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 *"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 + 5 = 10 (left: 10 *)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 + 5 = 10 (left: 10 *) -> 10 * 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "0.375"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: -> 17 * 6 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 + 3 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "0.375"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)   -> 0.375 * 2 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-53 57"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 15"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 15 - 7 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15) -> 15 - 7 = 8 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 12 17"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 * 3 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "42 43.2"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 / 10 = 1.2 (left: 1.2 42) -> 1.2 + 42 = 43.2 (left: 42 43.2) -> 42 - 43.2 = -1.2",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5040"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42) -> 120 * 42 = 5040 (left: 5040) -> 5040 / 5 = 1008 (left: 1008)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 12 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 + 17 = 89 (left: 89)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: 3 5 7 9 -> 3 * 5 = 15 (left: 7 9 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "55"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> There is only one number provided, so there are no possible next steps to perform any operations. The input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> There is only one number provided, so there are no possible next steps to perform any operations. The input is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 12 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 * 3 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "55"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42) -> 120 * 42 = 5040 (left: 5040)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-9"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 - 22 = -9 (left: -9) -> There are no possible next steps with the input -9.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22) -> 13 - 22 = -9 (left: -9) -> There are no possible next steps with the input -9. -> There are no possible next steps with the input -9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "35"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 + 17 = 35 (left: 35) -> 35 / 2 = 17.5 (left: 2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-53 57"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 / 10 = 1.2 (left: 1.2 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 / 10 = 1.2 (left: 1.2 42) -> 1.2 + 42 = 43.2 (left: 42 43.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0.375"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)   -> 0.375 * 2 = 0.75",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)   -> 0.375 * 2 = 0.75 -> 0.375 / 2 = 0.1875 (left: 0.1875)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "102"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 + 17 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 + 3 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "42 43.2"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 / 10 = 1.2 (left: 1.2 42) -> 1.2 + 42 = 43.2 (left: 42 43.2) -> 42 / 43.2 = 0.9722222222 (left: 0.9722222222)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input -9."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 1": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 70 = 82 (left: 6 82)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 12 + 70 = 82 (left: 6 82) -> 6 * 82 = 492 (left: 492)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5040"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42) -> 120 * 42 = 5040 (left: 5040) -> 5040 / 4 = 1260 (left: 1260)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 12 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17) -> 18 / 17 = 1.05882352941 (left: 1.05882352941)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 + 3 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5040"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42) -> 120 * 42 = 5040 (left: 5040) -> 5 * 0 * 4 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-53 57"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 42 - 10 = 32 (left: 12 32) -> 12 / 32 = 0.375 (left: 0.375)  ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5040"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 12 * 10 = 120 (left: 120 42) -> 120 * 42 = 5040 (left: 5040) -> 5040 / 6 = 840 (left: 840)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "36 3"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 12 3) -> 12 * 3 = 36 (left: 36 3) -> 36 + 3 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-53 57"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57  -> 2 - 55 = -53 (left: -53 57) -> -53 / 57 \u2248 -0.93 (left: -0.93)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-53 57"
                }
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 + 12 = 22.4 (left: 22.4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 * 12 = 124.8 (left: 124.8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.5"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 * 1 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> There are no possible next steps for the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 / 12 = 0.8666666666666667 (left: 0.8666666666666667)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "28"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12) -> 40 - 12 = 28 (left: 28) -> 28 - 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "28"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12 * 8 = "
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 * 1 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 * 1 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 / 12 = 0.8666666666666667 (left: 0.8666666666666667)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "Input: 28 31 12"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12 -> 28 / 31 = 0.903225806 (left: 12 0.903225806)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 8 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = -",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = - -> 5 - 8 = -3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 - 12 = -1.6 (left: -1.6)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 8 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> No valid operations can be performed with the input 0.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12) -> 40 - 12 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 * 12 = 124.8 (left: 124.8)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "12 -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1.14285714286 4 12"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 12 - 8 = 4 (left: 1.14285714286 4 12) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 12 - 8 = 4 (left: 1.14285714286 4 12) ->  -> Please provide a list of numbers to continue with the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 + 8 = 20"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 * 12 = 124.8 (left: 124.8)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "Input: 28 31 12"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40) -> Input: 28 31 12 -> 28 + 31 = 59 (left: 12 59)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "0 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 1.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 / 12 = 0.86666666667 (left: 0.86666666667)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 8 = 20",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 10.4 + 12 = 22.4 (left: 22.4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1.14285714286 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 12 - 8 = 4 (left: 1.14285714286 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5 - 8 = -3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0) -> No possible next steps with input of 0.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10.4 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 12 - 10.4 = 1.6 (left: 1.6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12) -> 12 - 1.6 = 10.4 (left: 10.4 12) -> 12 - 10.4 = 1.6 (left: 1.6 12) -> 1.6 + 12 = 13.6 (left: 13.6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10.4 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> Input: 3 6 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> Input: 3 6 2 -> 6 / 3 = 2 (left: 2 2 2)",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) * (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 3 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 3 "
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.3333333333333333 * 3 = 1.0"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 3 8"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 3 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333) -> 0.3333333333333333 * 3 = 1.0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 23"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8 23) -> 8 * 23 = 184 (left: 184)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: -> 24 - 8 = 16 (left: 16) -> No possible next steps, the equation is complete with the result of 16.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.33 6 8"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 6 / 1.33 = 4.51 (left: 4.51 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: 4 * (6 * 3) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 23"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8 23) -> 8 - 23 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 - 8 = 16 (left: 16) -> No possible next steps since there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.33 6 8"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 8 - 1.33 = 6.67 (left: 6.67 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.625"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 23"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 8 - 3 = 5 (left: 5).",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.3333333333333333 * 3 = 1.0"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.625"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 (left: 1.3125)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 23"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8 23) -> 8 / 23 \u2248 0.348 (left: 0.348)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1) -> 1 * 1 = 1 (left: 1 1)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) * (3 / 8) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 3 "
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8 23)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 23"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8 23) -> 8 / 23 = 0.34782608695652173 (left: 0.34782608695652173)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2.625 * 2 = 5.25"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 * 2 = 5.25 -> 2.625 - 2 = 0.625",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 4 2)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 3 * 3 = 9 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "8 8"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (3 + 8) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "16"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps, the input number is already the result of the previous operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 23"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.625"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 * 2 = 5.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 8"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24) -> 11 / 24 = 0.4583 (left: 0.4583)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.33 6 8"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 23"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 3  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8 23) -> 8 - 23 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "64"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64) -> There are no possible next steps for the number 64 as it is already the final result.",
                "Pruning": null
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3.67"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> There are no possible next steps for the input 3.67.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> There are no possible next steps for the input 3.67. -> There are no possible next steps for the input 3.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 7 2"
                }
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2 6 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "81"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> 81 + 2 = 83",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> 81 + 2 = 83 -> 81 - 2 = 79 (left: 79)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 9 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 6)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "7 9 11"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps for the input 81 as it is a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 * 8 = 64",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 15 + 11 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> 33 - 8 = 25 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 + 40 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2 6 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 - 9 = -2 (left: -2 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 - 9 = -2 (left: -2 11) -> -2 * 11 = -22 (left: -22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2 6 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "81"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> 8 + 1 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> 8 + 1 = 9 -> 8 * 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 9 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2 6 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "81"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> There are no possible next steps for the input 81 as it is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> There are no possible next steps for the input 81 as it is a single number. -> There are no possible next steps for the input 81 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 + 40 = 48 (left: 40)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "81"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> 81 + 2 = 83",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 11 + 70 = 81 (left: 81) -> 81 + 2 = 83 -> 2 + 81 = 83 (left: 83)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 48"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 17 11) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48) -> 8 + 40 = 48 (left: 40)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "8 9 11"
                }
            },
            "Step 6": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 + 2 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 48"
                }
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 / 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 / 2 =  -> 13 / 2 = 6.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230769",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230769 -> 1.1538461538461537 + 2 = 3.1538461538461533 (left: 3.1538461538461533 0.5769230769230769)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 8 + 9 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 / 0.5769230769230768 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "13 / 2 = 6.5"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 / 2 =  -> 13 / 2 = 6.5 -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2.3076923076923075 0.5769230769230768"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074 (left: 2.3076923076923074)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There is no possible next step with the input of 15."
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is no possible next step with the input of 15. -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 12 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 * 0.5769230769230768 = 1.3307692307692306 (left: 1.3307692307692306)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 17"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 8 + 9 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.5769230769230769 2.3076923076923074"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 * 0.5769230769230768 = 1.3307692307692305 (left: 1.3307692307692305)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.5769230769230769 2.3076923076923074"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230769  -> 1.1538461538461537 * 2 = 2.3076923076923074 (left: 0.5769230769230769 2.3076923076923074) -> 0.5769230769230769 + 2.3076923076923074 = 2.8846153846153843 (left: 2.8846153846153843)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3.1538461538461533 0.5769230769230769"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230769 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230769  -> 1.1538461538461537 * 2 = 2.3076923076923074 (left: 0.5769230769230769 2.3076923076923074)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left -> 3 / 12 = 0.25 (left: 0.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 / 0.5769230769230768 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "48"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 - 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1.1538461538461537 * 2 = 2.3076923076923074"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 2 = 3.1538461538461537",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 2 = 3.1538461538461537 -> 3",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 6 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 * 0.5769230769230768",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 * 0.5769230769230768 -> 2.3076923076923075 - 0.5769230769230768 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 + 0.5769230769230768 = 2.8846153846153843 (left: 2.8846153846153843)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1.1538461538461537 / 2 = 0.5769230769230769"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923075 -> 1.1538461538461537 / 2 = 0.5769230769230769 -> 2 / 1.1538461538461537 = 1",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with the given input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 3 9) -> 3 + 9 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "21"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 / 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 13 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074 -> 1.1538461538461537 / 2 = 0.5769230769230768",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923075",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923075 -> 1.1538461538461537 / 2 = 0.5769230769230769",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.5769230769230769 2.3076923076923074"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230769  -> 1.1538461538461537 * 2 = 2.3076923076923074 (left: 0.5769230769230769 2.3076923076923074) -> 0.5769230769230769 * 2.3076923076923074 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "16"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2.3076923076923075 0.5769230769230768"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 + 0.5769230769230768 = 2.8846153846153843 (left: 2.8846153846153843)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.5769230769230769 2.3076923076923074"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230769  -> 1.1538461538461537 * 2 = 2.3076923076923074 (left: 0.5769230769230769 2.3076923076923074) -> 0.5769230769230769 + 2.3076923076923074",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is no possible next step with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 1 = 2.1538461538461537",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 1 = 2.1538461538461537 -> 1.1538461538461537 / 1 = 1.1538461538461537 (left: 1.153846153846153",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 + 0.5769230769230768 = 2.8846153846153843 (left: 0.5769230769230768 2.8846153846153843)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 + 0.5769230769230768 = 2.8846153846153843 (left: 0.5769230769230768 2.8846153846153843) -> 2.8846153846153843 - 0.5769230769230768 = ",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074 (left: 2.3076923076923074)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1.1538461538461537"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 - 12 = -9 (left: -9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 - 12 = -9 (left: -9 12) -> -9 * 12 = -108 (left: -108)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 2 = 3.1538461538461533 (left: 3.153846153846153",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "-2"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input -2.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> There are no possible next steps for the input 1.1538461538461537 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> There are no possible next steps for the input 1.1538461538461537 as it is already a single number. -> There are no possible next steps for the input 1.1538461538461537 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.3076923076923075 0.5769230769230768"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 + 0.5769230769230768 = 2.8846153846153843 (left: 0.5769230769230768 2.8846153846153843)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 2 = 0.5769230769230768 -> 1.1538461538461537 * 2 = 2.3076923076923075 (left: 2.3076923076923075 0.5769230769230768) -> 2.3076923076923075 + 0.5769230769230768 = 2.8846153846153843 (left: 0.5769230769230768 2.8846153846153843) -> 0.5769230769230768 * 2.8846153846153843 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1.1538461538461537"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 13 13) -> 2 + 13 = 15 (left: 13 15) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074 -> 1.1538461538461537 / 2 = 0.5769230769230768",
                "Pruning": null
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 96"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 + 2 * 5) * 12 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 96"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "10 + 2 = 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 - 10 = 0",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5) -> 5 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 5 - 3 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 - "
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5) -> 5 -  -> 5 - 8 = -3",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 / 2 = 6"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6 -> 12 / 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 - "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((2 * 5) + 2) * 12 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "12 8"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 8 + 8 = 16 (left: 16 96)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 8 + 8 = 16 (left: 16 96) -> 6 + 8 = 14 (left: 14 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 - 12 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "68"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "12 8"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 / 5 = 0.8 (left: 0.8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 / 5 = 0.8 (left: 0.8 12) -> 12 - 0.8 = 11.2 (left: 11.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "12 8"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96) -> 64 - 96 = -32 (left: -32)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 2 "
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 - 2 = 8 (left: 8 2) -> 8 + 2 = 10 (left: 10) -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88) -> 88 - 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 2 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 2 "
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 - 2 = 8 (left: 8 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 - 2 = 8 (left: 8 2) -> 8 + 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 * 5) + (12 * 2) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "14 1"
                }
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12)  -> 12 * 8 = 96 (left: 8 96) -> 8 + 8 = 16 (left: 16 96) -> 6 + 8 = 14 (left: 14 1) -> 14 * 1 = 14 (left: 1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "14 1"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 - 2 = 0 (left: 0 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 5 12"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 2 "
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "0.8461538461538461"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539 -> 0.8461538461538461 + 2 = 2.846153846153846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 6 + 8 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 6 + 8 = 14 (left: 14 11) -> 14 - 11 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 - 0.846 = 0 (left: 0 0.846)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 - 0.846 = 0 (left: 0 0.846) -> 0 + 0.846 = 0.846 (left: 0.846)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the input 80 as it is a single number."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps for the input 80 as it is a single number. -> There are no possible next steps for the input 80 as it is a single number. -> There are no possible next steps for the input 80 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number. -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 3 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 3 5 -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 1 / 3 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "312"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1 = 4 (left: 4 2)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4) -> 4 - 2 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 6 + 8 = 14 (left: 14 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 6 + 8 = 14 (left: 14 11) -> 14 / 11 = 1.27 (left: 1.27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 8 3) -> 6 / 3 = 2 (left: 2 8) -> Input: 10 4 16 6",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> 0.846 * 2 = 1.692",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> 0.846 * 2 = 1.692 -> 0.846 + 2 = 2.846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 8 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 8 3) -> 6 / 3 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.846 + 2 = 2.846"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> 0.846 * 2 = 1.692 -> 0.846 + 2 = 2.846 -> 2 - 0.846 = 1.154 (left: 1.154 2.846)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "80"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8) -> 10 * 3 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "312"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 312 - 3 = 309 (left: 309)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.8461538461538461 + 2 = 2.846153846153846"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539 -> 0.8461538461538461 + 2 = 2.846153846153846 -> 0.8461538461538461 * 2 = 1.6923076923076922 (left: 1.6923076923076922 2.846153846153846)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "80"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps for the input 80 as it is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps for the input 80 as it is a single number. -> There are no possible next steps for the input 80 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.8461538461538461 + 2 = 2.846153846153846"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539 -> 0.8461538461538461 + 2 = 2.846153846153846 -> 2 / 0.8461538461538461 = 2.3636363636363633 (left: 2.3636363636363633 2 2.846153846153846)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "312"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 / 1 = 3 (left: 3 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 / 1 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11) -> 1.33 * 11 = 14.63 (left: 14.63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 + 3 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "80"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input \"80\" as it is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input \"80\" as it is a single number. -> There are no possible next steps with the input \"80\" as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 6 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> 11 - 6 =  -> 11 - 6 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 8 11) -> Input: 1 3 -> 3 / 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.846"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6.66666666667 - 2 = 4.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 - 2 = 4.66666666667 (left: 4.66666666667 3.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "9 + 2 = 11"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 8 11) -> 8 - 4.5 = 3.5 (left: 3.5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 4 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667) -> There is only one number given, so there are no possible next steps to take. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667) -> There is only one number given, so there are no possible next steps to take. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given. -> N/A",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5) -> 8 + 1.5 = 9.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6.66666666667 - 2 = 4.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 + 2 = 8.66666666667 (left: 8.66666666667)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 18"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 / 8 = 1.5 (left: 1.5 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "22 64"
                }
            },
            "Step 5": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 + 12 = 22 (left: 22 64) -> 22 / 64 \u2248 0.34375 (left: 0.34375)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 + 12 = 22 (left: 22 64) -> 22 / 64 \u2248 0.34375 (left: 0.34375) -> 0.34375 * 2 = 0.6875",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 12 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 12 120) -> 12 * 10 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3.5 11"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "114"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114) -> 1 * 14 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 12 64"
                }
            },
            "Step 4": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 + 12 = 22 (left: 22 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps as the input is already a single number. -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps as the input is already a single number. -> There are no possible next steps as the input is already a single number. -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 + 8 = 6",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "9 + 2 = 11"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 + 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "0 10 12"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6.666666666666667 * 13.333333"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 13.333333333333334 - 6.666666666666667 = 6.666666666666667 -> 6.666666666666667 * 13.333333 -> 6.666666666666667 - 13.333333 = -6.666666666666667 (left: -6.666666666666667)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 0 12"
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 10 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6.666666666666667 + 6.666666666666667 = 13.333333333333334"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 13.333333333333334 - 6.666666666666667 = 6.666666666666667",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 13.333333333333334 - 6.666666666666667 = 6.666666666666667 -> 6.666666666666667 * 13.333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6.666666666666667 * 13.333333"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334 -> 13.333333333333334 - 6.666666666666667 = 6.666666666666667 -> 6.666666666666667 * 13.333333 -> 6.666666666666667 / 13.333333 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input 0.8333 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667) -> 6.666666666666667 + 6.666666666666667 = 13.333333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6.166666666666667"
                }
            },
            "Step 3": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667) -> There is only one number given, so there are no possible next steps to take.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667) -> There is only one number given, so there are no possible next steps to take. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps as the input is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "22 64"
                }
            },
            "Step 6": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 10 + 12 = 22 (left: 22 64) -> 22 - 64 = -42 (left: -42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 64"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "114"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114) -> 1 + 14 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 18"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 8 = 2.25 (left: 2.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.5 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 / 8 = 1.5 (left: 1.5 18) -> 18 / 1.5 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 / 8 = 1.5 (left: 1.5 18) -> 18 / 1.5 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "Input is already a single number."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "114"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 18 + 96 = 114 (left: 114) -> 14 * 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "8 12 18"
                }
            },
            "Step 4": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 + 12 = 20 (left: 20 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> No further steps needed as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input \"22\" as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 + 2 = 11"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> 11 / 4.5 = 2.44444 (left: 2.44444)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9 + 2 = 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667) -> There is only one number given, so there are no possible next steps to take. -> There are no possible next steps as there is only one number given. -> Since there is only one number given, there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74) -> 74 / 12 = 6.166666666666667 (left: 6.166666666666667) -> There is only one number given, so there are no possible next steps to take. -> There are no possible next steps as there is only one number given. -> Since there is only one number given, there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 10 + 0 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input of 0.8333.",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> 18 + 8 = 26 (left: 8) ",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 - 8 = -5"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 2.99"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99) -> 2.99 + 14.99 = 17.98 (left: 17.98)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 - 8 = -5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 * 2.99 = 35.88 (left: 2.99 35.88)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 * 2.99 = 35.88 (left: 2.99 35.88) -> 2.99 + 35.88 = 38.87 (left: 38.87)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "37 + 2 = 39"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.67 4.87"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87) -> 2.67 - 4.87 = -2.2 (left: -2.2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 5 13"
                }
            },
            "Step 4": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 13 - 1 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9 12) -> 9 + 12 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9 12) -> 9 + 12 = 21 (left: 8 21) -> 10 + 5 = 15 (left: 15 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "13 / 3 = "
                }
            },
            "Step 7": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number provided, so there are no possible next steps to take.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> None.",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "37"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> 37 + 2 = 39",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 * 2.99 = 35.88 (left: 2.99 35.88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 * 2.99 = 35.88 (left: 2.99 35.88) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 9.01 - 2.99 = 6.02 (left: 6.02)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "37 + 2 = 39"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9 12) -> 9 + 12 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9 12) -> 9 + 12 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "37 + 2 = 39"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 3 + ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 3 +  -> 3 + 12 = 15 (left",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.67 4.87"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87) -> Possible",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 8 13) -> 13 - 4 = 9 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99) -> 10",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "37 + 2 = 39"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 + 9.01 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 + 9.01 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 / 2.99 = 4.01 (left: 2.99 4.01)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 / 2.99 = 4.01 (left: 2.99 4.01) -> 2.99 + 4.01 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "15 3"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 - 8 = -5"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 - 8 = -5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99) -> 14.99 / 2.99 = 5.0201 (left: 5.0201)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "13 / 3 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "37 + 2 = 39"
                }
            },
            "Step 7": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> 37 + 2 = 39 -> None. The equation 37 + 2 = 39 is already solved and there are no further steps to be taken.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 + 13 = 37 (left: 37) -> 37 + 2 = 39 -> None. The equation 37 + 2 = 39 is already solved and there are no further steps to be taken. -> None.",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.67 4.87"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87) -> 2.67 * 4.87 = 12.99 (left: 12.99)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 / 2.99 = 4.01 (left: 2.99 4.01)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 / 2.99 = 4.01 (left: 2.99 4.01) -> 2.99 + 4.01 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 - 8 = -5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 2.99 + 9.01 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Possible next steps"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 + 5 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 - 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 * 2.99 = 35.88 (left: 2.99 35.88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 * 2.99 = 35.88 (left: 2.99 35.88) -> 2.99 + 35.88 = 38.87 (left: 38.87)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 2.99"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99) -> 14.99 / 2.99 = 5 (left: 5 14.99)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.67 4.87"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13) -> 13 / 2.67 = 4.87 (left: 2.67 4.87) -> 2.67 / 4.87 = 0.548 (left: 0.548)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 - 2.99 = 9.01 (left: 2.99 9.01) -> 9.01 - 2.99 = 6.02 (left: 6.02)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "12 2.99"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12) -> 8 / 2.67 \u2248 2.99 (left: 12 2.99) -> 12 + 2.99 = 14.99 (left: 2.99 14.99) -> 2.99 + 14.99 = 17.98 (left: 17.98)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "37 + 2 = 39"
                }
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "There is only one number provided, so there are no possible next steps for calculations."
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations. -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations. -> Possible next steps: -> - 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 - 0.1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8 9"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 10 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "66"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68 (left: 68)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> There is only one possible next step: 0.1 + 0.1 = 0.2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> There is only one possible next step: 0.1 + 0.1 = 0.2 -> 0.1 * 0.1 = 0.01",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "66"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 / 2 = 33 (left: 2 33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 / 2 = 33 (left: 2 33) -> 2 + 33 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "7 16 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 * 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "-2 -2.66666"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5) -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10) -> Possible next steps: -> There are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5) -> There are no possible next steps with the input of only 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5) -> There are no possible next steps with the input of only 5. -> There are no possible next steps with the input of only 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations. -> Possible next steps: -> - 2 + 8 = 10 (left: 8 10 14) -> 8 + 10 = 18 (left: 18 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations. -> Possible next steps: -> - 2 + 8 = 10 (left: 8 10 14) -> 8 + 10 = 18 (left: 18 14) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "There is only one number provided, so there are no possible next steps for calculations."
                }
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to perform operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to perform operations. -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "8 15"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> Input: 5 5 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> Input: 5 5  -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> There is only one possible next step: 0.1 * 0.1 = 0.01",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> There is only one possible next step: 0.1 * 0.1 = 0.01 -> 0.1 - 0.1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input of only 5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 - 8 = 2 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.33333 - 2 = -0.66667"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667 -> 1.33333 * -2 = -2.66666 (left: -2 -2.66666)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 + 0.1 = 0.2 (left: 0.2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "4"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 - 1 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There is no possible next step with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 2 = 5 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 7 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 + 0.1 = 0.2 (left: 0.2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.33333 - 2 = -0.66667"
                }
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667 -> 1.33333 / -2 = -0.66667 (left: -0.66667 -0.66667)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to find possible next steps. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 - 1 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 - 1 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.33333 - 2 = -0.66667"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667 -> 1.33333 + 2 = 3.33333 (left: -0.66667 3.33333)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667 -> 1.33333 + 2 = 3.33333 (left: -0.66667 3.33333) -> -0.66667 / 3.33333 = -0.2 (left: -0.2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> Input: 5 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> Input: 5 9 -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.1"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 - 0.1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 10 - 5 = 5 -> 10 + 5 = 15 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no more possible next steps with the input 5."
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 25 - 5 = 20 (left: 5 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 25 - 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 / -3 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 / -3 = -2 (left: -2) -> -2",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "5 + 5 = 10"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with the input 4.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with the input 4. -> There are no possible next steps with the input 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 + (-3) = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 + (-3) = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 + 8 = 8.875 (left: 8.875)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 + 10 = 17 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 10 13"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 * (-3) = -18 (left: -18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 * (-3) = -18 (left: -18) -> -18 * 2 = -36 (left: -36)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5 25 "
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with the input of 4. -> There are no possible next steps with the input of 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 25 + 5 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3.5 8"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8) -> 3.5 * 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input of 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 - (-3) = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 - (-3) = 9 -> 6 - (-3) = 9",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - 4 = 0 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 6 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 / (-3) = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 / (-3) = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 / 0.875 = 9.14285714286 (left: 9.14285714286 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 / 0.875 = 9.14285714286 (left: 9.14285714286 8) -> 9.14285714286 - 8 = 1.14285714286 (left: 1.14285714286)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "0.875 8"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 + 8 = 8.875 (left: 8.875)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "6 23"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 + (-3) = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 + (-3) = 3 (left: 3) -> 3 + 3 = 6",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 - 1 = 5"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 + 10 = 17 (left: 10 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 2 * 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 2 * 10 = 20 -> 20 - 2 = 18 (left: 18 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 23"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23) -> 23 - 6 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23) -> 23 - 6 = 17 (left: 17) -> 17 + 8 = 25 (left: 8)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "18 20"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no more possible next steps with the input 5."
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> Input: 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> Input: 5 -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 5 * 25 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input of 4."
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with the input of 4. -> There are no possible next steps with the input of 4. -> There are no possible next steps with the input of 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 + (-3) = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 + (-3) = 3 (left: 3) -> 3 - 2 = 1 (left: 1 8 14)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> No possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 - 1 = 5"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 1 - 6 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "-2 8"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2 8) -> -2 / 8 = -0.25 (left: -0.25)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.875 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 27 / 9 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 27 / 9 = -> 27 / 9 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 / -3 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 / -3 = -2 (left: -2) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input 4."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 + 13 = 23 (left: 6 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 25 "
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 27 / 9 = 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 + 5 = 10 -> 5 * 5 = 25 (left: 5 25  -> 27 / 9 = 3 -> 27 * 9 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "-2 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 -3"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 + (-3) = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 13 = -3 (left: 6 -3) -> 6 + (-3) = 3 (left: 3) -> 3 + 14 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "18 20"
                }
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38 -> 36 - 2 = 34 (left: 34 2 38)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> There are no possible next steps with the input of \"9\" given the numbers 2, 8, 8, 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps with only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps with only one number. -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> Possible next steps",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> Possible next steps -> 8 + 7 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "34 2 38"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 - 1 = 8 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> 18 + 8 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "288 44"
                }
            },
            "Step 8": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44 -> 36 * 8 = 288 (left: 288 44) -> 288 - 44 = 244 (left: 244)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the input 36."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 4 = 9 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-1"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 8 - 9 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> 18 / 9 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the input 36."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 9 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no more possible next steps with the number 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> There are no more possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: -> 9 * 9 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44 -> 36 * 8 = 288 (left: 288 44)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> 6 * 3 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> 6 * 3 = 18 -> 3 - 6 = -3 (left: -3 18)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> 9 / 9 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13) -> 18 - 13 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number in the input. -> No possible next steps as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 9 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-1"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9) -> 8 - 9 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation.",
                "Pruning": null
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12.5"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no possible next steps for the input 12.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12 / 2 = 6"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 12 + 2 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 7 11"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 14"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 12 + 2 = 14 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1 36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 33"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3 -> 11 * 3 = 33 (left: 3 33) -> 33 - 3 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input: 10 2"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 / 2 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36 / 2 = 18"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 36"
                }
            },
            "Step 8": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 6"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 4 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 36"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> 6 * 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> 6 * 4 -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2 4 6"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3 -> 11 * 3 = 33 (left: 3 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 2 = 16 (left: 16 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 2 = 16 (left: 16 18) -> 16 + 18 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 7 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "8"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> 4 / 6 = 0.66666666667 (left: 0.66666666667)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "110"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110 as it only contains one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2 4 6"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "68"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2 4 6"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 6"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> Input: 3 9 12",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3 33"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3 -> 11 * 3 = 33 (left: 3 33) -> 3 + 33 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36 / 2 = 18"
                }
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 36"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "5 2"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 / 2 = 5 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 + 12 = 14"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 4"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12 / 2 = 6"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12.5"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no possible next steps with the input of 12.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input of 12.5."
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no possible next steps with the input of 12.5. -> There are no possible next steps with the input of 12.5.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 - 8 = 0",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 7 + 4 = 11 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 - 8 = 0 -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 7 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 4 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 4 8) -> 4 * 3 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 -> 6 - 2 = 4 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "12.5"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 1.5 + 11 = 12.5 (left: 12.5) -> There are no valid operations that can be performed with the number 12.5.",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((2 * 5) + 7) + 17 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((2 * 5) + 7) + 17 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 -  -> 7 - 8 = -1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: ((2 * 5) + 7) + 17 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5) -> 10.5 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: 7 + (10 * 2) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 24 * 36 = 864",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 + 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 + 12 = 22 (left: 22 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps for the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 4 * 5 = 20 (left: 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 4 * 5 = 20 (left: 6) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 5 + 3 = 8 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 5 + 3 = 8 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> Input: 3 3 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> Input: 3 3 9 -> 3 - 3 = 0 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 - 3 = 0 (left:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-1 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 / 2 = 5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 - 1 = 9 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "10 1"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 + 1 = 11 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 + 1 = 11 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.333333333333333 (left: 5.33)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "9 13 13"
                }
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> Input: 5 5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> Input: 5 5 -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13) -> 30 * 13 = 390 (left: 390)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "10 12 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 13 1.2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: 13 1.2) -> 13 - 1.2 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "26"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 - 10 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 * 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number provided (1.33), so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "5 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 2 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 1"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 / 1 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "10 1"
                }
            },
            "Step 7": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 + 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 12 = 1 (left: 10 1) -> 10 + 1 = 11 (left: 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 20"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60) -> 60 / 2 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Input: 24 42",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Input: 24 42 -> 24 + 42 = 66 (left: 42 66)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.42857142857 (left: 2.42857142857)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.42857142857"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 + 1 = 2.42857142857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 21"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 3 + 9 = 12 (left: 9 12 3 -> 9 + 12 = 21 (left: 3 21) -> 21 / 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 3 + 4 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 9"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 20 - 3 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9)  -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 20"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 * 20 = 60 (left: 60) -> There are no possible next steps with the input 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 / 7 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.5"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> No possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 20"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 20 - 3 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 20 - 3 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9) ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 + 20 = 23 (left: 23) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 7 7"
                }
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 20"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 + 20 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 + 20 = 23 (left: 23) -> 23 + 8 = 31 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.42857142857"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 119 - 24 = 95 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 119 - 24 = 95 ( -> 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "60 / 2 = 30"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 / 5 = 0.8 ( -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 3 + 9 = 12 (left: 9 12 3",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 3 + 9 = 12 (left: 9 12 3 -> 9 + 12 = 21 (left: 3 21)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 20"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 + 20 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 + 20 = 23 (left: 23) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 20"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 20 - 3 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 20 - 3 = 17 (left: 17) -> 17 - 8 = 9 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.42857142857"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 20"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 4 * 6 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 9"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 20 - 3 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9)  -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.42857142857 + 1 = 2.42857142857"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 5 7"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 20"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 + 20 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 3 4 5) -> 4 * 5 = 20 (left: 3 20) -> 3 + 20 = 23 (left: 23) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "No possible next steps with the input provided."
                }
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> No possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7 17"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 4 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 21"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> 3 + 9 = 12 (left: 9 12 3 -> 9 + 12 = 21 (left: 3 21) -> 21 / 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.5"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 5.5 * 8 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "7 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Input: 24 10 2 -10 119",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 24 - 7 = 17 (left: 7 17) -> Input: 24 10 2 -10 119 -> 24 / 10 = 2.4 (left: 2.4 2 -10 119)",
                "Pruning": null
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> None, as the equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 - 2 = -1.3333333333333333 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 - 2 = -1.3333333333333333  -> 0.6666666666666666 + 2 = 2.6666666666666665 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 2 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as there is only one number in the input."
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number in the input. -> There are no possible next steps as there is only one number in the input. -> There are no possible next steps as there is only one number in the input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 + 4 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 + 4 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 * 2 = 42",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 * 2 = 42 -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332  -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665) ",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps with the number 13.5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps with the input 21. -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332 -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 2 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "96"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There is only one number, so there are no possible next steps. The result is 96.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19 (left: 19 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 0.6666666666666666 = 1",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 0.6666666666666666 = 1 -> 0.6666666666666666 + 0.6666666666666666 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "None, as the equation is already solved."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 16 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps for the input 21 as it is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> There are no possible next steps for the input 21 as it is a single number. -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1.3333"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> 1.3333 * 2 = 2.6666",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 4 8 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 * 8 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 * 8 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "8 16 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 16 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 + 2 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1.14"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 3 + 4 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14) -> 1 / 1 = 1 (left: 1.14)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 21."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 4 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 - 8 = 4 (left: 4 8 20) -> 8 * 4 = 32 (left: 32 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 + 0.6666666666666666 = 1.3333333333333332 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 * 12 = 96 ( -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 + 0.6666666666666666 = 1.3333333333333332  -> 0.6666666666666666 / 0.6666666666666666 = 1.0 ",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 4 =  -> 12 / 4 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 / 8 = 2.625 (left: 8)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "13.5"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 12 / 8 = 1.5 (left: 1.5 12) -> 1.5 + 12 = 13.5 (left: 13.5) -> There are no possible next steps with the number 13.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 - 12 = 4 (left: 4) -> 4 * 4 = 16",
                "Pruning": null
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Please provide numbers to perform calculations with."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> No further steps can be taken as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Enter two numbers to multiply them together."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together. -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together. -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 -> 3 / 5 = 0.6 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 -> 3 / 5 = 0.6 (left: -> 5 / 3 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 12 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> 1.33 / 2 = 0.665",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Enter two numbers to multiply them together."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together. -> - Multiply the two numbers together.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together. -> - Multiply the two numbers together. -> 2 * 8 = 16",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 / 8 = 1"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "Input: 1 + 1 = 2"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> Input: 1 + 1 = 2 -> 1 - 1 = 0 (left: 0 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> Input: 1 + 1 = 2 -> 1 - 1 = 0 (left: 0 1 2) -> 2 * 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 + 3 = 12 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8 / 8 = 1"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> Input: 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 10"
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 6 10) -> 10 - 2 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 / 8 = 1"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> Possible next steps: -> Invalid input. Please enter a list of numbers separated by spaces.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Since the result is already 1, there are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Enter two numbers to multiply them together."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together. -> - Multiply the two numbers together to get the result.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together. -> - Multiply the two numbers together to get the result. -> 2 * 8 = 16 (left: 16 112)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Since the result is already 1, there are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps since the result is already 1.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps since the result is already 1. -> There are no possible next steps since the result is already 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Enter two numbers to multiply them together."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together. -> - Enter two numbers to multiply them together.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with. -> Please provide numbers to perform calculations with. -> Multiplication: Enter two numbers to multiply them together. -> Enter two numbers to multiply them together. -> - Enter two numbers to multiply them together. -> - Enter two numbers to divide one by the other.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 1 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 12 10"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 12 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 1 12 10) -> 1 * 12 = 12 (left: 12 10) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> Since the result is already 1, there are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> Input",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> Input -> It seems like there is a typo in the input. Please provide the correct input for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Input: 1.5"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> Input: 1.5 -> 1.5 - 2 = -0.5 (left: -0.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "48 / 4 = 12 "
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12  -> 48 / 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "1 60 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12) -> 59 - 12 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 12 / 0 = undefined -> Division by 0 is undefined. There are no possible next steps in this case.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "-47"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 12 - 59 = -47 (left: -47) -> -47 / -47 = 1 (left: -47 1)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 =  -> 12 - 1 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "It seems like there is a typo in the input. Please provide the correct input for me to generate possible next steps."
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> Input -> It seems like there is a typo in the input. Please provide the correct input for me to generate possible next steps. -> Sorry, I cannot generate possible next steps without a valid input. Please provide the correct input for me to proceed.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12) -> 59 + 12 = 71 (left: 71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "12 + 8 = 20"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3 5 7"
                }
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> Input: 3 9 5 7 -> 9 / 3 = 3 (left: 3 5 7) -> 3 * 5 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 12 + 8 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 12 + 8 =  -> 12 + 8 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "71"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12) -> 59 + 12 = 71 (left: 71) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Input: 1.5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> Input: 3 9 5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> Input: 3 9 5 7 -> 9 / 3 = 3 (left: 3 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 60 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60) -> 60 / 13 = 4.615384615384615 (left: 4.615384615384615)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "0 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 - 1 = 11"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 + 1 = 13 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 + 1 = 13 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 * 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12) -> 59 * 12 = 708 (left: 708)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 0 + 12 = 12 -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "0 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 12 - 59 = -47 (left: -47)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 2 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 12"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "0 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> Input: 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "12 - 1 = 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = Undefined (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "47"
                }
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12) -> 59 - 12 = 47 (left: 47) -> There are no possible next steps with the input of 47.",
                "Pruning": null
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 9"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "30 6 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 / 6 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 48) -> 48 + 2 = 50 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 * 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "14.8"
                }
            },
            "Step 8": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8) -> 14 + 8 = 22 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 2"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 3 + 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5.5"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps with the input of 5.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 + 1 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 + 1 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 13."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 2"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 9)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 7 = 21 (left: 8 21)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 1 = 8 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "13"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 8)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 2"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Input: 3 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 5 14 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 + 1 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 9"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 6"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 3 + 5 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 3 + 5 = 8 (left: 8 7) -> 8 + 7 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "3 6"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 9"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 48) -> 48 + 2 = 50 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 48) -> 48 + 2 = 50 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Input: 3 9"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> Input: 5 10",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5.5"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps with the input 5.5 as it is a single number and not an operation on two numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 3 / 6 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "14.8"
                }
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8) -> 14 * 8 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> Input: 3 9 -> 9 - 3 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 * 8 = 48 (left: 48) -> 48 + 2 = 50 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 + 2 = 4"
                }
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 11 * 8 = 88 (left: 88 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "6 12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 0.7857142857142857"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 - 0.785714285714285",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 - 0.785714285714285 -> 8 - 0.785714285714285 = 7.214285714285715 (left: 7.214285714285715)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "6 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 9 - 3 = 6",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 9 - 3 = 6 -> 3 + 9 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "33"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33) -> 33 + 2 = 35 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "33"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.375 14"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 - 1.375 = 12.625 (left: 12.625)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 - 1.375 = 12.625 (left: 12.625) -> There are no possible next steps for the number 12.625 as it is already a decimal number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 + 3 = 8 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 7 11"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 1 + 7 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "8 11 14"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "9 11"
                }
            },
            "Step 7": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2) -> 2 * 2 = 4 (left: 4 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "3 * 3 = 9"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3 -> 3 * 3 = 9 -> 3 - 3 = 0 (left: 0 = 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 11"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 1 + 7 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 0.7857142857142857"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 + 0.7857142857142857 = 8.785714285714286 (left: 8.785714285714286)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 + 0.7857142857142857 = 8.785714285714286 (left: 8.785714285714286) -> 8.785714285714286 - 2 = 6.785714285714286",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 11"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 11 - 7 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 11 - 7 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 4"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 + 3 = 8 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "8 11 14"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 0.7857142857142857"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 * 0.7857142857142857 = 6.285714285714286 (left: 6.285714285714286)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 * 0.7857142857142857 = 6.285714285714286 (left: 6.285714285714286) -> 6.285714285714286 * 2 = 12.571428571428572",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> Input: 3 -> 3 * 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "11 101"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 * 14 = 112 (left: 11 112) -> 112 - 11 = 101 (left: 11 101) -> 101 / 11 = 9.181818181818182 (left: 9.181818181818182)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 0.7857142857142857"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 + 0.7857142857142857 = 8.7857142857142857 (left: 0.7857142857142857 8.7857142857142857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 + 0.7857142857142857 = 8.7857142857142857 (left: 0.7857142857142857 8.7857142857142857) -> 0.7857142857142857 * 8.7857142857142857 = 6.892857142857143 (left: 6.892857142857143 8.7857142857142857)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 * 14 = 112 (left: 11 112)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 * 14 = 112 (left: 11 112) -> 112 - 11 = 101 (left: 11 101)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 3 + 9 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 3 + 9 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "8 11 14"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "9 11"
                }
            },
            "Step 7": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 11 - 9 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 11 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 3",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "33"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33) -> 33 + 2 = 35 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 11 49"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.5"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 0.7857142857142857"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 - 0.785714285714285",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 - 0.785714285714285 -> 8 + 0.785714",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 4"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 + 3 = 8 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "0.5"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 1 + 7 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 7 11) -> 1 + 7 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 0.7857142857142857"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 * 0.7857142857142857 = 6.285714285714286 (left: 6.285714285714286)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 * 0.7857142857142857 = 6.285714285714286 (left: 6.285714285714286) -> 6.285714285714286 - 2 = 4.285714285714286",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 + 14 = 25 (left: 8 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 + 14 = 25 (left: 8 25) -> 8 * 25 = 200 (left: 200)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "33"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 + 22 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 - 8 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 11"
                }
            },
            "Step 6": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 0.7857142857142857"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 - 0",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 / 14 = 0.7857142857142857 (left: 8 0.7857142857142857) -> 8 - 0 -> 8 - 0 = 8",
                "Pruning": null
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2.5"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.28571428571 5.71428571429 1.75"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.71428571429 - 4.28571428571 = 1.42857142858 (left: 1.75 1.42857142858)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.71428571429 - 4.28571428571 = 1.42857142858 (left: 1.75 1.42857142858) -> 1.75 + 1.42857142858 = 3.17857142858 (left: 3.17857142858)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.71428571429 10"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left: 1.75 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left: 1.75 10) -> 1.75 * 10 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 / 5.71428571429 = 1.75"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 5.71428571429 * 10 = 57.1428571429 (left: 57.1428571429)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 10 10"
                }
            },
            "Step 4": {
                "Step": "3 + 7 = 10 (left: 1 10 10) -> 10 / 1 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3.33"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 3.33 - 1 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 3.33 - 1 = 2.33 (left: 2.33) -> There are no possible next steps for the input 2.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 3.33"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 + 3.33 = 4.33 (left: 3.33 4.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 + 3.33 = 4.33 (left: 3.33 4.33) -> 4.33 / 3.33 = 1.3003 (left: 1.3003)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 2.33 as it is a single number and not an operation to perform with other numbers."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 5.71428571429 * 10 = 57.1428571429 (left: 57.1428571429)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3.33"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 3.33 - 1 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 3.33 - 1 = 2.33 (left: 2.33) -> There are no possible next steps for the input 2.33 as it is a single number and not an operation to perform with other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "3 + 7 = 10 (left: 1 10 10) -> 10 / 1 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 7 = 10 (left: 1 10 10) -> 10 / 1 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 / 5.71428571429 = 1.75"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 5.71428571429 / 10 = 0.571428571",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 5.71428571429 / 10 = 0.571428571 -> 10 / 5.71428571429 = 1.75 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.28571428571 5.71428571429 1.75"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.71428571429 - 4.28571428571 = 1.42857142858 (left: 1.75 1.42857142858)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.71428571429 - 4.28571428571 = 1.42857142858 (left: 1.75 1.42857142858) -> 1.75 / 1.42857142858 = 1.22222222222 (left: 1.22222222222)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "10 10 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 10) -> 10 + 4.28571428571 = 14.28571428571 (left: 4.28571428571 14.28571428571)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 5.71428571429 * 10 = 57.1428571429 (left: 57.1428571429)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.28571428571 5.71428571429 1.75"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.71428571429 / 4.28571428571 = 1.33333333333 (left: 1.75 1.33333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.71428571429 / 4.28571428571 = 1.33333333333 (left: 1.75 1.33333333333) -> 1.75 + 1.33333333333 = 3.08333333333 (left: 3.08333333333)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "10 / 5.71428571429 = 1.75"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 3.33"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 - 3.33 = -2.33 (left: -2.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 - 3.33 = -2.33 (left: -2.33) -> -2.33 + 2 = -0.33 (left: -0.33)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "10 - 5.71428571429 = 4.285714285"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 / 1 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 / 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.28571428571 5.71428571429 1.75"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 4.28571428571 + 5.71428571429 = 10 (left: 1.75 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 4.28571428571 + 5.71428571429 = 10 (left: 1.75 10) -> 10 - 1.75 = 8.25 (left: 8.25)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 3.33"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 3.33"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 * 3.33 = 3.33 (left: 3.33 3.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 * 3.33 = 3.33 (left: 3.33 3.33) -> 3.33 * 3.33 = 11.0889 (left: 11.0889)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 / 5.71428571429 = 1.75 (left"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 5.71428571429 / 10 = 0.571428571429 (left: 0.571428571429)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5.71428571429 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 - 5.71428571429 = 4.285714285",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 3.33"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 + 3.33 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 + 3.33 = 4.33 (left: 4.33) -> 4.33 + 2 = 6.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 3.33"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 3.33 / 1 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 3.33 / 1 = 3.33 (left: 3.33) -> There are no immediate next steps for the input 3.33 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333 -> 3.333333333 - 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 5.71428571429 + 10 = 15.71428571429 (left: 15.71428571429)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 3 = 7 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.28571428571 5.71428571429 1.75"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.71428571429 - 4.28571428571 = 1.42857142858 (left: 1.75 1.42857142858)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.71428571429 - 4.28571428571 = 1.42857142858 (left: 1.75 1.42857142858) -> 1.75 / 1.42857142858 = 1.222",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "3 + 7 = 10 (left: 1 10 10) -> 10 / 1 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 7 = 10 (left: 1 10 10) -> 10 / 1 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 / 5.71428571429 = 1.75"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 =",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = -> 10 / 5.71428571429 = 1.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.28571428571 5.71428571429 1.75"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 1.75 * 4.28571428571 = 7.5 (left: 7.5 5.71428571429)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 1.75 * 4.28571428571 = 7.5 (left: 7.5 5.71428571429) -> 7.5 / 5.71428571429 = 1.31578947368 (left: 1.31578947368)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "10 / 5.71428571429 = 1.75"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 5.71428571429 - 10 = -4.28571428571 (left: -4.28571428571)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> No possible next steps as there are not enough numbers provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.71428571429 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4.28571428571 5.71428571429 1.75"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 / 4 = 1.75 (left: 1.75 10) -> 10 / 1.75 = 5.71428571429 (left: 5.71428571429 10) -> 10 / 5.71428571429 = 1.75 (left -> 10 - 5.71428571429 = 4.28571428571 (left: 4.28571428571 5.71428571429 1.75) -> 5.714285714",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 10 10"
                }
            },
            "Step 6": {
                "Step": "3 + 7 = 10 (left: 1 10 10) -> 1 * 10 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 3.33"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 / 3.33 = 0.3 (left: 0.3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 / 3.33 = 0.3 (left: 0.3) -> 0.3 - 0.3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 21 - 9 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 21 / 9 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 21 / 9 = 2.33 (left: 2.33) -> 2.33 * 2 = 4.66",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "-24"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24) -> There are no possible next steps with the input of -24.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24) -> There are no possible next steps with the input of -24. -> There are no possible next steps with the input of -24.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 1 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 1 17) -> 1 - 17 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "-3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 / 1 = 16 (left: 16 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 / 1 = 16 (left: 16 1) -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 1 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 1 17) -> 1 + 17 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input -3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 21"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 25 - 10 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 12 + 9 = 21 (left: 9 21) -> 25 - 10 = -> 25 - 10 = 15",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the given input of -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the given input of -3. -> There are no possible next steps with the given input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 + 1 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input -3."
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> -3 / 2 = -1.5 (left: -1.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "48"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 / 1 = 16 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 / 1 = 16 (left: 1 16) -> 1 * 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps with the input of -3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input of -24."
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24) -> There are no possible next steps with the input of -24. -> There are no possible next steps with the input of -24.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24) -> There are no possible next steps with the input of -24. -> There are no possible next steps with the input of -24. -> There are no possible next steps with the input of -24.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 - 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "-24"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24) -> There are no possible next steps with the input of -24.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input -3."
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "-24"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36) -> 12 - 36 = -24 (left: -24) -> -24 - 2 = -26 (left: -26)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9) -> 9 % 1 = 0 (left: 1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "-3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 12"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input -3."
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "16 1"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 * 1 = 16 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 16 1) -> 16 * 1 = 16 (left: 1 16) -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input -3."
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3 as it is not a valid operation with the given numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 12 - 15 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3 as it is not a valid operation with the given numbers. -> There are no possible next steps for the input -3 as it is not a valid operation with the given numbers.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "66"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68  -> 66 - 2 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "15 15"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "13 22"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "9.14 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10) -> 1.14 + 8 = 9.14 (left: 9.14 10) -> 9.14 / 10 = 0.914 (left: 0.914 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10) -> 1.14 + 8 = 9.14 (left: 9.14 10) -> 9.14 / 10 = 0.914 (left: 0.914 10) -> 10 + 0.914 = 10.914 (left: 10.914)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "13 22"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input: 25 30 "
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 25 * 30 = 750 (left: 750)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> Please provide a valid input to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 16 18)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8.86"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps for the number 8.86 as it is already a decimal number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps for the number 8.86 as it is already a decimal number and cannot be further manipulated using basic arithmetic operations. -> There are no possible next steps for the number 8.86 as it is already a decimal number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> 0.8 - 2 = -1.2 (left: -1.2)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "13 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10) -> 1.14 + 8 = 9.14 (left: 9.14 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 10 "
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 3 10  -> 3 + 10 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 3 10  -> 3 + 10 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "66"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 / 2 = 33 (left: 33 66) ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 / 2 = 33 (left: 33 66)  -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 5 = 12 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 + 10 = 11.142857142857142 (left: 11.142857142857142)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 2 = 13 -> 11 * 2 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "15 15"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 56 / 10 = 5.6 (left: 5.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 25 30 "
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 30 - 25 = 5 (left: 5 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 30 - 25 = 5 (left: 5 30) -> 5 + 30 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There is only one possible next step: 0.8 + 0.8 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "13 22"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "66"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 - 2 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8.857142857142857"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 10 - 5 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Please provide a valid input to continue the calculation."
                }
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 + 9 = 21 (left: 10 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 + 9 = 21 (left: 10 21) -> 10 - 21 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.1666666666666667"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 - 16 = -6 (left: -6 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 - 16 = -6 (left: -6 13) -> -6 / 13 \u2248 -0.4615 (left: -0.4615)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 + 2.333333333333333 = 2.069444444444444 (left: 2.069444444444444)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "39"
                }
            },
            "Step 8": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 13 - 10 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 14.6."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13) -> 1.6 + 13 = 14.6 (left: 14.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "126"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 12 * 6 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2.5 12 13"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 * 16 = 160 (left: 13 160)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 * 16 = 160 (left: 13 160) -> 160 / 13 = 12.307692307692307 (left: 12.307692307692307 160)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-0.26249999999999996 -2.6333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 * 3.1666666666666665 = -2.6333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.26249999999999996 (left: -0.26249999999999996 -2.6333333333333333) -> -0.26249999999999996 + -2.6333333333333333 = -2.8958333333333333 (left: -2.8958333333333333)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 14.6 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13) -> 1.6 + 13 = 14.6 (left: 14.6) -> There are no possible next steps for the input 14.6 as it is already a single number. -> There are no possible next steps for the input 14.6 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7.5"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 / 10 = 1.2 (left: 1.2 9) -> 9 / 1.2 = 7.5 (left: 7.5) -> 7.5 * 8 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "12 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 - 12 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 13 - 10 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 + 2.333333333333333 = 2.069444444444444 (left: 2.069444444444444)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "198"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 10 + 12 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198) -> 1 + 9 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.36842105263 0."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14.6"
                }
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13) -> 1.6 + 13 = 14.6 (left: 14.6) -> 14.6 * 2 = 29.2 (left: 8 29.2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13) -> 1.6 + 13 = 14.6 (left: 14.6) -> 14.6 * 2 = 29.2 (left: 8 29.2) -> 8 / 29.2 = 0.274 (left: 0.274)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2.5 12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 - 12 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 12 13 14) -> 13 - 12 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15) -> 14 * 15 = 210 (left: 210)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1.36842105263 0."
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 - 2.333333333333333 = -",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 - 2.333333333333333 = - -> -0.2638888888888889 * 2.333333",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "198"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 10 + 12 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198) -> 98 / 1 = 98 (left: 98)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14.6"
                }
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13) -> 1.6 + 13 = 14.6 (left: 14.6) -> There are no possible next steps for the input 14.6 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-0.8333333333333333 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 (left: 2.333333333333333)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14.6"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 / 10 = 1.6 (left: 1.6 13) -> 1.6 + 13 = 14.6 (left: 14.6) -> There are no possible next steps with the input 14.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 * 2.333333333333333 = -",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 * 2.333333333333333 = - -> -0.2638888888888889 * 2.333333333333333 = -0.6166666666666667",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 10 + 12 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 10 + 12 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.36842105263"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263) -> 1.36842105263 * 2 = 2.73684210526",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263) -> 1.36842105263 * 2 = 2.73684210526 -> 2.73684210526 - 2 = 0.73684210526 (left: 1.36842105263 0.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-0.8333333333333333 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 * 3.1666666666666665 = -2.6333333333333333",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 * 3.1666666666666665 = -2.6333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.26249999999999996 (left: -0.26249999999999996 -2.6333333333333333)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 + 2.333333333333333 = 2.069444444444444 (left: 2.069444444444444)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "-0.8333333333333333 3.1666666666666665"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 / 3.166666666666666",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps."
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 10 12 9) ->  -> It seems like you did not provide an input for me to work with. Please enter a set of numbers for me to generate possible next steps. -> Please enter a set of numbers for me to generate possible next steps. -> It seems like you haven't entered any numbers for me to generate possible next steps. Please enter a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 - 13 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 16 - 13 = 3 (left: 3) -> There is not enough information provided to determine the next steps. Please provide additional numbers or operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 + 2.333333333333333 = 2.0694444444444444 (left: 2.0694444444444444)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "19"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19) -> There are no possible next steps with the input 19.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 10 12 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.36842105263"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263) -> 1.36842105263 - 1 = 0.36842105263",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263) -> 1.36842105263 - 1 = 0.36842105263 -> 1.36842105263 + 1 = 2.36842105263 (left: 2.36842105263)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-0.8333333333333333 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 / 2.333333333333333 = -0.1130952380952381",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 / 2.333333333333333 = -0.1130952380952381 -> -0.2638888888888889 - 2.333333333333333 = -2.597222222222222",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "126"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 26 * 1 = 26",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 26 * 1 = 26 -> 1 * 26 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "10 16 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-0.8333333333333333 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 / 3.1666666666666665 = -0.2631578947368421",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 / 3.1666666666666665 = -0.2631578947368421 -> -0",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 * 2.333333333333333 = -",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 * 2.333333333333333 = - -> -0.2638888888888889 * 2.333333333333333 = -0.6157407407407408",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 + 4 = 16 (left: 10 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 / 10 = 1.2 (left: 1.2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 12 / 10 = 1.2 (left: 1.2 9) -> 9 / 1.2 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.1666666666666667"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 / 2 = 0.5833333333333334",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 / 2 = 0.5833333333333334 -> 1.1666666666666667 * 2 = 2.3333333333333335 (left: 2.3333333333333335 / 2 = 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-0.8333333333333333 3.1666666666666665"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 (left: 2.333333333333333)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "13 30"
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30) -> 13 * 30 = 390 (left: 390)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "-0.2638888888888889 2.333333333333333"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 - 2 = -0.8333333333333333 -> 1.1666666666666667 + 2 = 3.1666666666666665 (left: -0.8333333333333333 3.1666666666666665) -> -0.8333333333333333 + 3.1666666666666665 = 2.333333333333333 -> -0.8333333333333333 / 3.1666666666666665 = -0.2638888888888889 (left: -0.2638888888888889 2.333333333333333) -> -0.2638888888888889 / 2.333333333333333 = -0.11304347826086956 (left: -0.11304347826086956)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "39"
                }
            },
            "Step 8": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 13 - 10 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> 39 / 8 = 4.875 (left: )",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "-0.2638888888888889 2.333333333333333"
                }
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32 -> 16 - 16 = 0 (left: 0 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 + 6 = 16 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 + 6 = 16 ( -> 16 - 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 / 6 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 / 6 = 1.67 (left: 1.67) -> 1.67 + 2 = 3.67 (left: 2 3.67)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8 -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 6 / 10 = 0.6 (left: 0.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 6 / 10 = 0.6 (left: 0.6) -> There are no possible next steps with the input of 0.6.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 10 12"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 12 - 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 12 - 8 = 4 (left: 4) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 12 - 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 12 - 8 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22) -> 6 * 22 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (3 * (10 + 12)) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "192"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192) -> 1 + 2 + 3 + 4 = 10 (left",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 2 + 10 = 12 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10) -> 2 + 10 = 12 (left: 10) -> 10 * 2 = 20 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 - 6 = 4 (left:"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 8 / 4 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 8 / 4 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "2 10"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 ^ 6 = 1000000 (left: 1000000 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 ^ 6 = 1000000 (left: 1000000 4) -> 1000000 / 4 = 250000 (left: 250000)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8 -> 16 + 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 / 2 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 + 6 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 + 6 = 16 (left: 16) -> No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 6 / 10 = 0.6 (left: 0.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 6 / 10 = 0.6 (left: 0.6) -> There are no arithmetic operations that can be performed on the input 0.6.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 - 2 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 - 2 = 14 -> 16 * 2 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 8 / 4 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 14 + 6 = 20 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 14 + 6 = 20 (left: -> 8 - 6 = 2 (left: 14 2 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 4 - 16 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 / 12) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 3 12"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 2 3 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 * 6 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 10 * 6 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> Input: 1.6666666666666667 + 4 = 5.666",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> Input: 1.6666666666666667 + 4 = 5.666 -> 1.6666666666666667 * 4 = 6.666666666666667 (left: 4 6.666666666666667 5.666666666666667)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "192"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12) -> 16 * 12 = 192 (left: 192) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "192"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 - 6 = 4 (left:"
                }
            },
            "Step 7": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 6 - 10 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: -> 6 - 10 = -4 (left: -4) -> There are no possible next steps with the input of -4 as there are no numbers to operate on.",
                "Pruning": null
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "56"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the number 56 as the only input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 3.33"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 + 3.33 = 6.33 (left: 6.33)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "14"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 * 6 = 18 (left: 4 18) -> 18 - 4 = 14 (left: 14) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "None, the input provided already covers all possible operations with the given numbers."
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> There are no more possible next steps as all combinations of the given numbers have been considered.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> There are no more possible next steps as all combinations of the given numbers have been considered. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10) -> 10 / 3 = 3.33 (left: 3 3.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 * 8 = 24 (left: 24) -> Answer: (6 - 3) * 4 * 6 = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 4.5"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 3 4.5) -> 3 + 4.5 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Provide at least two numbers to perform arithmetic operations."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> Input: 5 10 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> Input: 5 10 2 -> 2 * 10 = 20 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 3.33"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 + 6 = 10 (left: 3 10) -> 10 / 3 = 3.33 (left: 3 3.33) -> 3 + 3.33 = 6.33 (left: 6.33)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps as there are no more numbers left to operate on."
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no more numbers left to operate on. -> N/A",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps as there are no more numbers left to operate on."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 6 - 1.5 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> No possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> No possible next steps with the input 9. -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 3"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 3 * 6 = 18 (left: 4 18) -> 18 - 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 21"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 3 21) -> 3 + 21 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "3 21"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 3 21) -> 3 * 7 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the number 56 as the only input."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 2 = 36 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 + 4 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 * 8 = 24 (left: 24) -> Answer: (6 - 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "72"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72) -> 72 / 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the number 56 as the only input."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "None, the input provided already covers all possible operations with the given numbers."
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> N/A",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 3 21)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 * 8 = 24 (left: 24) -> Answer: (6 - 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the number 56 as the only input."
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the number 56 as the only input. -> There are no possible next steps with the number 56 as the only input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 + 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 21"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 3 21) -> 21 - 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "7.5"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 + 2 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps as there are no more numbers left to operate on."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 3 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 4.5"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 3 4.5) -> 3 * 4.5 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "18"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps as there are no more numbers left to operate on.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 21"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 24 - 3 = 21 (left: 3 21) -> 3 + 21 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 is not a valid input, please enter a valid input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "None, the input provided already covers all possible operations with the given numbers."
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> None",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "18"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 3"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 * 8 = 24 (left: 24) -> Answer: (6 - 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 4.5"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 4 = 1.5 (left: 1.5 3) -> 1.5 * 3 = 4.5 (left: 3 4.5) -> 4.5 - 3 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Provide at least two numbers to perform arithmetic operations."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "None, the input provided already covers all possible operations with the given numbers."
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> There are no more possible next steps as all combinations of operations with the given numbers have been calculated.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> There are no more possible next steps as all combinations of operations with the given numbers have been calculated. -> There are no more possible next steps as all combinations of operations with the given numbers have been calculated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24) -> 3 * 8 = 24 (left: 24) -> Answer: (6 - 3) * 4 * 6 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no more possible next steps as all combinations of operations with the given numbers have been calculated."
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> There are no more possible next steps as all combinations of operations with the given numbers have been calculated. -> There are no more possible next steps as all combinations of operations with the given numbers have been calculated. -> There are no more possible next steps as all combinations of operations with the given numbers have been calculated.",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 - 8 = -2.66667 (left: -2.66667)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 8 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 - 8 = 5 (left: 5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 * 8 = 51.2 (left: 51.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 * 8 = 51.2 (left: 51.2) -> 51.2 + 2 = 53.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input -1.6."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 - 8 = -1.6 (left: -1.6) -> There are no possible next steps with the input -1.6. -> There are no possible next steps with the input -1.6.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 - 8 = -1.6 (left: -1.6) -> There are no possible next steps with the input -1.6. -> There are no possible next steps with the input -1.6. -> There are no possible next steps with the input -1.6.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.7272727272727273"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 * 2 = 1.4545454545454546",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 * 8 = 51.2 (left: 51.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 * 8 = 51.2 (left: 51.2) -> There is only one number provided (51.2), so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps for the input 14.4 as it is a single number and not a mathematical expression."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number and not a mathematical expression. -> There are no possible next steps for the input 14.4 as it is a single number and not a mathematical expression.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number and not a mathematical expression. -> There are no possible next steps for the input 14.4 as it is a single number and not a mathematical expression. -> There are no possible next steps for a single number input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 * 8 = 42.66664 (left: 42.66664)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 / 1.6 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2.99"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> 2.99 + 2 = 4.99 (left: 2.99 4.99)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> 2.99 + 2 = 4.99 (left: 2.99 4.99) -> 2.99 * 4.99 = 14.9001 (left: 14.9001)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 14.4 as it is a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 10 + 3 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 10 + 3 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2.99"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "51.2 + 2 = 53.2"
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 * 8 = 51.2 (left: 51.2) -> 51.2 + 2 = 53.2 -> 51.2 - 2 = 49.2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 * 8 = 51.2 (left: 51.2) -> 51.2 + 2 = 53.2 -> 51.2 - 2 = 49.2 -> 2 * 51.2 = 102.4 (left: 102.4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.7272727272727273 * 2 = 1.4545454545454546"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 8 - 5.33333 = 2.66667 (left: 2.66667)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 - 8 = -1.6 (left: -1.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 - 8 = -1.6 (left: -1.6) -> There are no possible next steps with the input -1.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "40"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There is only one possible step: 40 / 2 = 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There is only one possible step: 40 / 2 = 20 -> 20 + 8 = 28 (left: 8 28)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 * 8 = 42.66664 (left: 42.66664)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "8 8 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 / 8 = 1.625 (left: 8 1.625)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 8 - 6.4 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 8 - 6.4 = 1.6 (left: 1.6 8) -> 1.6 * 8 = 12.8 (left: 12.8)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "40"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps for the input 40 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps for the input 40 as it is already a single number. -> There are no possible next steps for the input 40 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 1.6 6",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 1.6 6 -> 1.6 * 6 = 9.6 (left: 9.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 8 / 5.33333 = 1.49999 (left: 1.49999)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 1.625"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 / 8 = 1.625 (left: 8 1.625) -> 8 * 1.625 = 13 (left: 1.625 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 / 8 = 1.625 (left: 8 1.625) -> 8 * 1.625 = 13 (left: 1.625 13) -> 1.625 / 13 = 0.125 (left: 0.125)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "40"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps with the input being only 40.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps with the input being only 40. -> There are no possible next steps with the input being only 40.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 14.4 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number. -> There are no possible next steps for the input 14.4 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number. -> There are no possible next steps for the input 14.4 as it is a single number. -> There are no possible next steps for the input 14.4 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "8 / 5 = 1.6 (left"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 / 8 = 0.8 (left: 0.8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 / 8 = 0.8 (left: 0.8 8) -> 0.8 * 8 = 6.4 (left: 6.4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 14.4 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number. -> None",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.4"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4) -> There are no possible next steps for the input 6.4.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.33333 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 / 8 = 0.66667 (left: 0.66667)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.4"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "40"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 - 8 = -1.6 (left: -1.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 - 8 = -1.6 (left: -1.6) -> -1.6 + 2 = 0.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 14.4 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number. -> Possible next steps: None",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8) -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number. -> Possible next steps: None -> None",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "-1.6 + 2 = 0.4"
                }
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: -> 12 - 48 = -36 (left: -36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "12 / 8 = 1.5"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5 -> ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5.33333"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333) -> 5.33333 / 5 = 1.0666666 (left: 1.0666666 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "8 96"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "44 4"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the input 5.33333 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-11 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 - 12 = -11 (left: -11 12) -> -11 / 12 = -0.9166666666666666 (left: -0.9166666666666666)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "71.9962"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962) -> 71 - 9 = 62.9962 (left: 62.9962)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "12 / 8 = 1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96) -> 96 / 64 = 1.5 (left: 1.5 96)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-11 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 - 12 = -11 (left: -11 12) -> -11 / 12 = -0.9166666666666666 (left: -0.9166666666666666)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "44 4"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 + 4 = 48 (left: 4 48) -> 48 + 4 = 52 (left: 52 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "44 4"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 / 48 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with just the number 9.5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 - 12 = -11 (left: -11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9.5"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> 9.5 + 8 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5.33333"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 =  -> 12 / 8 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9.5"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There are no possible next steps for 9.5 as it is a single number and not an equation.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There are no possible next steps for 9.5 as it is a single number and not an equation. -> There are no possible next steps for 9.5 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 16 / 8 = 2 (left: 2 3 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 16 / 8 = 2 (left: 2 3 48) -> 3 * 2 = 6 (left: 6 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "44 4"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4 176) -> 4 * 176 = 704 (left: 704)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations. The number 9.5 remains as is."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9.5"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There are no possible next steps with just the number 9.5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There are no possible next steps with just the number 9.5. -> There are no possible next steps with just the number 9.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 4 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 4 48) -> 48 / 4 = 12 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96) -> 8 / 8 = 1 (left: 1 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96) -> 8 / 8 = 1 (left: 1 96) -> 1 + 96 = 97 (left: 97)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with just the number 9.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 + 6 = 18 (left: 8 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5.33333"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333) -> There are no possible next steps for the input 5.33333 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333) -> There are no possible next steps for the input 5.33333 as it is already a single number. -> There are no possible next steps for the input 5.33333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 / 48 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: -> 12 * 8 = 96 (left: 8 96) -> 8 * 96 = 768 (left: 768)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "71.9962"
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962) -> 71 + 0.9962 = 71.9962",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 12 48"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "44 4"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 / 4 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 * 12 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-11 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 1 - 12 = -11 (left: -11 12) -> -11 * 12 = -132 (left: -132)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9.5"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There is only one number given, so there are no possible next steps to perform any operations. The number 9.5 remains as is.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "12 / 8 = 1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "44 4"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 * 4 = 176 (left: 4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations. The number 9.5 remains as is."
                }
            },
            "Step 8": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5) -> There is only one number given, so there are no possible next steps to perform any operations. The number 9.5 remains as is. -> There are no possible next steps as there is only one number given (9.5).",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111 (left: 1.1111)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 6 - 2.25 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> Input: 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> Input: 5 10 -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> Input: 3 7 2",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111111111111112 (left: 1.1111111111111112)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> Possible next steps: -> None.",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 11"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 106 / 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6 18"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 / 3 = 6 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There is only one number left, so there are no possible next steps. The result is 10."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 * 18 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "7 8 11"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 106 / 2 = 53 (left: 53)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 20"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18) -> 5 + 10 = 15 (left: 15 20) -> 20 - 15 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 / 3 = 6 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 106"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 2 + 106 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 18"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 3 + 18 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 4 * 10 = 40 (left: ",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 6 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 6 9) -> 2 + 6 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 2 * 106 = 212 (left: 212)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 / 2 = 5"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 2 = 5 -> 10 - 5 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 - 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 18"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "15 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 2.5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18) -> 5 + 10 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "20"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 * 2 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 6 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 / 3 = 6 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 11 12"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 2 + 106 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6 18"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 / 3 = 6 (left: 6 18) -> 18 - 6 = 12 (left: 12 18)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 - 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> There is only one number left, so there are no possible next steps. The result is 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 106 - 2 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "15 20"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 - 2 = 4 (left: 4 18) -> 5 + 10 = 15 (left: 15 20) -> 15 / 20 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 2.5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 6 11 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with the input 2.5."
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 106 - 2 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 106"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 2 + 106 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 / 2 = 5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 / 3 = 6 (left: 6 18) -> 18 / 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 2 + 106 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6 18"
                }
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 / 3 = 6 (left: 6 18) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18) -> 8 + 18 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18) -> 18 - 12 = 6 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 18 / 3 = 6 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 - 8 = 3 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 106"
                }
            },
            "Step 7": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 106 - 2 = 104 (left: 2 104)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108) -> 108 - 2 = 106 (left: 2 106) -> 106 - 2 = 104 (left: 2 104) -> 2 * 104 = 208 (left: 104 208)",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "12 12 14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 - 12 = 0 (left: 0 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 - 12 = 0 (left: 0 45) -> 0 * 45 = 0 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 1 * 540 = 540 (left: 540)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "60"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 / 2 = 30",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 / 27 = 1 (left: 2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.8 12 12"
                }
            },
            "Step 4": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 / 12 = 3 (left: 3 12 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 / 12 = 3 (left: 3 12 45) -> 12 - 3 = 9 (left: 9 12 45)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 1 - 540 = -",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 1 - 540 = - -> 1 - 540 = -539",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> There are no possible next steps with just the number 27.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> There are no possible next steps with just the number 27. -> 27 - 2 = 25 (left: 2 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 45) -> 45 - 1 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 540 / 1 = 540 (left: 540)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "3 35"
                }
            },
            "Step 8": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14) -> 5 * 7 = 35 (left: 3 35) -> 3 * 35 = 105 (left: 105)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "54 29"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 + 2 = 29 -> 27 * 2 = 54 (left: 54 29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45) -> 144 / 45 = 3.2 (left: 3.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 12 45"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 / 12 = 3 (left: 3 12 45) -> 12 - 3 = 9 (left: 9 12 45) -> 12 - 9 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 / 12 = 3 (left: 3 12 45) -> 12 - 3 = 9 (left: 9 12 45) -> 12 - 9 =  -> 12 - 9 = 3",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 * 2 = 54",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 * 2 = 54 -> 27 * 2 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 - 12 = 33 (left: 12 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 - 12 = 33 (left: 12 33) -> 12 + 33 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 1 * 540 = 540 (left: 540)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "45"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 - 12 = 33 (left: 12 33) -> 12 + 33 = 45 (left: 45) -> 45 + 2 = 47",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14) -> 5 * 7 = 35 (left: 3 35)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 + 2 = 29 -> 2 - 27 = -25 (left: -25)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45) -> 144 + 45 = 189 (left: 189)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 1 * 540 = 540 (left: 540)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "84"
                }
            },
            "Step 8": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 12 * 7 = 84 (left: 84) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input 2.4."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 12 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 12 - 7 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 - 2 = 25 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2.4"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45) -> 24 / 45 = 0.5333 (left: 0.5333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 540 - 1 = 539 (left: 539)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number given.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 12 * 7 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 / 2 = 13.5 (left: 2)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "3 35"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14) -> 5 * 7 = 35 (left: 3 35) -> 3 + 35 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "84"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 1 * 540 = 540 (left: 540)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "45"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 - 12 = 33 (left: 12 33) -> 12 + 33 = 45 (left: 45) -> There are no possible next steps with just the number 45.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 9 12) -> 9 - 2.25 = 6.75 (left: 6.75 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 + 2 = 29 -> 27 * 2 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "3 35"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45) -> 24 * 45 = 1080 (left: 1080)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 540 - 1 = 539 (left: 1 539)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 540 - 1 = 539 (left: 1 539) -> 1 + 539 = 540",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 - 2 = 25 (left: 2 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 - 2 = 25 (left: 2 25) -> 25 - 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 12 45"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 / 12 = 3 (left: 3 12 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 / 12 = 3 (left: 3 12 45) -> 12 + 3 = 15 (left: 15 45)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 540"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 1 + 540 = 541 (left: 540 541)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 / 12 = 1 (left: 1 12 45) -> 12 * 45 = 540 (left: 1 540) -> 1 + 540 = 541 (left: 540 541) -> 540 + 541 = 1081",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 - 2 = 31 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 2 5"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 / 9 = 1.3333 (left: 1.3333) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 / 9 = 1.3333 (left: 1.3333)  -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4) -> There are no possible next steps for the input 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 * 3 = 99 (left: )",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "1 9 12"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 108 - 10 = 98 (left: 8)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "33"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 / 2 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 / 2 = 6 (left: -> 6 + 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 * 2 = 66 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 / 9 = 1.3333333333333333 (left: 1.3333333333333333 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 / 9 = 1.3333333333333333 (left: 1.3333333333333333 12) -> 1.3333333333333333 * 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 10 = 12 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35 (left: 2)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "-7"
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7) -> -7 * -7 = 49 (left: -7 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 / 3 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 12 - 3 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 + 8 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35 -> 33 + 8 = 41",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35 -> 33 / 2 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 12 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> Not enough numbers provided for a valid calculation. Please input at least two numbers separated by spaces.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "There are no possible next steps with only one number provided. Additional numbers are needed to perform operations."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with only one number provided. Additional numbers are needed to perform operations. -> Provide additional numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 / 2 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 9 * 12 = 108 (left: 108) -> 108 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input 0.8333.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 - 8 = 25 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 - 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 / 3 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 4 * 3 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input 0.8333.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 * 2 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 2 5"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 / 1 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 7 12) -> 12 / 2 = 6 (left: -> 6 + 2 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "Not enough numbers provided for a valid calculation. Please input at least two numbers separated by spaces."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with only one number provided. Additional numbers are needed to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 * 7 = 21 (left: 21 12) -> 21 + 12 = 33 (left: 33) -> 33 + 2 = 35 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left:",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 / 3 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 3 + 7 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 10 = 12",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 6 6"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 - 0.333 = 11.667 (left: 11.667)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "30"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 6 * 5 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "88"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 - 0.333 = 11.667 (left: 11.667)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps as there are not enough numbers provided."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps as there are not enough numbers provided. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 44"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 11 44) -> 44 - 11 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 - 0.333 = 11.667 (left: 11.667)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1 + 6 = 7"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 1 / 6 = 0.16666666666666666 (left: 0.166666666666666",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> -1 - 6 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "88"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "11 44"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 11 44) -> 11 * 44 = 484 (left: 484)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 6 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1) -> 5 * 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 0.333 + 12 = 12.333 (left: 12.333)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "None. The input is already the final result."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> None. The input is already the final result. -> No further steps needed. The input is already the final result.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "30 / 2 = 15"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> 30 / 2 = 15 -> 15 + 8 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 16"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 / 0.333 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1 + 6 = 7"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 1 * 6 = 6 (left: 6 7 6)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 6 / 1.2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 + 8 = 25 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 * 0.333 = 3.996 (left: 3.996)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "11 44"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 16"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2.5"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> 2.5 / 8 = 0.3125 (left: 0.3125",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 - 6 = 14 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 * 0.333 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 * 0.333 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the input 17. -> None",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> None. The input is already the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 / 0.333 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 6 = 1 (left: 5 1) -> 5 * 1 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 11 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 44"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 / 0.333 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 8 12)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 44"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 11 44) -> 11 * 44 = 484 (left: 484)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> Input: 3 4 7",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 6 = 36 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.333, 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 3 + 9 = 12 (left: -> 3 / 9 = 0.333 (left: 0.333, 12) -> 12 - 0.333 = 11.667 (left: 11.667)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 16"
                }
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "5 8 "
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8  -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 6 3"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 3 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 3 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 3"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3) -> 3 - 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "5 20"
                }
            },
            "Step 8": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> Input: 4 5 20 -> 20 / 4 = 5 (left: 5 20) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 8 13"
                }
            },
            "Step 1": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "0 8 13"
                }
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 8 / 0 is undefined (left: 0 8 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 6 3"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 3 + 6 = 9 (left: 6 9) -> 9 * 6 = 54 (left: 6)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "Input: 5 2 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "5 0 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0 8) -> 5 * 0 = 0 (left: 0 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0 8) -> 5 * 0 = 0 (left: 0 8) -> 8 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "6 6 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "5 8 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8  -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 3"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3) -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 11"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "6 6 3"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 6 3"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> Input: 4 5 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> Input: 4 5 20 -> 20 / 4 = 5 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 3"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3) -> 3 - 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 11"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 8 13"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 8 13) -> 8 + 1 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 6 3"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 / 3 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 3"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3) -> 3 - 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "Input: 5 2 3"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> Input: 5 2 3 -> 2 + 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 24 32)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 24 32) -> 24 + 32 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "Input: 5 2 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 6 3"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "5 0 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0 8) -> 5 * 0 = 0 (left: 0 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0 8) -> 5 * 0 = 0 (left: 0 8) -> 8 / 0 is undefined",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps: -> There are no possible next steps with the provided input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 6 3"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 3 + 6 = 9 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 3"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 11"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 + 5 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 / 10 = 0.8 ( -> There seems to be a mistake in the input provided. It appears to be incomplete. Could you please provide the complete input so that I can suggest the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 6 3"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 3"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13) -> Input: 5 2 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5 / 0 = undefined (cannot divide by zero"
                }
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 6 3"
                }
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 / 3 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 0 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 3"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3) -> 3 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 3"
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 13) -> 13 - 8 = 5 (left: 0 5) -> 5 / 0 = undefined (cannot divide by zero) -> 4 + 2 = 6 (left: 6 6 3) -> 6 - 6 = 0 (left: 0 3) -> 3 / 0 = undefined (left: 0 3) -> 3 - 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 - 3 = 7 (left: 7 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 9 24) -> 9 - 24 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 * 2.5 = 20 (left: 20 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 * 2.5 = 20 (left: 20 14) -> 20 / 14 = 1.428571 (left: 1.428571)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Without specific instructions or constraints, it is difficult to provide tailored next steps for the given input of 2 8 8 14. Please provide more context or details so I can offer appropriate suggestions."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Apply any other mathematical operation or function that is relevant to the problem at hand",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Apply any other mathematical operation or function that is relevant to the problem at hand -> - Calculate the product of all numbers: 2 * 8 * 8 * 14 = 1792",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3 - 2 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 + 8 = 10.5 (left: 10.5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 + 8 = 10.5 (left: 10.5 14) -> 14 / 10.5 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 * 3 = 27 (left: 27 27) -> 27 + 27 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.5 8 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 2 + 6 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 - 2 = 1"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left:  -> It appears that you have not provided an input to work with. Please provide the numbers for which you want to find the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 / 2.5 = 3.2 (left: 3.2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 / 2.5 = 3.2 (left: 3.2 14) -> 14 - 3.2 = 10.8 (left: 10.8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 - 2 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 - 2 = 1"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 + 2 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 + 2 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Without specific instructions or constraints, it is difficult to provide tailored next steps for the given input of 2 8 8 14. Please provide more context or details so I can offer appropriate suggestions."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 3 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 3 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> 17 * 2 = 34",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> 17 * 2 = 34 -> 17 / 2 = 8.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 + 8 = 10.5 (left: 10.5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 + 8 = 10.5 (left: 10.5 14) -> 10.5 + 14 = 24.5 (left: 24.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3 - 2 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Without specific instructions or constraints, it is difficult to provide tailored next steps for the given input of 2 8 8 14. Please provide more context or details so I can offer appropriate suggestions."
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - If you are working on a math problem, share the instructions or constraints so I can provide steps that align with the requirements. -> Without specific instructions or constraints, it is difficult to provide tailored next steps for the given input of 2 8 8 14. Please provide more context or details so I can offer appropriate suggestions. -> - Divide the second number by the first number: 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - If you are working on a math problem, share the instructions or constraints so I can provide steps that align with the requirements. -> Without specific instructions or constraints, it is difficult to provide tailored next steps for the given input of 2 8 8 14. Please provide more context or details so I can offer appropriate suggestions. -> - Divide the second number by the first number: 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - If you are working on a math problem, share the instructions or constraints so I can provide steps that align with the requirements.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - If you are working on a math problem, share the instructions or constraints so I can provide steps that align with the requirements. -> Without specific instructions or constraints, it is difficult to provide tailored next steps for the given input of 2 8 8 14. Please provide more context or details so I can offer appropriate suggestions.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 * 8 = 20 (left: 20 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 * 8 = 20 (left: 20 14) -> 20 / 14 = 1.42 (left: 1.42)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3 - 2 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 - 2 = 1"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 / 2 = 1.5 (left: 1 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 / 2 = 1.5 (left: 1 1.5) -> 1 + 1.5 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.5 8 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 / 3 = 3.33 (left: 3.33 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 7 10) -> 10 / 3 = 3.33 (left: 3.33 10) -> 3.33 * 10 = 33.3 (left: 10 33.3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 27) -> 6 * 27 = 162 (left: 162)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 + 8 = 10.5 (left: 10.5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 + 8 = 10.5 (left: 10.5 14) -> 14 / 10.5 = 1.33333 (left: 1.33333)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "3 - 2 = 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "2 7"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 - 2 = 1"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Without specific instructions or constraints, it is difficult to provide tailored next steps for the given input of 2 8 8 14. Please provide more context or details so I can offer appropriate suggestions."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 * 2.5 = 20 (left: 20 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 * 2.5 = 20 (left: 20 14) -> 20 * 14 = 280 (left: 280)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Without specific instructions or constraints, it is difficult to provide tailored next steps for the given input of 2 8 8 14. Please provide more context or details so I can offer appropriate suggestions."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 - 2 = 1"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 9 27"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 * 7 = 21 (left: 2 21) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> Input: 4 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 * 8 = 20 (left: 14 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 2.5 * 8 = 20 (left: 14 20) -> 14 - 20 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> 3. Clarify any constraints or rules that apply to the numbers or operations",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> 3. Clarify any constraints or rules that apply to the numbers or operations -> - Operations allowed are addition (+), subtraction (-), multiplication (*), and division (/)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3 - 2 = 1"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 3 - 2 =  -> 3 - 2 = 1 -> 3 + 2 = 5 (left: 5 = 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 - 2.5 = 5.5 (left: 5.5 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 - 2.5 = 5.5 (left: 5.5 14) -> 14 / 5.5 = 2.5454545454545454 (left: 2.5454545454545454)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Input: 3 9 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Use a different mathematical operation not mentioned before such as exponentiation or square root",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Use a different mathematical operation not mentioned before such as exponentiation or square root -> 8^2 = 64 (left: 8 64 14)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25) -> 8 * 25 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 3 9 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.5 8 14"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 - 2.5 = 5.5 (left: 5.5 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Divide one number by another -> 1. 10 / 4 = 2.5 (left: 2.5 8 14) -> 8 - 2.5 = 5.5 (left: 5.5 14 -> 5.5 * 14 = 77 (left: 77)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions?"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Consider the relationships between the numbers and how they can be manipulated",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Possible -> There are many possible next steps depending on the specific context or problem you are referring to. Can you provide more information or clarify the situation so I can give you more relevant suggestions? -> - Consider the relationships between the numbers and how they can be manipulated -> - Division: 8 / 2 = 4",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2) -> There is only one possible next step with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There is only one possible next step with only one number given."
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2) -> There is only one possible next step with only one number given. -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "44"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 8 12"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Since the input is already a single number, there are no possible next steps to perform any operations."
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> Since the input is already a single number, there are no possible next steps to perform any operations. -> No possible next steps as the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There is only one possible next step with only one number given."
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2) -> There is only one possible next step with only one number given. -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 56 12) -> 56 - 12 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 8"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 2 + 8 + 8 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.7273"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.7273"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273) -> 0.7273 / 2 = 0.36365 (left: 0.36365)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9.33"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> Since the input is already a single number, there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "No further steps can be taken with only one number given."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n15 - 6 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 6) + 2 = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All the possible ways have been exhausted, but it seems that there is no way to obtain 24 using the numbers 3, 4, 8, and 12 with the given restrictions.",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5) -> 3 / 1.5 = 2 (left: 2) -> No further steps can be taken with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 + 8 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 + 8 = 15 (left: 15 12) -> 15 / 12 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "7 12"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All provided examples are correct!",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9.33"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12) -> 12 - 2.67 = 9.33 (left: 9.33) -> 9.33 / 8 = 1.16625 (left: )",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7 12"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12) -> 7 - 12 = -5 (left: -5 12)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All provided examples have been solved correctly.",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 8 12"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 / 7 = 1.14 (left: 1.14 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 / 7 = 1.14 (left: 1.14 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 / 7 = 1.14 (left: 1.14 12) -> 1.14 * 12 = 13.68 (left: 13.68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "7 12"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.67 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.66666666667 (left: 2.67 12) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All of the above are correct.",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 12"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 12 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7 12"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12) -> 12 + 7 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "No possible next steps as there is only one number given."
                }
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1.71"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 / 2 = 0.855",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 / 2 = 0.855 -> 1.71 / 2 = 0.855 (left: 0.855)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 + 10 = 15 (left: 15) -> 15 + 8 = 23 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1.71"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 * 1 = 1.71 (left: 1.71)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 8 "
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1.71"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 + 2 = 3.71",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 + 2 = 3.71 -> 2 - 1.71 = 0.29 (left: 0.29 2 3.71)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 - 4 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 - 4 = -1 (left: -1) -> No possible next steps as the input is invalid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 -"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8 -> 8 * 4 = 32 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> Possible next",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> Possible next -> There are infinite possible next steps depending on the operations allowed and the numbers involved. Without specific numbers or operations provided, it is not possible to determine the exact next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.4"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 7 - 2 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 7 - 2 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8 -> 1.4 + 2 = 3.4 (left: 3.4)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1.71"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 * 2 = 3.42",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 7 - 2 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> Input: 1 5 -> 1 + 5 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 -"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "47"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36) -> 11 + 36 = 47 (left: 47) -> There are no possible next steps with the input of 47 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> Input: 1 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> Input: 1 5 -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> Input: 1 5 -> 1 + 5 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 10 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 -"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8 -> 4 - -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 8 "
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1.71"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> There are no possible next steps for the input 1.71.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> There are no possible next steps for the input 1.71. -> There are no possible next steps for the input 1.71 as it is not a whole number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "11"
                }
            },
            "Step 8": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> None. The input is not compatible with any of the previous steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1.71"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 * 6 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 * 2 = 3.42 (left: 3.42)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 5 -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "15 / 2 = 7.5 "
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5  -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "11"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 - 2 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 10 - 2 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.4"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 7 - 2 = 5 (left: 5 7) -> 7 / 5 = 1.4 (left: 1.4) -> There are no possible next steps with the input of 1.4.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8 -> 4 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 8 "
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 6 / 2 = 3 (left: 3 7) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8 -> 8 * 4 = 32 (left: 4 8  -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 9 * 2 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "There are no possible next steps with the input 0."
                }
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 + 8 = 19",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 + 9 = 17 (left: 16 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 + 9 = 17 (left: 16 17) -> 16 + 17 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps as the equation has already been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> None",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0 / 0 = undefined"
                }
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined -> There are no possible next steps because division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There is only one number given as input (4.5), so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> N/A",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "-8 72"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> Equation already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> Equation already solved. -> Equation already solved. No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0 -> 0 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 2 + 8 * 8 = 66 (left: 66)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "288"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "88"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "-8 72"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 - 16 = -8 (left: -8 8 9) -> 8 * 9 = 72 (left: -8 72) -> -8 * 72 = -576 (left: -576)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "0."
                }
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> None",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "16 8 9"
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps as the equation has already been solved."
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps as the equation has already been solved. -> Equation has already been solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps as the equation has already been solved. -> Equation has already been solved. -> Equation has already been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8) -> 8 * 9 = 72 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> None",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "216"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216) -> 21 * 6 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "-8 72"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "216"
                }
            },
            "Step 5": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216) -> 21 + 6 = 27 (left: 216 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 + 8 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216) -> 21 + 6 = 27 (left: 216 27) -> 216 + 27 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "88"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Equation already solved. No more possible next steps."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 5": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 - 16 = -8 (left: -8 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 - 16 = -8 (left: -8 8 9) -> 8 * 9 = 72 (left: -8 72)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "88"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88) -> 8 * 8 = 64",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88) -> 8 * 8 = 64 -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "216"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps as the equation has been solved."
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved. -> No possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2 9"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> 4.5 - 8 = -3.5 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 0."
                }
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> No possible next steps, the input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps, the input is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps: -> This input is incomplete. Please provide a set of numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps: -> This input is incomplete. Please provide a set of numbers to continue finding possible next steps. -> Without a complete set of numbers, it's not possible to provide specific next steps. Please provide a complete set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1.166666666666666 - 1.166666666666666 = 0"
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 - 1.166666666666666 = 0 -> 1.166666666666666 / 1.166666666666666 = 1 (",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer."
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 5 / 6 = 0. -> There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer. -> 5 * 6 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5.14285714286"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 * 2 = 10.28571428572 (left: 10.28571428572)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 7 = 42 (left: 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 - 1.166666666666666 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "43"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> 43 * 2 = 86 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 + 6 = 7.166666666666667 (left: 7.166666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 22"
                }
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2 22"
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 / 7 = 0.857142857143 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 / 7 = 0.857142857143 (left: -> There are no possible next steps as the input provided is already a result of a division operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps, the input is already a single number."
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number. -> No possible next steps, the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 "
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 + 8 = 16 -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1 + 17 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 * 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Please provide at least two numbers to calculate the next steps."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 5 / 6 = 0.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 5 / 6 = 0. -> There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "There are no possible next steps because the result of 5 / 6 is 0.83 recurring, which is not an integer."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 "
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 + 6 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "43"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 5": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7 7"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 6) -> 1.1666666666666667 * 6 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "19"
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> There are no possible next steps with the input 19.",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 3 / 1 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 3 / 1 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "13 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 4 3"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 25 - 5 = 20 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 + 4 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 + 4 = 5 (left: 3 5) -> 3 / 5 = 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1 4 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "20"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 * 2 = 20 (left: 20) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "21 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 3",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1430"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430) -> 1 + 4 = 5 (left: 5 3 0)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 * 143 = 1430 (left: 1430)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 2"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 11 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25 - 5 = 20 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4) -> 4 / 3 =",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24) -> 10 * 2 = 20 (left: 20 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 10 = 110 (left: 110 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1.33 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 / 4 = 0.25 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 / 4 = 0.25 ( -> 1 - 4 = -3 (left: -3 ",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 8 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15 -> 20 * 5 = 100 (left: 15 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 11 13"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 - 1 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 - 1 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 4 3"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 10 / 4 = 2.5 (left: 2.5",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 10 * 11 = 110 (left: 110 40)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 * 4 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "14 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 11 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "21 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 / 1 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 5 8 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13) -> 11 + 3 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "143"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 - 1 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 4 - 1 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 4 3"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 4 3"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 - 2 = 8 (left: 8 2) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 + 10 = 21 (left: 21 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 + 3 = 4 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 1 + 3 = 4 (left: -> 3 * 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 4 3"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 3 + 1 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143) -> 10 + 143 = 153 (left: 143) -> 4 - 3 = 1 (left: 1 4 3) -> 3 + 1 = 4 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 + 48 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 - 9 = 3 (left: 16 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 - 9 = 3 (left: 16 3) -> 16 / 3 = 5.33 (left: 5.33 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 / 4 = 24 (left: 24 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 / 4 = 24 (left: 24 96) -> 24 + 96 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with just the number 12."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "20"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20) -> 20 * 8 = 160 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "36 4 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 - 4 = 92 (left: 92)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "20"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 12 - 8 =  -> 12 - 8 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 13 12"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 12 = 1.08333333 (left: 1.08333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 14"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 9 8"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 + 9 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 4 * 96 = 384 (left: 384)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 / 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with just the number 12."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.77777777778 (left: 1.77777777778 12) -> 1.77777777778 * 12 = 21.33333333336 (left: 21.33333333336)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "36 4 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12) -> 12 / 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 / 4 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 / 4 = 24 (left: 4 24) -> 24 / 4 = 6 (left: 6 24)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.33 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 12 / 1.33 = 9.02 (left: 9.02)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "16 9 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: -",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 9 - 12 = -3 (left: - -> There are no possible next steps as there is no operation specified after the input \"-\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 - 4 = 92 (left: 4 92)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 - 4 = 92 (left: 4 92) -> 4 + 92 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "8 9 12"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 8 + 9 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 12 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 12 25) -> 12 * 25 = 300 (left: 300)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 - 4 = 92 (left: 92 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 - 4 = 92 (left: 92 4) -> 92 + 4 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "8 9 12"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 / 8 = 1.125 (left: 1.125 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 12 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 12 25) -> 12 + 25 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 4 + 96 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "37"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 12 25) -> 12 + 25 = 37 (left: 37) -> 37 * 8 = 296 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 * 4 = 32"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 + 12 = 48 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 + 12 = 48 (left: -> 12 * 36 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.33 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 + 12 = 13.33 (left: 13.33)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "16 9 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 12 = 432 (left: 4 432)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 * 12 = 432 (left: 4 432) -> 4 * 432 = 1728 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 / 4 = 24 (left: 24 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 / 4 = 24 (left: 24 96) -> 96 / 24 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 * 4 = 32"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 / 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12) -> There are no possible next steps with just the number 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 9 = 1.333333333",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 9 = 1.333333333 -> 9 / 12 \u2248 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 - 4 = 92 (left: 4 92)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 96 - 4 = 92 (left: 4 92) -> 4 + 92 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with just the number 12."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 24 - 4 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 9) - 12 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "84"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 4 * 12 = 48 (left: 36 48) -> 36 + 48 = 84 (left: 84) -> 8 * 4 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 - 9 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 96"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 24 4) -> 24 * 4 = 96 (left: 4 96) -> 4 + 96 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 14"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 * 9 = 144 (left: 144 12) -> 144 / 12 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 14"
                }
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 6 = 0 (left: 2 6  -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.67"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 * 2 = 5.34",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 * 2 = 5.34 -> 2.67 - 2 = 0.67 (left: 0.67 2 5.34)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18 -> 18 / 2 = 9 -> 9 - 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "6 12"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 * 2 = 12 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6  -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6  -> 6 / 6 = 1 (left: 1) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6  -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "Input: 3"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> Input: 3 -> 3 + 3 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> Input: 3 -> 3 + 3 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18 -> 18 / 2 = 9 -> 18 / 9 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with only one number. -> Please provide more numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18 -> 18 / 2 = 9 -> 18 / 2 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18 -> 18 / 2 = 9 -> 18 / 2 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "Input: 3"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 + 6 = 9 (left: 6 9) -> Input: 3 -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "18 / 2 = 9"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18 -> 18 / 2 = 9 -> 18 / 2 = 9 (left: 9 9)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 * 2 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 -> 18 + 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 6"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 18 -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7.5"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 * 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.67"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps for the input 2.67.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps for the input 2.67. -> There are no possible next steps for the input 2.67.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> Input: 4 5 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> Input: 4 5 9 -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 4 + 5 = 9 (left: 5 9) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8) -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There is only one possible next step: 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There is only one possible next step: 5. -> 5 + 1 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps with the input of 1.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3 12) -> -3 * 12 = -36 (left: -36)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 20."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 + 9 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 + 9 = 15 (left: 12 15) -> 12 / 15 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 9 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps for the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7.5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5) -> 2.5 + 5 = 7.5 (left: 7.5) -> 7.5 / 8 = 0.9375 (left: 0.9375 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5) -> 2.5 + 5 = 7.5 (left: 7.5) -> 7.5 / 8 = 0.9375 (left: 0.9375 8) -> 0.9375 * 8 = 7.5 (left: 7.5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: -> 6 / 2 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "4.5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5. -> There are no possible next steps with the input of 4.5.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5) -> 2.5 + 5 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "7.5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5 5) -> 2.5 + 5 = 7.5 (left: 7.5) -> 7.5 * 8 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 + 9 = 15 (left: 12 15) -> 12 / 15 = 0.8 (left: 0.8) -> There are no possible next steps with the input 0.8.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 8 "
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8  -> 2 + 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 / 9 = 0.6666666666666666 (left: 0.666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 / 9 = 0.6666666666666666 (left: 0.666 -> There are no possible next steps with the input of 0.666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 1.25."
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps with the input of 1.25. -> There are no possible next steps with the input of 1.25.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps with the input of 1.25. -> There are no possible next steps with the input of 1.25. -> There are no possible next steps with the input of 1.25.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 10 = 200 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 10 = 200 (left: -> 10 * 20 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input of just \"5\" as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> There are no possible next steps with the input of just \"5\" as there are no other numbers to perform operations with. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 / 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 "
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 7 * 8 = 56 (left: 56) -> 5 / 6 = 0.8333 (left: 0.8333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> Input: 36 divided by 2 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 - 13 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "35.75"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13) -> 2.75 * 13 = 35.75 (left: 35.75) -> 35 / 75 = 0.4666666666666667 (left: 0.4666666666666667)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the input 36."
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36/2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36/2 = 18 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "91"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> 91 - 1 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "13"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 2 = 38 -> 2 * 36 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "88"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 2 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "Input: 36 / 2 = 18 + 8 = 26 - 10 = 16 / 2 = 8"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 / 2 = 18 -> Input: 36 / 2 = 18 + 8 = 26 - 10 = 16 / 2 = 8 -> 18 + 8 = 26 (left: 26 - 10 = 16 / 2 = 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 + 2 = 38 -> 38 / 2 = 19 (left: 19 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "35.75"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13) -> 2.75 * 13 = 35.75 (left: 35.75) -> There are no possible next steps with the input 35.75.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13) -> 2.75 * 13 = 35.75 (left: 35.75) -> There are no possible next steps with the input 35.75. -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Input: 36 divided by 2 ="
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13) -> 2.75 * 13 = 35.75 (left: 35.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 - 13 = 3 (left: 3) -> 3 / 7 = 0.42857142857142855 (left: 0.42857142857142855)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Input: 36 divided by 2 ="
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> Input: 36 divided by 2 = -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 / 2 = 18 -> Input: 36 / 2 = 18 + 8 = 26 - 10 = 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 2 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 13 - 2 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "Input: 36 / 2 = 18 + 8 = 26 - 10 = 16 / 2 = 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 8 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 7 8  -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 8 / 2 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 8 / 2 = 4 (left: 4 13) -> 4 + 13 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "35.75"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13) -> 2.75 * 13 = 35.75 (left: 35.75) -> 35.75 / 2 = 17.875",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13) -> 2.75 * 13 = 35.75 (left: 35.75) -> 35.75 / 2 = 17.875 -> 35.75 * 2 = 71.5",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666 -> 0.916666666666666 + 2 = 2.916666666666666 (left: 2.916666666666666)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 11 13"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 / 4 = 3.25 (left: 3.25 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "35.75"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13) -> 2.75 * 13 = 35.75 (left: 35.75) -> 35.75 / 2 = 17.875",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13) -> 2.75 * 13 = 35.75 (left: 35.75) -> 35.75 / 2 = 17.875 -> 2 / 35.75 = 0.05594405594",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 * 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 11 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 - 13 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 11 = 2 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 - 13 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "Input: 36 / 2 = 18 + 8 = 26 - 10 = 16 / 2 = 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 + 13 = 36 (left: 36) -> 36 / 2 = 18 (left: 18 36) -> 18 / 2 = 9 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 - 4 = 7 (left: 7 13) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9) -> 9 - 3.5 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 14 9"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3 (left: 3 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 / 13 = 0.769230769 (left: 0.769230769)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 9 / 4 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 9 / 4 =  -> 9 / 4 = 2.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "None. The input is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 * 14 = 56 (left: 56 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 * 14 = 56 (left: 56 9) -> 56 * 9 = 504 (left: 504)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 + 14 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 + 14 = 18 (left: 9 18) -> 9 * 18 = 162 (left: 162)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "9 / 4 = 2.25"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "39"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> There are no possible next steps with the input 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 - 4 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 - 4 = 10 (left: 10 9) -> 10 + 9 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 - 4 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 - 4 = 10 (left: 10 9) -> 10 + 9 = 19 (left: 9 19)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 13 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 10 * 13 = 130 (left: 36 130)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 10 * 13 = 130 (left: 36 130) -> 36 * 130 = 4680 (left: 4680)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4680"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 10 * 13 = 130 (left: 36 130) -> 36 * 130 = 4680 (left: 4680) -> 6 * 8 = 48 (left: 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 * 14 = 56 (left: 56 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 * 14 = 56 (left: 56 9) -> 56 / 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "0.769230769"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 * 14 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 * 14 = 56 (left: 9 56) -> 56 / 9 = 6.22 (left: 6.22)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "4 * 9 = 36"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9) -> 3.5 * 9 = 31.5 (left: 31.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 - 9 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 - 9 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "9 - 4 = 5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 * 14 = 56 (left: 56 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 4 * 14 = 56 (left: 56 9) -> 56 + 9 = 65 (left: 65)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9) -> 6 + 3 = 9",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 3 + 4 = 7 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> None. The input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9) -> 3.5 + 9 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4680"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 9 / 4 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 9 / 4 =  -> 9 / 4 = 2.25",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 * 3 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 4 * 9 =",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 4 * 9 = -> 4 * 9 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9) -> 9 / 3.5 = 2.5714285714285716 (left: 2.5714285714285716)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4680"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 / 4 = 3.5 (left: 3.5 9) -> 9 - 3.5 = 5.5 (left: 5.5 9)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 9 - 4 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 9 - 4 =  -> 9 - 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 14 9"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 - 9 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 / 3 is not a whole number. -> 4 + 3 = 7 (left: 3 7) -> 5 + 9 = 14 -> 9 - 5 = 4 (left: 4 14 9) -> 14 - 9 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "9 - 4 = 5"
                }
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 1888022,
        "output_tokens": 777408.4539682517,
        "total_cost": 2.110123680952378
    }
}