{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((5 + 6) - 9) * 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 12)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 6 12) -> 6 - 4 = "
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) "
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 12 = 21 (left: 5 6 21)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 - 3 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 5 6 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 * 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)"
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5 11"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 3 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 6 = 3.5 (left: 3.5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 * 9 = 189 (left: 189)",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "10 11 54"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "21 - 9 = 12 (left:"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "21 - 9 = 12 (left:"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 11 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 11 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "16"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 9 - 21 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "21 - 9 = 12 (left:"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 / 9 = 2.3333333333333335 (left: 2.3333333333333335)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 + 9 = 15 (left: 15 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 9 15 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 / 12 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 11 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 11 13) -> 6 + 11 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "21 - 9 = 12 (left:"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 / 9 = 2 (left: 2 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 9 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> None as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 / 9 = 2.3333 (left: 2.3333)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "21 - 9 = 12 (left:"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 9 * 21 = 189 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "16 / 2 = 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 11"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 / 9 = 2.3333... (left: 2.3333...)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "9 * 21 = 189 (left:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 / 10 = 0.9 (left: 6 0.9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 + 6 = 17 (left: 17 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "21 - 9 = 12 (left:"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 11 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There is only one number left, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 11 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 11 19) -> 11 + 5 = 16 (left: 16 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 11"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 9 - 21 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "18 9"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 9 = 12 (left: 12 12 189)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 / 9 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "21 - 9 = 12 (left:"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 * 9 = 189 (left: 189 - 9 = 180)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 / 11 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 - 10 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 - 9 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "21 - 9 = 12 (left:"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 / 9 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "21 - 9 = 12 (left:"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 - 6 = 3 (left: 3 9 21) -> 21 - 9 = 12 (left: -> 21 / 9 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "There is only one number left, so no possible next steps."
                }
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 4 9 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 16"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 - 16 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 16"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8 16) -> 16 / 8 = 2 (left: 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 / 2 = 5.5 (left: 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "13 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 16"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: (2 * 4) + (5 + 11) = 24"
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 - 2 = 13 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 10"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 1 + 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> Input: 4 5 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 2 * 8 = 16 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 / 6 = 0.16667 (left: 0.16667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 1 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 - 2 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 1 2 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 2 + 8 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 2 8"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 8 / 2 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 2 8) -> 1 + 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * (1 + 2) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 288"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288) -> 288 - 8 = 280 (left: 280 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5 4"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 9 4"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 288"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288) -> 288 - 8 = 280 (left: 280 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 288"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288) -> 8 * 288 = 2304 (left: 2304)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "8 288"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 9 4"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 + 9 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 288"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288) -> 288 - 8 = 280 (left: 8 280)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5 4"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 288"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288) -> 288 / 8 = 36 (left: 36 288)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 288"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288) -> 8 * 288 = 2304 (left: 2304)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "8 288"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 6 * 3 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 9 - 3 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 6 * 3 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 10 * 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 2 / 5 = 0.4 (left: 0.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 288"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288) -> 8 * 288 = 2304 (left: 2304)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "8 288"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5 4"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 - 5 = -1 (left: -1 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 6 - 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 3 - 10 = -7 (left: -7 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8 288"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> 36 * 8 = 288 (left: 8 288) -> 288 - 8 = 280 (left: 280 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 9 4"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 9 - 4 = 5 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 2 + 5 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 + 5 = 9 (left: 4 9 4) -> 4 * 9 = 36 (left: 36) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 7 - 13 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 * 13 = 24.14285714282 (left: 24.14285714282)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 13 - 1.85714285714 = 11.14285714286 (left: 11.14285714286)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "13 13 72"
                }
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 / 13 = 5 (left: 13 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 / 18 = 1.33 (left: 1.33 18)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.33 18"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 / 18 = 1.33 (left: 1.33 18) -> 18 / 1.33 = 13.53 (left: 13.53)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "18 42"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.857 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.857 (left: 1.857 13) -> 13 / 1.857 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18) ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "13 13 72"
                }
            },
            "Step 6": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 42"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 + 18 = 42 (left: 18 42) -> 18 + 42 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "1.33 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.857 (left: 1.857 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 13 + 1.85714285714 = 14.85714285714 (left: 14.85714285714)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 * 18 = 432 (left: 432)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1.86 13"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 13 - 1.86 = 11.14 (left: 11.14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 + 18 = 42",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 13 - 1.85714285714 = 11.14285714286 (left: 11.142857142",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> There are no possible next steps for the input 24.18 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 + 13 = 14.86 (left: 14.86)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.33 18"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 / 18 = 1.33 (left: 1.33 18) -> 1.33 + 18 = 19.33 (left: 19.33)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "1.33 18"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "13 13 72"
                }
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 13 / 1.86 = 6.99 (left: 6.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 13 - 1.86 = 11.14 (left: 11.14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.33 18"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 / 18 = 1.33 (left: 1.33 18) -> 18 / 1.33 = 13.53 (left: 13.53)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "18 42"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 7 + 13 = 20 (left: 13 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16667 (left: 2.16667 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 * 13 = 24.14285714282 (left: 24.14285714282)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 13 / 1.86 = 6.989 (left: 6.989)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 + 18 = 42",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.857 (left: 1.857 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 13 / 1.86 = 6.989 (left: 6.989)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 + 18 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24.18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 + 18 = 42 (left: 18 42)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 + 18 = 42",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "13 13 72"
                }
            },
            "Step 5": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 13 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 / 18 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24.18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 13 / 1.86 = 6.989 (left: 6.989)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 - 18 = 6 (left: 6 18)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 + 18 = 31 (left: 31 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 + 13 = 14.85714285714 (left: 14.85714285714)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 13 - 1.85714285714 = 11.14285714286 (left: 11.14285714286)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 + 18 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 13 - 1.86 = 11.14 (left: 11.14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24.18"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> None, since there is only one number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 13 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 7 + 13 = 20 (left: 13 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 - 13 = -11.14285714286 (left: -11.142857142",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 13 - 1.85714285714 = 11.14285714286 (left: 11.14285714286)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.85714285714 13"
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.85714285714 (left: 1.85714285714 13) -> 1.85714285714 + 13 = 14.85714285714 (left: 14.85714285714)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1.86 13"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 13 - 1.86 = 11.14 (left: 11.14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "18 42"
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 / 7 = 1.86 (left: 1.86 13) -> 1.86 * 13 = 24.18 (left: 24.18)  -> 24 + 18 = 42 (left: 18 42) -> 42 / 18 = 2.3333333333333335 (left: 2.3333333333333335)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "1.33 18"
                }
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 4 * 3 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 "
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 / 2 = 5 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 10 - 3 = 7 (left: 4 7)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 3 + 6) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 3) * 6 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 7"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 3"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 / 2 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4 10) -> 3 + 9 = 12 (left: 12 27)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 10"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10) -> Possible next steps:"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 60"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 60 / 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 6) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "5 3"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4 10) -> 4 / 10 = 0.4 (left: 0.4 10)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 + 4 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((11 - 3) * 4) - 8 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((11 - 3) * 4) - 8 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10) -> 4 + 8 ="
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 10 - 5 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 32"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 10 / 5 = 2"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 8 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 32"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> Possible next steps:"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 / 4 = 2.75 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 + 8 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 32"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)"
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * 4) * (8 - 4) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 7\nSteps:\n3 + 7 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 7) - 6) * 2 = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n7 + 8 = 15 (left: 3 3 15)\n3 + 3 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\n90 / 3 = 30 (left: 30)\n30 / 10 = 24 (left: 24)\nAnswer: (((3 + 3) + (7 + 8)) *",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 + 8 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 4) + 8) * 2 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 + 3 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)\n48 / 9 = 5.33333333333\nAnswer: (3 + 3) * (8 / 9) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 4 5 7\nSteps:\n4 * 7 = 28 (left: 3 5 28)\n28 - 5 = 23 (left: 3 23)\n23 - 3 = 20 (left: 20)\nAnswer: ((4 * 7) - 5) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 * 3 = 27 (left: 8 27)\n27 - 8 = 19 (left: 19)\nAnswer: (3 + 6) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((6 * 3) + (9 - 7)) + 4 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3 - 3) * 8 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 * 8 = 32 (left: 3 32)\n32 - 3 = 29 (left: 29)\nAnswer: ((7 - 3) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 16 = 24\nAnswer: ((3 * 7) - 8) + 3 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24\nAnswer: ((3 * 7) - 8) + 3 + 8 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 19 = 24\nAnswer: ((3 * 7) - 5) + 3 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (3 * 6) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 3 = 6 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n13 - 5 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) + 7) * 3 = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 24 = 24 (left: 24)\nAnswer: (((",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((4 * 5) - 3) * 20 / 2.5 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Overall, there are multiple ways to obtain 24 using the given numbers and basic arithmetic operations.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n18 / 2 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * 4) + (8 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 5 5 7\nSteps:\n5 + 5 = 10 (left: 3 7 10)\n7 + 3 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 5) + 5) * (7 +",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 7) + 3) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n3 * 3 = 9 (left: 6 9)\n9 * 8 = 72 (left: 72)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 5) * (3 * 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) + 8 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) = 24 -> The solutions provided are correct.",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 - 23 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: ((3 * 7) + 5) - 3 - 23",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 18 8)\n18 + 8 = 26 (left: 26)\nAnswer: (3 + 3) * (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (5 - 3) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> All these expressions are valid ways to obtain 24 using the numbers provided.",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (6 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 10 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 3 = 6 (left: 4 5 6)\n6 * 4 = 24 (left: 5 24)\n24 - 5 = 19 (left: 19)\nAnswer: (3 + 3) * 4 - 5 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 10 + 4 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 8 + 10 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 7 10) -> 7 / 10 = 0.7 (left: 0.7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((6 - 4) * 7) + 10 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * 7 + 10 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7) = 24"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12.8333 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12.8333 12) -> 12.8333 - 12 = 0.8333 (left: 0.8333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "9.1667 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 12 / 9.1667 = 1.3102 (left: 1.3102)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6.54545 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 12 / 6.54545 = 1.83486 (left: 1.83486)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 / 16 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12.8333 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "20.16663 32.16663"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20.16663 (left: 12 20.16663) -> 12 + 20.16663 = 32.16663 (left: 20.16663 32.16663) -> 20.16663 + 32.16663 = 52.33326 (left: 52.33326)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 12 16"
                }
            },
            "Step 7": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 + 16 = 88 (left: 88)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 20.16663"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20.16663 (left: 12 20.16663) -> 12 + 20.16663 = 32.16663 (left: 20.16663 32.16663)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10.1667 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 - 1.8333 = 10.1667 (left: 10.1667 12) -> 10.1667 * 12 = 122 (left: 122)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6.54545 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 * 12 = 78.5454 (left: 78.5454)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "9.1667 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 + 12 = 21.1667 (left: 21.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "22 23"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 * 1.8333 = 22 (left: 11 12 22) -> 11 + 12 = 23 (left: 22 23) -> 22 + 23 = 45 (left: 45)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 / 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "11 12 66"
                }
            },
            "Step 5": {
                "Step": "11 * 6 = 66 (left: 11 12 66) -> 11 + 12 = 23 (left: 23 66)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6.54545 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 12 22"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 * 1.8333 = 22 (left: 11 12 22) -> 12 - 11 = 1 (left: 1 12 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 + 16 = 88 (left: 88)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12.8333 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12.8333 12) -> 12.8333 + 12 = 24.8333 (left: 24.8333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10.1667 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 - 1.8333 = 10.1667 (left: 10.1667 12) -> 10.1667 - 12 = -1.8333 (left: -1.8333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 / 16 = 4.5 (left: 4.5)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 5.99994 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 3": {
                "Step": "11 * 6 = 66 (left: 11 12 66)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "11 12 66"
                }
            },
            "Step 4": {
                "Step": "11 * 6 = 66 (left: 11 12 66) -> 12 / 11 = 1.09 (left: 1.09 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 5 / 11 = 0.45 (left: 0.45 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6.54545 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 + 12 = 18.54545 (left: 18.54545)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 - 16 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20.16663 (left: 12 20.16663)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 3": {
                "Step": "11 + 11 = 22 (left: 6 12 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9.1667 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 12 - 9.1667 = 2.8333 (left: 2.8333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "9.1667 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 + 12 = 21.1667 (left: 21.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 + 16 = 88 (left: 88)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 12 22"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 * 1.8333 = 22 (left: 11 12 22) -> 11 + 12 = 23 (left: 22 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9.1667 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 / 12 = 0.7639 (left: 0.7639)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 - 16 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 11 = 1 (left: 1.83333 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 - 1.83333 = 9.16667 (left: 9.16667 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 - 1.8333 = 10.1667 (left: 10.1667 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 12 22"
                }
            },
            "Step 6": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 12 16"
                }
            },
            "Step 7": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 16 / 2 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 + 16 = 88 (left: 88)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 / 6 = 1.83 (rounded to 2) (left: 2 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 * 1.8333 = 22 (left: 11 12 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "20.16663 32.16663"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20.16663 (left: 12 20.16663) -> 12 + 20.16663 = 32.16663 (left: 20.16663 32.16663) -> 20.16663 + 32.16663 = 52.33326 (left: 52.33326)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "11 12 66"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "9.1667 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 12 / 9.1667 = 1.3107 (left: 1.3107 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6.54545 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 - 12 = -5.45455 (left: -5.45455)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 12 16"
                }
            },
            "Step 7": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 + 12 = 18 (left: 18 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "72 16"
                }
            },
            "Step 8": {
                "Step": "11 + 11 = 22 (left: 6 12 22) -> 22 - 6 = 16 (left: 6 12 16) -> 6 * 12 = 72 (left: 72 16) -> 72 + 16 = 88 (left: 88)",
                "Pruning": "NA"
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 + 2 = 11 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 6 9"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 6 9) -> 6 * 9 = 54 (left: 8 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.996 (left: 2.996)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14.67"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 + 11 = 14.67 (left: 14.67) -> There are no possible next steps for the number 14.67 as it is already a decimal number and cannot be further operated on with the given operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 3 + 9 = 12 (left: 12) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 + 11 = 14.67 (left: 14.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 5 + 25 = 30 (left: 30) -> There are no possible next steps with the input \"30\" as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 3 + 9 = 12 (left: 12) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 + 11 = 14.67 (left: 14.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": ""
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) ->  -> It seems like you did not provide any input for the next steps. Can you please provide the numbers you want to use for the calculations?",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 3 / 9 = 0.3333 (left: 0.3333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 6 9"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 6 9) -> 8 * 6 = 48 (left: 48 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 3 + 8 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 * 11 = 40.37 (left: 40.37)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "40.37"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 * 11 = 40.37 (left: 40.37) -> There are no possible next steps for the input 40.37 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 + 11 = 14.67 (left: 14.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "14.67"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 + 11 = 14.67 (left: 14.67) -> There are no possible next steps for the number 14.67 as it is already a decimal number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6 5"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 6 5) -> Input: 4 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 5 + 25 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "14.67"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 + 11 = 14.67 (left: 14.67) -> There are no possible next steps with the input 14.67.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = 5.5 (left: 5.5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "7 11"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 7 - 11 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 * 11 = 40.37 (left: 40.37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 5 + 25 = 30 (left: 30) -> None.",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 9 + 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "14.67"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 + 11 = 14.67 (left: 14.67) -> There are no possible next steps for the input 14.67 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 * 11 = 40.37 (left: 40.37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14.67"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 3.67 + 11 = 14.67 (left: 14.67) -> There are no possible next steps with the input of 14.67 as it is already a single number and cannot be combined with any of the original numbers given.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.996 (left: 2.996)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5.5"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 - 2 = 3.5 (left: 3.5)",
                "Pruning": "NA"
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 17"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24) -> Answer: ((13 - 5) + (7 + 9)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 17"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 / 7 = 1.28571428571 (left: 1.28571428571 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24) -> Answer: ((13 - 5) + 7) + 9 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 9 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 17"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24) -> Answer: ((13 - 5) + (7 + 9)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 17"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.42857142857 (left: 2.42857142857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24) -> Answer: ((13 - 5) + (7 + 9)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 13 16"
                }
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 13 / 5 = 2.6 (left: 2.6 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24) -> Answer: ((13 - 5) + (7 + 9)) + 8 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 17"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 / 17 = 0.41 (left: 0.41)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 8 - 16 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 5 13 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 * 9 = 63 (left: 8 63)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 9 - 2 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24) -> Answer: ((13 - 5) + 7) + 9 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "16 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 8 128)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 7 + 9 = 16 (left: 8 16) -> 16 + 8 = 24 (left: 24) -> Answer: ((13 - 5) + 7) + 9 = 24"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 48 12"
                }
            },
            "Step 3": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 - 2 = 46 (left: 12 46)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n21 - 8 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 + 5 = 21 (left: 21)\n21 * 1 = 21 (left: 21)\n21 * ",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9)\n9 - 8 = 1 (left: 1 9)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 8 = 32 (left: 32)\n32 / 8 = 4 (left: 4)\n4 * 8 = 32 (left: 32)\nAnswer: ((",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 6"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 * 3 = 15 (left: 15 12)\n15 - 12 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\nAnswer: (((3 + 9) * 3) - ",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 4 8\nSteps:\n3 + 3 = 6 (left: 4 6 8)\n6 * 4 = 24 (left: 24 8)\n24 - 8 = 16 (left: 16)\nAnswer: (3 + 3) * 4 - 8 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 9\nSteps:\n3 * 9 = 27 (left: 3 5 27)\n5 - 3 = 2 (left: 2 27)\n27 / 2 = 13.5 (left: 13.5)\nAnswer: (3 * 9) / (5 - 3) = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4 24)\n3 * 4 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) / 3 * 4 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n50 / 3 = 16.6667 (left: 16.6667)\nAnswer: (3 + 7) * (5 * 10 / 3) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n7 + 8 = 15 (left: 15 18)\n15 + 18 = 33 (left: 33)\nAnswer: ((6 * 3) + (7 + 8)) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * ",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n12 * 3 = 36 (left: 36)\n36 - 12 = 24 (left: 24)\nAnswer: ((5 + 7) * (6 - 3)) - 12 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 4 7\nSteps:\n4 + 7 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n9 * 11 = 99 (left: 99)\nAnswer: (3 * 3) * (4 + 7) = 99",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 8 9)\n8 - 9 = -1 (left: -1)\n-1 * -1 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * 24 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((3 * 4) + (5 + 7)) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n3 * 5 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 5) - 1 =",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * 24 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 - 2 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 3 9\nSteps:\n3 * 3 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 3) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 8 10\nSteps:\n3 * 8 = 24 (left: 3 10 24)\n10 - 3 = 7 (left: 7 24)\n7 + 24 = 31 (left: 31)\nAnswer: (3 * 8) + (10 - 3) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 6 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 4 5 6\nSteps:\n5 - 3 = 2 (left: 2 4 6)\n4 * 6 = 24 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (5 - 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n7 + 8 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) + 7) * 2 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 8) + 3) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8 6"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 5) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (3 * 6) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 48 12"
                }
            },
            "Step 2": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 2 + 48 = 50 (left: 50 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 3) - (8 - 1) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 5 6 9\nSteps:\n5 * 6 = 30 (left: 3 9 30)\n30 - 9 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 9) + 6 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - 3) = 32",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n5 - 4 = 1 (left: 1 8)\n8 * 1 = 8 (left: 8)\nAnswer: (7 - 3) * (5 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10 24)\n10 + 24 = 34 (left: 34)\nAnswer: ((3 + 3) * 3) - 8 + 24 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 * 12 = 132 (left: 132 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> No possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There is only one possible next step with the input 36: 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There is only one possible next step: 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 is already a single number, so no further steps are needed."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 is already a single number, so no further steps are needed. -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 = 9.75 (left: 9.75 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 * 12 = 132 (left: 132 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 is already a single number, so no further steps are needed.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 is already a single number, so no further steps are needed."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 is already a single number, so no further steps are needed. -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "36 is already a single number, so no further steps are needed."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 + 36 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 is already a single number, so no further steps are needed."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 is already a single number, so no further steps are needed. -> 36 + 8 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 / 12 = 3 (left: 11 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There is only one number provided, so there are no possible next steps to perform.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 * 11 = 99 (left: 4 12 99)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 - 3 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 + 2 = 38 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "36"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 13 = -1 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 * 3 = 33 (left: 33 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> None - 36 is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with the other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> Input: 4 9 16 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 + 36 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> No possible next steps as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 - 2.25 = 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> None - 36 is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36 is already a single number, so no further steps are needed."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 is already a single number, so no further steps are needed. -> 36 + 8 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 - 11 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> No next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "224"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 2 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 24"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 4 = 6 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "4 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 24"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 22"
                }
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 22 / 7 = 3.14 (left: 3.14 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 24"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 - 4 = 20 (left: 4 20)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "224"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 2 = 4 (left: 4 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 24"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 - 4 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "22 * 4 = 88 (left:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "60"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "4 56"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 24"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 / 4 = 6 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 24"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 4 = 6 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "224"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 24"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 / 4 = 6 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "224"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 / 4 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "224"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "224"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 24"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 - 4 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "224"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 * 4 = 88 (left:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 / 7 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.14 8"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 22 / 7 = 3.14 (left: 3.14 8) -> 8 / 3.14 = 2.55 (left: 2.55)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "224"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "60"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> 60 / 15 = 4 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 24"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 4 + 20 = 24 (left: 20)",
                "Pruning": {
                    "Idx": "7.7",
                    "Pruned state": "4 4 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "224"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> ",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "224"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 - 4 = 18 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "224"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 + 4 = 26 (left: 4 26)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 47 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 9 47 56) -> 47 / 9 = 5.22 (left: 5.22 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "224"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 4 = 6 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "224"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 2 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "224"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 * 4 = 88 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "22 * 4 = 88 (left:"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 * 4 = 88 (left: -> 5 / 5 = 1 (left: 1",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "4 24"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 9 47 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "60"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> There is only one possible next step: 60 divided by 2 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "4 24"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "224"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "224"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 4 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 24"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 9 * 3 = 27 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 7 8 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "6 24"
                }
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 4 = 6 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "224"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 20"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 - 4 = 20 (left: 4 20) -> 6",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "224"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 24"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 - 4 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "22 * 4 = 88 (left:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 7 8 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 7 + 8 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "60"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> There are no possible next steps with just the number 60 provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 20"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 * 2 = 4 (left: 4 24) -> 24 - 4 = 20 (left: 4 20) -> 4 * 20 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 24"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "224"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 2 + 24 = 26 (left: 4 26)",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 / 10 = 1.2 (left: 1.2 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 * 2 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 * 12 = 288 (left: 288)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (12 + 12) - (12 - 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 * 2 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 - 6 = 6 (left:"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 * 2 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (5 - 4 + 3) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> Input: 10 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (5 - 4 + 3) * 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (5 - 4 + 3) * 6 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 / 3 = 2 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 / 3 = 2 (left: 2 20) -> 2 + 20 = 22 (left: 22)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 - 6 = -2 (left: -2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 5 6 7)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 / 3 = 2 (left: 2 20) -> 20 / 2 = 10 (left: 10)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 / 3 = 2 (left: 2 20) -> 20 / 2 = 10 (left: 10)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 12 - 10 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 / 3 = 2 (left: 2 20) -> 20 / 2 = 10 (left: 10)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 2"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 * 6 = 18 (left: 1 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 / 3 = 2 (left: 2 20) -> 20 - 2 = 18 (left: 18)"
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * 6 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 + 9 = 30 (left: 5 30)\n30 - 5 = 25 (left: 25)\nAnswer: ((3 * 7) + 9) - 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 12 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 16 + 12 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * 9 =",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 * 8) + 3) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Great job! You were able to find different ways to obtain 24 using the given numbers and basic arithmetic operations. Keep up the good work! Is there anything else I can help you with?",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 5 7 9\nSteps:\n7 + 9 = 16 (left: 3 5 16)\n16 - 5 = 11 (left: 3 11)\n11 * 3 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((7 + 9) - 5) * 3 - 9 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 10) + 1 =",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 10 + 15 = 25 (left: 25) -> 25 * 5 = 125 (left: 125)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 7 8 9\nSteps:\n7 - 3 = 4 (left: 4 8 9)\n4 * 9 = 36 (left: 8 36)\n8 - 36 = -28 (left: -28)\n-28 + 24 = 24 (left: 24)\nAnswer: ((7 - 3) * 9) + 24 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 1 = 24\nAnswer: ((5 + 6) - 4) * 3 + 1 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n5 + 4 = 9 (left: 9 8)\n9 * 8 = 72 (left: 72)\nAnswer: (7 - 3) * (5 + 8) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * (5 + 7)) - 8 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) / (4 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 12 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 16 - 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 10 + 15 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 5 5\nSteps:\n3 + 5 = 8 (left: 3 8 5)\n8 * 3 = 24 (left: 24 5)\nAnswer: (3 + 5) * 3 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 - 3) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * 6 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (7 - 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: 3 * (3 * 8 - 9) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + 5)) * 8 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24)\nAnswer: (3 + 3) * 4 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 + 9 = 18 (left: 18 9)\n18 - 8 = 10 (left: 10 9)\n10 + 9 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: (((3 * 3) + 9) - ",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (4 * 6) * (3 * 2) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 8) - (9 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 "
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + 1 =",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n8 - 9 = -1 (left: -1 9)\n-1 * 9 = -9 (left: -9)\n-9 + 24 = 24 (left: 24)\nAnswer: ((3 * 3) + 8) + 9 = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 4) + (5 + 6)) + 1 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 12 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 7 8\nSteps:\n7 + 3 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n10 * 5 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((7 + 3) * (8 - 3)) /",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 10 + 15 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) * (6 - 3)) - 9 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 6) * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 5 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (2 * 3) * (5 + 7) = 48",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 / 3 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (6 / 3) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: ((3 * 3) - 3) * 8 = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * 12 = 24 -> Input: 3 5 7 9\nSteps:\n5 + 7 = 12 (left: 3 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 24 (left: 24)\nAnswer: ((5 + 7) - 9) * 3 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 6 * (10 - 12 + 12) = 24 -> Input: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 - 8 + 9) * 4) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((5 + 5) + 9) + 5 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 19"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((5 + 5) + 9) + 5 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 19"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 7 - 3 = 4 (left: 4 11)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: (5 + 5) + (5 + 9) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 ="
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 19"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 19"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 19"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 19"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((5 + 5) + 9) + 5 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 19"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 5 * 9 = 45 (left: 1 45)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: (5 + (5 + 5)) + 9 = 24"
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 6 / 1 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 3 + 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "187"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187) -> 18 + 7 = 25 (left: 25)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 1 x 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 - 17 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "187"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187) -> 1 + 8 + 7 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 * 6 = 66 (left: 11 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "60 11"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 * 11 = 660 (left: 660)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 17 / 11 = 1.5454545454545454 (left: 1.5454545454545454)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.5454545454545454"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 17 / 11 = 1.5454545454545454 (left: 1.5454545454545454) -> 1.5454545454545454 * 2 = 3.0909090909090908",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 1 x 5 = 5 (left: 5) -> 5 * 8 = 40 (left: 8 40)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 6 25 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "60 11"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 / 11 = 5.45 (left: 5.45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "60 11"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 + 11 = 71 (left: 71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "49"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 - 11 = 49 (left: 49) -> 49 / 7 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 * 5 = 30 (left: 11 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "60 11"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 - 11 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 / 6 = 1.83333 (left: 1.83333 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 17 - 11 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "187"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187) -> 1 + 8 + 7 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 25 11"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 25 11) -> 25 - 6 = 19 (left: 19 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "60 11"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 - 11 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "187"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187) -> 1 * 8 = 8 (left: 8 7)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "60 11"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 + 11 = 71 (left: 71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "60 11"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 - 11 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "71"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 60 11) -> 60 + 11 = 71 (left: 71) -> 7 + 1 = 8",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 / 6 = 1.833333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 25 11"
                }
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 25 11) -> 11 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 17"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 11 * 17 = 187 (left: 187)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 17 - 11 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 11 - 6 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 + 6 = "
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 17) -> 3 + 6 =  -> 3 + 6 = 9",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 9 14"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 / 9 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 / 48 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 15) + (8 + 16) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 9 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 9 17"
                }
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 9 17) -> 6 + 9 = 15 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (8 + (9 + 6)) * 9 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) * (9 + 15) = 24",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 9 11.97)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) * (9 + 15) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1."
                }
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with just the input \"1.\" Please provide additional numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (15 + 9) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "8 24"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 * 0 = 0 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (8 + 16) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "72 15"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15) -> 72 + 15 = 87 (left: 87)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (8 + (9 + 6)) + 9 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "0 48"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) * (9 + 15) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0 48"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 48 - 0 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 - 0 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) * (9 + 15) = 24",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1."
                }
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 - 9 = 39 (left: 9 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "0 48"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (8 + (9 + 15)) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1."
                }
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with just the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1."
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 - 0 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> Input: 5 7 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) * (9 + 15) = 24",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 + 9 = 17 (left: 17 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 11.97"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 9 11.97) -> 11.97 - 9 = 2.97 (left: 2.97)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "0 48"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: ((9 + 6) + (9 + 15)) = 24",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 48 / 0 = undefined (cannot divide by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (9 + 6) + (9 + 15) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 + 15 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24) -> Answer: (8 + (9 + 6)) + 9 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0 48"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> 0 * 48 = 0 (left: 0 48) -> 0 + 48 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "3 8"
                }
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (6 * 2) = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 5 = 8 (left: 2 7 8)\n2 * 7 = 14 (left: 14 8)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24\nAnswer: (2 * 7) - (3 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 3 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 6 7 8 9\nSteps:\n6 * 7 = 42 (left: 8 9 42)\n42 - 8 = 34 (left: 34 9)\n34 - 9 = 25 (left: 25)\nAnswer: ((6 * 7) - 8) - 9 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\nAnswer: (2 * 3) * (5 + 5) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (2 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 * 2 = 8 (left: 8 7)\n8 * 7 = 56 (left: 56)\nAnswer: (2 * 4) * (3 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 * 5 = 25 (left: 3 25)\n25 - 3 = 22 (left: 22)\nAnswer: (7 - 2) * (5 * 5) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n20 / 5 = 4 (left: 3 4)\n4 + 3 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 10 = 31 (left: 31)\n31 - 10 = 21 (left: 21)\n21 + ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + 6 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6  -> 2 + 6 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 7 7 3\nSteps:\n7 + 7 = 14 (left: 14 7 3)\n14 - 7 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: ((7 + 7) - 7) * (7 * 3) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 6 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 6) / 2 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n15 - 6 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 6) + 2 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 3 12\nSteps:\n3 * 3 = 9 (left: 2 9 12)\n9 + 12 = 21 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 3 + 12) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (3 * 13) = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 + 1 = 4 (left: 4 12)\n12 * 4 = 48 (left: 48)\nAnswer: (3 + 1) * (5 + 7) = 48",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 12\nSteps:\n3 * 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 2) + (6 + 12) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) - (6 - 2) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 3 = 4 (left: 4 5 2)\n5 - 2 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((7 - 3) * (5 - 2)) * 2 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 3 5 7 8\nSteps:\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 24)\nAnswer: (5 * 7) - (3 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 13 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n4 + 6 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((2 * 3) + (4 + 6)) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (2 * 4) * (3 + 6) = 72",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18 6 "
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 3 = 4 (left: 4 5 2)\n4 + 2 = 6 (left: 6 5)\n5 + 6 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((7 - 3) + 2) * ((5 +",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 2 3 4\nSteps:\n7 - 3 = 4 (left: 2 4 4)\n4 + 4 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 4 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 7 = 30 (left: 30)\n30 - ",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 6\nSteps:\n7 - 3 = 4 (left: 4 5 6)\n4 + 6 = 10 (left: 5 10)\n5 * 10 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * (5 *",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n3 + 5 = 8 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\nAnswer: (2 * 4) * (3 + 5) = 64",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 4 6 7\nSteps:\n6 * 4 = 24 (left: 2 7 24)\n7 - 2 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (6 * 4) * (7 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n3 + 5 = 8 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\nAnswer: (4 * 2) * (3 + 5) = 64",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 12 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15 - 12 = 3 (left: 3)\n3 * 5 = 15 (left: 15)\n15 + ",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 5\nSteps:\n5 * 5 = 25 (left: 2 3 25)\n3 + 25 = 28 (left: 2 28)\n28 - 2 = 26 (left: 26)\nAnswer: (5 * 5) + (3 + 2) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 7\nSteps:\n2 * 3 = 6 (left: 6 7 6)\n6 + 6 = 12 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 3) + (6 + 7) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n2 + 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (2 + 3) * (4 * 6) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8 6)\n6 + 6 = 12 (left: 8 12)\n8 * 12 = 24 (left: 24)\nAnswer: (2 * 3) + (8 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 2 6\nSteps:\n7 - 3 = 4 (left: 4 2 6)\n4 * 2 = 8 (left: 8 6)\n8 * 6 = 48 (left: 48)\nAnswer: (7 - 3) * (2 * 6) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + (3 + 5) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + 18 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((3 + 7) * 2) * 5 =",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 6 = 11 (left: 2 3 11)\n3 - 2 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)\nAnswer: (2 * 5) + (6 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 11 = 37 (left: 9 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left: 11 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 - 6 = -2 (left:"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 - 6 = -2 (left: -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 2 + 48 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 (left: 5 48) -> 5 + 48 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 * 11 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 11 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 + 11 = 20 (left: 20 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 2 "
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 2 + 48 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 2 * 48 = 96 (left: 96)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 9 11) -> Input: 1 5 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 11 = 37 (left: 9 37)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 R 3 (left: 11 5 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 - 2 = 46 (left: 46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "11 5 3"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 R 3 (left: 11 5 3) -> 11 + 3 = 14 (left: 5 14)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 (left: 5 48)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 * 9 = 99 (left: 99 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 - 6 = -2 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "9 + 11 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 * 11 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 / 9 = 1.22222 (left: 1.22222 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 9 = 39 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 48 99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 2 + 48 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 / 9 = 1.222... (left: 1.222... 48)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 * 11 = 99 (left: 99) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "9 * 11 = 99 (left: 6 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 2 + 48 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 11"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 48"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 3 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (11 - 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67 8)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 + 1 = 4 (left: 4 8)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 3) * 1 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 24"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (11 - 3) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 3 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 3 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 24"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n7 + 8 = 15 (left: 15 3)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) + 7) * 2 = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 4 7 9\nSteps:\n3 * 7 = 21 (left: 4 9 21)\n4 + 9 = 13 (left: 13 21)\n13 + 21 = 34 (left: 34)\n34 - 10 = 24 (left: 24)\nAnswer: ((3 * 7) + (4 + 9)) - 10 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n8 * 21 = 168 (left: 168)\n168 / 7 = 24 (left: 24)\nAnswer: ((3 * 7) + 3) * 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 9 = 27 (left: 3 8 27)\n27 - 8 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\nAnswer: (3 * 9) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 40 / (11 + 13) = 24 -> Great job! You have successfully obtained 24 using the given numbers and arithmetic operations.",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 40 / (11 + 13) = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 + 3 = 10 (left: 10 14)\n10 * 14 = 140 (left: 140)\n140 / 6 = 24 (left: 24)\nAnswer: ((6 + 8) + (7 + 3)) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "40 11 13"
                }
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24 40)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 10 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 8) - (9 - 3) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 40 / (11 + 13) = 24 -> Correct! Those are all valid ways to obtain 24 using the given numbers and arithmetic operations.",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 4 5 7\nSteps:\n4 + 5 = 9 (left: 3 7 9)\n3 * 9 = 27 (left: 7 27)\n27 - 7 = 20 (left: 20)\nAnswer: (3 * (4 + 5)) - 7 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 40 / (11 + 13) = 24 -> .",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818 (left: 14 1.1818)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) + (11 + 13) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 3) - 12 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) + (11 + 13) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n4 + 21 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (3 * 7) + (4 + 1) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 40 / (11 + 13) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 10 + 4 = 24\nAnswer: ((3 + 7) * (4 - 3)) + 10 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 3 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 48 9)\n48 / 9 = 24 (left: 24)\nAnswer: (3 + 3) * (8 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "40 11 13"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (9 - 8) * (6 * 3) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 8 = 13 (left: 3 7 13)\n7 + 13 = 20 (left: 3 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((3 + (5 + 8)) + 7) + 1) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (6 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 14"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 5 6 8\nSteps:\n5 * 8 = 40 (left: 3 6 40)\n6 - 3 = 3 (left: 3 40)\n3 * 40 = 120 (left: 120)\n120 / 5 = 24 (left: 24)\nAnswer: ((3 * 5) * 8) / 6 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n4 + 8 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((7 - 3) + 8) * (5 * 12) / 2.5 = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 3) - 12 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 6 8\nSteps:\n6 / 3 = 2 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((6 / 3) + 3) * 8 - 16 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 40"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24 40) -> Input: 4 16 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 40 / (11 + 13) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 4 6\nSteps:\n3 + 6 = 9 (left: 3 4 9)\n9 * 4 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 + 12 = 24\nAnswer: ((3 + 6) * 4) - 3 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 5 6 4\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((5 * 4) + (6 - 3)) + 1 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.18 (left: 1.18 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 66 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 5 = 15 (left: 4 6 15)\n15 - 6 = 9 (left: 4 9)\n9 * 4 = 36 (left: 36)\nAnswer: (3 * 5) - (6 - 4) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 6 7 5\nSteps:\n6 + 7 = 13 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 7) - 5 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n3 + 5 = 8 (left: 8 21)\n8 * 21 = 168 (left: 168)\nAnswer: (3 * 7) + (3 + 5) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: 3 * 8 = (7 - 5) * 24 = 48",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 11 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "40 11 13"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) + (11 + 13) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n6 - 3 = 3 (left: 3 15)\n3 * 3 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\n90 / 15 = 6 (left: 6",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 8) + (9 - 3) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: 40 / (11 + 13) = 24 -> There are multiple ways to obtain 24 using the numbers 4, 10, 11, and 13.",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\nAnswer: (3 + 3) * 4 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> Input: 3 5 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (left: 1.83 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 3 5 9\nSteps:\n3 * 5 = 15 (left: 3 9 15)\n9 - 3 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\n90 / 3 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 * 5) * (15 / 3)) -",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 6 8 9\nSteps:\n8 - 6 = 2 (left: 3 2 9)\n3 * 2 = 6 (left: 6 9)\n6 * 9 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 2) * 9) / 2)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n12 + 18 = 30 (left: 30)\nAnswer: (3 * 6) + (5 + 7) = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 * 10) - (13 - 11) = 24 -> Input: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n3 * 5 = 15 (left: 15 15)\n15 - 15 = 0 (left: 0)\n0 + 24 = 24\nAnswer: ((3 * 5) + (7 + 8)) + 0 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 2) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 - 6 = -5 (left: -5) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 + 1 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "1 6"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 2) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there are no numbers given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 2) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 7"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 7"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 / 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps since there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 3 * 5 = 15 (left: 15 7",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 2) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "0 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 = undefined (left: 0 6)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "0"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 10 * 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 / 3 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.7",
                    "Pruned state": "0 6"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> Input: 3 9 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "0 6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 6"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> Input: 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 / 0 = undefined (left: 0 6)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 / 2) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "0 6"
                }
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "7 - 10 = -3 (left: -3 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 + 3 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 + 100 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-3 10 12"
                }
            },
            "Step 4": {
                "Step": "7 - 10 = -3 (left: -3 10 12) -> 12 * 10 = 120 (left: -3 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "22"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "22 + 2 = 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 12"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 * 100 = 1200 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 * 100 = 1200 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-3 10 12"
                }
            },
            "Step 5": {
                "Step": "7 - 10 = -3 (left: -3 10 12) -> 12 - 10 = 2 (left: -3 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "12 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) ",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.43 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 1.43 * 10 = 14.3 (left: 14.3 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-3 10 12"
                }
            },
            "Step 4": {
                "Step": "7 - 10 = -3 (left: -3 10 12) -> -3 * 10 = -30 (left: -30 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 * 100 = 1200 (left: 100 1200)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 12"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 10 12 70)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8.57142857143 12"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 / 12 = 0.714285714286 (left: 0.714285714286 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> 22 / 8 = 2.75 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with just the number 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 1": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "12 - 7 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 100 / 12 = 8.33 (left: 12 8.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> 22 - 8 = 14 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps for the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 7 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 1": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 12"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 22 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 * 100 = 1200 (left: 100 1200)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 + 10 = 20 (left: 12 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "70 10 12"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 + 10 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "70 10 12"
                }
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24 -> 2 / 22 = 0.0909090909 (left: 0.0909090909)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 * 100 = 1200 (left: 1200)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 / 100 = 0.12 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 / 1 = 12 (left:"
                }
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 10 + 12 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "12 + 12 = 24"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 10 12 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 + 100 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 100"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 * 100 = 1200 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 / 1 = 12 (left:"
                }
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12 12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 12 / 1 = 12 (left: -> 12 * 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 + 10 = 17 (left: 17 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 * 35 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 - 2 = 9 (left:"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 - 10 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5 10 5"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.5 "
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5  -> There is only one possible next step for 0.5:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 2 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 12 - 5 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 * 35 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 2": {
                "Step": "7 * 11 = 77 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> Possible",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5 10 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> Input: 3 6 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 - 2 = 9 (left:"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 10 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "5 50"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 5 50) -> 50 / 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "0.5 "
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> Possible",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "5 10 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 \u2248 0.9091 (left: 0.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 - 10 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 10 5"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "5 50"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 5 50) -> 5 * 50 = 250 (left: 250)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "5 50"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 + 2 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 + 2 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 - 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 9 + 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> Input: 3 9 6 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "5 50"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 5 50) -> 5 * 50 = 250 (left: 250)",
                "Pruning": {
                    "Idx": "9.7",
                    "Pruned state": "5 50"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 10 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 / 2 = 5.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 3",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 10 5"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "5 50"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 5 50) -> 50 / 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.7",
                    "Pruned state": "0.5 "
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 2 35 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 * 2 = 22 (left: 12 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 - 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "0.5 "
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5  -> There is not enough information to provide possible next steps. Please provide additional numbers or operations.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 35 - 2 = 33 (left: 2 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 2 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 - 2 = 9 (left:"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 2 / 11 = 0.1818 (left: 0.1818)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "11 - 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 3 + 1 = 4 (left: 4 7 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 5 4"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 2 5 4) -> Input: 3 9 2 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 5 50)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 5)",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 + 6 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "9 30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 30"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30) -> 9 * 30 = 270 (left: 270)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 9 = 54 (left: 16 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 9 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 9 + 10 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 3"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 * 3 = 72 (left: 3 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24 3"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 * 3 = 72 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24 3"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2 5"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 3"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3 27"
                }
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24 3"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24 3"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24 3"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 * 3 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "3 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 7": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 5 - 7 = -2 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 / 4 = 1.5 (left: 1.5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 24"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 30"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30) -> 9 - 30 = -21 (left: -21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "9 30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> Input: 3 6 9",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 - 5 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 30"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30) -> 30 - 9 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 3 - 10 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 3"
                }
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 * 3 = 72 (left: 3 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 30"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30) -> 9 * 30 = 270 (left: 270)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 19"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 9 + 10 = 19 (left: 4 19) -> 4 - 19 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 4 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24 3"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "5 10"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 19"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 9 + 10 = 19 (left: 4 19) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 13"
                }
            },
            "Step 7": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 + 9 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 27"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.7",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 13"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 13 - 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 3"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 3"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 3"
                }
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 / 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "9 27"
                }
            },
            "Step 8": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 24 + 3 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 5 * 10 = 50 (left: 50 15)",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1.5 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.5 10 12"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 10 12) -> 1.5 * 10 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 15 - 12 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15 135"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 15 - 135 = -120 (left: -120)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "15 135"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15 135"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 15 + 120 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 * 15 = 1800 (left: 15 1800)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.5 10 12"
                }
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 10 12) -> 10 - 1.5 = 8.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "15 135"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15 135"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 15 / 135 = 0.1111111111111111 (left: 0.1111111111111111)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8.5 12"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 10 12) -> 10 - 1.5 = 8.5 (left: 8.5 12) -> 12 - 8.5 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 - 15 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15 135"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 15 / 135 = 0.1111 (left: 0.1111)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "120 15"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "15 135"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 135 - 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "15 135"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 9 12 60)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 + 6 = 18 (left: 18 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "0.67 9 10 12"
                }
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 - 15 = 105 (left: 15 105)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6.03 10 12"
                }
            },
            "Step 3": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 0.67 * 9 = 6.03 (left: 6.03 10 12) -> 12 - 6.03 = 5.97 (left: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 12 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 / 6 = 15 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 12 54"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 54 - 12 = 42 (left: 10 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 / 15 = 8 (left: 15 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 9 - 2.67 \u2248 6.33 (left: 6.33)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 9 / 2.67 \u2248 3.36 (left: 3.36)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.5 10 12"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 10 12) -> 10 * 1.5 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 12 60"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 9 12 60) -> 60 / 12 = 5 (left: 9 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 * 15 = 1800 (left: 1800)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15 135"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 15 - 135 = -120 (left: -120)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "15 135"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10 12 54"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 54 - 12 = 42 (left: 10 42)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15 135"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 135 - 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "15 135"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "15 105"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 - 15 = 105 (left: 15 105) -> 15 + 105 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> Input: -5 10",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.5 10 12"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 10 12) -> 10 - 1.5 = 8.5 (left: 8.5 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 15 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 * 15 = 1800 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "10 12 54"
                }
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 12 / 10 = 1.2 (left: 1.2 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 2.67 - 9 = -6.33 (left: -6.33)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "15 135"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "0.67 9 10 12"
                }
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 0.67 * 9 = 6.03 (left: 6.03 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 12 54"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 54 / 12 = 4.5 (left: 10 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "90 / 6 = 15 (left:"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 / 6 = 15 (left: -> 6 / 90 = 0.06666666666666667 (left: 0.06666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "120 15"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "15 135"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 15 + 135 = 150 (left: 150)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.37 (left: 3.37)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 - 12 = 7 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 / 6 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 12 60"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 9 12 60) -> 12 + 9 = 21 (left: 21 60)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.67 9 2"
                }
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 10 = 2 (left: 0.67 9 2) -> 2 + 0.67 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "15 135"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 15 / 135 = 0.1111111111111111 (left: 0.1111111111111111)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "15 135"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 120 + 15 = 135 (left: 15 135) -> 15 / 135 = 0.1111111111111111 (left: 0.1111111111111111)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 - 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 6 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 - 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "16"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 / 3) * 9) * 12 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 / 3) * 9) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 3 12"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 3) * (9 / 3) * 12 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "16"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 3) * (9 - 9) = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 6 = 2 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "6 3 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 3) * (9 + 9) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 12 54"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 / 9 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 6"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "6 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 3) * (9 + 9) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 - 9 = 3 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 3 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 3) * (9 / 3) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 3 12"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / 3) * (9 / 3) * 12 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (9 / 3)) * 12 = 24",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 1"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 12 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)  -> Answer: ((3 * 2) + 6) + 12 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1) -> 24 * 1 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)  -> Answer: ((3 * 2) + 6) + 12 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "12 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 12 - 3 = 9 (left: 9 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 1"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1) -> 24 * 1 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)  -> Answer: ((3 * 2) + 6) + 12 = 24"
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 - 3 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 4 - 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "20"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 - 3 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 2 + 4 = 6 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 3": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 2 + 4 = 6 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 10 + 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 7 + 5 = 12 (left: 5 12)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 4 * 5 = 20 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 * 3 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with the input: 1.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 * 2 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 1 = 2.25",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 * 4 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> Input: 5 3 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 + 4 = 14 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "14 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 10 - 14 = -4 (left: -4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> Input: 1 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 10 * 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 4 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 10 - 14 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 10"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "10 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "14 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "14 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 20 / 10 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (3 * (9 - 3)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 4 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3) * (4 - 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (9 - (3 * 3)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 3 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 3 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (division by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 / 6 = 0.6667 (left: 0.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3) * (4 - 3) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 1 * 3 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3) * (4 + 6) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 3 9 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 / 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "0.8"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps with 0.8 as the input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) ",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 + 2 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 * 2 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "20"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 4 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 - 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 * 2 = 2.5 (left: 2.5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 / 2 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "20"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 - 9 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> There are no more possible next steps with the input 10.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 + 7 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 / 10 = 1 (left: 1) ",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 - 2 = 0 (left: 0 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 + 2 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 + 2 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 + 2 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no more numbers to operate on. The final result is 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, since there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 * 4 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 7 * 3 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps with a single number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 4 = 40 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 4 2.25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps to manipulate it further.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is already a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any other numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 * 4 = 144 (left",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "36"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with a single number input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 4 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 4 11 90)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - it is not possible to perform any operations on the single number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate on. The final result is 36."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 11 - 9 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 11 / 9 = 1.222 (left: 1.222 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 4": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 5 - 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 / 7 = 2.71 (left: 2.71 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> None, as there is only one number left. -> There is only one number left, so there are no possible next steps. The final number is 8.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 9 * 11 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.2857142857142858 1"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858 1) -> 1.2857142857142858 * 1 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> None - the input is a single number and there are no operations that can be performed on it with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "23"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> 23 / 2 = 11.5 (left: 11.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 11 / 9 = 1.22222 (left: 1.22222 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 6": {
                "Step": "10 + 7 = 17 (left: 9 11  -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "12 11"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "No possible next steps, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> No possible next steps, as there is only one number left. -> No possible next steps, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 7 19 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "23"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> 23 + 2 = 25",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 7 = 17 (left: 9 11 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "12.857142857142857 11"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> No possible next steps, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 + 11 = 18 (left: 18 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 / 7 = 2.71 (left: 2.71 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "23"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> 23 / 2 = 11.5 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 11 = 52 (left: 10 52)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 11 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "None - the input is a single number and there are no operations that can be performed on it with the given numbers."
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> None - the input is a single number and there are no operations that can be performed on it with the given numbers. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 4": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 / 7 = 2.71 (left: 2.71 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 6": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 11 - 9 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 7 9 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858 1)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 19 11"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "12 11"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 7 19 11) -> 19 - 7 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "None, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16) -> None, as there is only one number left. -> There is only one number left, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9 7"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 1 9 7) -> 7 + 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 1) / (5 - 4) * 6 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.25 5"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25 5) -> 1.25 * 5 = 6.25 (left: 5 6.25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 + 5 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 1) * (4 * 5) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 + 5 = 12 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - 1) * 5 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.25 5"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25 5) -> 1.25 + 5 = 6.25 (left: 6.25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "1.25 5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.25 5"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25 5) -> 1.25 * 5 = 6.25 (left: 6.25)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 1) / (5 / 4) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 1 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9 7"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 1 9 7) -> 9 * 1 = 9 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 10 * 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - 1) * 5 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 6.25"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25 5) -> 1.25 * 5 = 6.25 (left: 5 6.25) -> 5 - 6.25 = -1.25 (left: -1.25)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - 1) * 5 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - 1) * 5 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 + 5 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 + 5 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - 1) * 5 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - 1) * 5 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 1.5"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 \u2248 0.67 (left: 0.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 + 5 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 10 + 5 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - 1) * 5 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "5 6.25"
                }
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 3 5) -> Possible next steps:"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 5 3)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 / 15 = 0.6 (left: 0.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 3 5) -> 3 * 5 = 15 (left: 15)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 4 3 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 4 * 3 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 / 15 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 / 3 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: ((9 - 4) * 3) + 9 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * (9 - 4)) + 9 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 3 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (3 * (9 - 4))) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 * 9 = 36 (left: 9 12 36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "15 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54)"
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 3 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> Input: -> Please provide a list of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 0 - 2 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 4"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> Input: -> There is no input provided. Please provide a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> Input: -> There is no input provided. Please provide a set of numbers for me to suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 - 0 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 0 + 2 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 2 2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 4"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 / 0 = undefined (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 4"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> 3 + 9 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 - 0 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 2 * 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 4"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 6 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 0 + 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 / 0 = undefined (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> Input: -> There is no input provided. Please provide a set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 7": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> Input: -> Please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> Input: 15 1",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 3 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> Input:",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 4"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> 4 - 2 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 18 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 0 + 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 4"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> 4 - 2 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18 3 8"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 3 8) -> 3 * 8 = 24 (left: 18 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 2 2"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 4"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2"
                }
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18 3 8"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 3 8) -> 3 * 8 = 24 (left: 18 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 * 6 = 48 (left: 0 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 4"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 4": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 4 7"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 + 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.5 8"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 8 / 2.2857 = 3.5 (left: 3.5 8) -> 8 - 3.5 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "8 + 18.2856 = 26.2856"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 8 * 14 = 112 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.5 8"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 8 / 2.2857 = 3.5 (left: 3.5 8) -> 5 + 9 = 14 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.5 8"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 8 / 2.2857 = 3.5 (left: 3.5 8) -> 8 - 3.5 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "8 + 18.2856 = 26.2856"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "56 16"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 / 16 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.2857 8"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 2.2857 * 8 = 18.2856 (left: 8 18.2856)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 6": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.5 8"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 8 / 2.2857 = 3.5 (left: 3.5 8) -> 8 - 3.5 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "3.5 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "5.71428571429 8"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 - 2.28571428571 = 5.71428571429 (left: 5.71428571429 8) -> 8 / 5.71428571429 = 1",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 112 / 112 = 1 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 4": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 18.2856"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 2.2857 * 8 = 18.2856 (left: 8 18.2856) -> 8 + 18.2856 = 26.2856",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 18.2856"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 2.2857 * 8 = 18.2856 (left: 8 18.2856) -> 8 / 18.2856 = 0.437 (left: 0.437 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 112 / 8 = 14 (left: 14 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 112 - 8 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 6": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.28571428571 8"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 - 2.28571428571 = 5.71428571429 (left: 5.71428571429)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 18.2856"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 2.2857 * 8 = 18.2856 (left: 8 18.2856) -> 8 * 18.2856 = 146.2848 (left: 18.2856 146.2848)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 112 - 8 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 7 8) -> 8 - 4 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 112 / 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 8 * 2 = 16 (left: 16 112)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "5.71428571429 8"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 - 2.28571428571 = 5.71428571429 (left: 5.71428571429 8) -> 5.71428571429 + 8 = 13.71428571429 (left: 8 13.71428571429)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "56 16"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 7 8) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 8 * 112 = 896 (left: 896)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.5 8"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 8 / 2.2857 = 3.5 (left: 3.5 8) -> 3.5 + 8 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "8 + 18.2856 = 26.2856"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "56 16"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 * 16 = 896 (left: 896)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "56 16"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 - 16 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 8 * 14 = 112 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There is no possible next step as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 8 + 104 = 112 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 112 - 8 = 104 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3.5 8"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 8 / 2.2857 = 3.5 (left: 3.5 8) -> 3.5 * 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "8 + 18.2856 = 26.2856"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 - 8 = -1 (left: 16 -1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 4 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.2857 8"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 8 / 2.2857 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.28571428571 8"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 - 2.28571428571 = 5.71428571429 (left: 5.71428571429 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 18.2856"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857 (left: 2.2857 8) -> 2.2857 * 8 = 18.2856 (left: 8 18.2856) -> 8 * 2.2856 = 18.2848 (left: 18.2848)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "8 + 18.2856 = 26.2856"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 7 8) -> 8 - 4 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 112"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 * 7 = 112 (left: 8 112) -> 8 * 14 = 112 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 6": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "56 16"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 - 16 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "5.71428571429 8"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 - 2.28571428571 = 5.71428571429 (left: 5.71428571429 8) -> 5.71428571429 * 8 = 45.71428571432 (left: 45.71428571432)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "5 + 9 = 14 (left"
                }
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 2) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 55 12"
                }
            },
            "Step 3": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 / 12 = 4.58 (left: 4.58 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 6 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 12 - 2 = 10 (left: 10)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5.33 12"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 5.33 + 12 = 17.33 (left: 17.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 * 6 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 6 = 2 (left:"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 6 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 + 6 = 12 (left: 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 * 6 = 36 (left: 36) -> There are no possible next steps since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6) -> 3 * 6 = 18 (left: 18)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 * 3 = 33 (left: 5 33 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 * 6 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 * 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / 3 * 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 * 6 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 + 12 = 23 (left: 15 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (11 - 5) * 12 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 6 = 2 (left:"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 4": {
                "Step": "11 + 12 = 23 (left: 3 5 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (11 - 5) * 12 = 24"
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 8) - (9 - 3) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 2 3 4 8\nSteps:\n3 * 4 = 12 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (3 * 4) * (8 - 2) = 72",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) / (6 - 3) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 5 = 15 (left: 3 7 15)\n15 - 7 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 5) - (15 - 7) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n80 / 3 = 24 (left: 24)\nAnswer: ((3 + 5) * (4 + 6)) / 3 = 24",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> In each of the given inputs, the numbers can be manipulated using basic arithmetic operations to obtain the desired result of 24.",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n6 - 3 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 9 8)\n9 * 8 = 72 (left: 72)\nAnswer: (3 * 3) * (6 + 8) = 72 / 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 3 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nAnswer: (3 * 3) * (5 - 7) = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> The following are possible solutions: \n1. (6 - 4) * (4 + 8) = 24\n2. (12 * 2) * (10 - 9) = 24\n3. 4 * (9 - (13 - 10)) = 24\n4. (1 + 8 / 4) * 8 = 24\n5. ((5 + 5) + 5) + 9 = 24\n",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 + 7) - 8) * 3 * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> All of the above solutions are correct.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n3 - 7 = -4 (left: -4 42)\n-4 + 42 = 38 (left: 38)\n38 / 2 = 19 (left: 19)\n",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> All the possible combinations using the given numbers have been listed above.",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 8 6)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 8 (left: 8)\nAnswer: ((3 + 3) * 8) / 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 8 8\nSteps:\n3 * 8 = 24 (left: 3 8 24)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * 8 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> All possible combinations of the numbers were used to reach the target number 24.",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9)\n9 - 7 = 2 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) + 9 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 4 5 8\nSteps:\n3 * 8 = 24 (left: 4 5 24)\n5 - 4 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (5 - 4) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n132 / 6 = 22 (left: 22)\n22 - 11 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + ",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 10) -> 1 + 6 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> No more steps needed as we have already obtained 24.",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 7\nSteps:\n4 + 7 = 11 (left: 3 3 11)\n3 * 3 = 9 (left: 9 11)\n9 + 11 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 * 3) + 7) + 4 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n6 + 9 = 15 (left: 15)\n15 - 6 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 6 = 21 (left: 21)\n21 - 9 = 12",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 * 3 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: ((8 - 3) + 5) * 9 = 72",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> The above expression is incorrect as it does not use all the numbers provided in the input. Let's correct it:\n\nInput: 4 4 6 10\nSteps:\n4 * 6 = 24 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 - 4 = 36 (left: 36)\nAnswer: (4 * 6) + (10 - 4) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n132 - 108 = 24 (left: 24)\nAnswer: ((3 * 4) + (5 + 6)) - 108 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> The last answer seems to be missing a number, let me correct that:\n\nAnswer: 4 * (6 + (10 - 4)) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 7\nSteps:\n4 * 7 = 28 (left: 3 3 28)\n3 + 3 = 6 (left: 6 28)\n28 / 6 = 4 (left: 4)\nAnswer: ((3 + 3) * 7) / 6 = 24",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> The steps you provided are correct! Here is the final answer: 4 * (10 - 4) = 24. Well done!",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 6 7 5\nSteps:\n6 * 5 = 30 (left: 3 7 30)\n30 - 7 = 23 (left: 3 23)\n23 - 3 = 20 (left: 20)\nAnswer: ((6 * 5) - 7) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 * 10 = 40 (left: 10 40)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 + 24 = 39 (left: 39)\nAnswer: (3 * 8) + (6 + 9) = 24",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 6\nSteps:\n3 + 4 = 7 (left: 3 6 7)\n7 * 3 = 21 (left: 6 21)\n21 + 6 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 + 4) * 3) + 6 - 3 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4)\n3 + 4 = 7 (left: 7)\n7 * 24 = 168 (left: 168)\nAnswer: (3 * 8) * (3 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 4 10 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((5 * 4) + 1) + 6 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * ((6 - 3) * 3) = 24",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 + 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (6 + 3) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 9 = 27 (left: 3 8 27)\n27 - 8 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\nAnswer: ((3 * 9) - 8) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13 = 11 (left: 9 11 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.5 9 13"
                }
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 13 - 1.5 = 11.5 (left: 1.5 11.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 - 6 = 7 (left: 3 7) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 + 10 = 14 (left: 4 14 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 * 10 = 40 (left: 4 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 * 10 = 40 (left: 4 40)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> ",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.5 9 13"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 13 - 1.5 = 11.5 (left: 9 11.5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 - 6 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "9.5",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 - 3 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 / 3 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 - 13"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13 -> 24 - 13 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2.5 4"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "5.5",
                    "Pruned state": "6 4"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 10 - 4 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 5  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 * 15 = 165 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "66 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 - 15 = 51 (left: 51)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 5 = 2.2 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "66 15"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 * 15 = 990 (left: 990)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "66 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "66 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 15 - 66 = -51 (left: -51)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 + 8 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "66 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 - 15 = 51 (left: 51)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "66 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 - 15 = 51 (left: 51)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-51"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 15 - 66 = -51 (left: -51) -> There are no possible next steps as the input provided is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3.67 11"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.996 (left: 2.996)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 2 - 5 = -3 (left: -3) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 3 * 5 = 15 (left: 15 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "5 3"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 5"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> There are no possible next steps with the number 30.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665 30)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "66 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> 30 * 2 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps as the input provided is a single number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 5 "
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 + 15 = 26 (left: 6 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 5"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 11 / 3 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "66 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 * 15 = 990 (left: 990)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> There are no possible next steps with the number 30.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 8 = 3 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 + 15 = 26 (left: 6 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 5"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "-51"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 15 - 66 = -51 (left: -51) -> -51 + 2 = -49 (left: 2)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "-51"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> 30 * 2 = 60",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "40 / 13 = 3 (left:"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 * 13 = 520 (left: 13 520)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.7",
                    "Resampled state": "26"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 13 = 27 (left: 1 27) -> 27 - 1 = 26 (left: 26) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "40 / 13 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 13 = 27 (left: 1 27) -> 1 * 27 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 13 = 27 (left: 1 27) -> 1 * 27 = 27 (left: 27) -> 27 / 2 = 13.5 (left: 13.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "40 / 13 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 13 - 40 = -27 (left: -27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "40 / 13 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 13 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 13 = 27 (left: 1 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number and not a mathematical expression.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "13 53"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 13 53) -> 13 + 53 = 66 (left: 66)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "40 / 13 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 * 13 = 520 (left: 520)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 10 * 3 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 13 = 27 (left: 1 27) -> 27 - 1 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.25"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> Input: 10 2 6",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 5"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 5 13"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 5 13) -> 7 * 5 = 35 (left: 35 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 * 3 = 30"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 10 * 3 = 30 -> 3 + 10 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 1 13 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 13 = 27 (left: 1 27) -> 1 * 27 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 1 * 27 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "1 27"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27) -> 12 / 6 = 2 (left: 2",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 4 = 2.25 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3 "
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 / 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 27"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 1 * 27 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 1 + 27 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "1 27"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27) -> 27 - 1 = 26 (left: 26)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 13 = 22 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 28"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 + 1 = 28 (left: 1 28) -> 1 + 28 = 29 (left: 29)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 * 3 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3 "
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 27"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 - 1 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 28"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 + 1 = 28 (left: 1 28) -> 28 - 1 = 27 (left: 27)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 + 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 3 "
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 + 1 = 28 (left: 1 28)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "1 27"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27) -> 1 + 27 = 28 (left: 27 28)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 4": {
                "Step": "3 / 3 = 1 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 27"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 1 * 27 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 28"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 + 1 = 28 (left: 1 28) -> 1 + 28 = 29 (left: 29)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 / 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 1 + 27 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "1 27"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 - 9 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 1 * 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 1 + 3 = 4 (left: 4 9) -> 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 - 1 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "1 27"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 27"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 1 * 27 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 * 1 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1 28"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 + 1 = 28 (left: 1 28) -> 28 / 1 = 28 (left: 28)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 5": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 6": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 27"
                }
            },
            "Step 7": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.7",
                    "Resampled state": "1 27"
                }
            },
            "Step 8": {
                "Step": "3 / 3 = 1 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 / 1 = 27 (left: 1 27) -> 1 + 27 = 28 (left: 28)",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 7 19 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 10 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 2 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 10 14"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 10 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.1111 (left: 1.1111 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 10 14"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 9 * 10 = 90 (left: 14 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 10 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.111... (left: 1.111... 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 9 3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 9 / 7 = 1.28571 (left: 1.28571 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "9 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 9 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 * 7 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)"
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 1188524,
        "output_tokens": 465693.2742063491,
        "total_cost": 1.2928019113095237
    }
}