{
    "0": {
        "puzzle": "1 1 4 6",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)"
            ],
            "Pruning": [],
            "Evaluation": [
                41.0,
                21.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "6 - 4 = 2 (left: 1 2 6)"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || Input: 5 10",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24 25)"
            ],
            "Pruning": []
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1": {
        "puzzle": "1 1 11 11",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "1 * 1 = 1 (left: 1 11 11)"
            ],
            "Pruning": [],
            "Evaluation": [
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "11 * 1 = 11 (left: 1 11 11)",
                "11 / 1 = 11 (left: 1 11 "
            ],
            "Pruning": [],
            "Evaluation": [
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 1 = 10 (left: 1 11 ",
                "1 + 1 = 2 (left: 2 11 11)"
            ],
            "Pruning": []
        },
        "Input": "1 1 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "2": {
        "puzzle": "1 1 3 8",
        "Step 0": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 8)",
                "8 - 3 = 5 (left: 1 1 5)"
            ],
            "Pruning": [],
            "Evaluation": [
                2.0,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "8 - 3 = 5 (left: 1 3 5)",
                "8 - 1 = 7 (left: 1 3 "
            ],
            "Pruning": [],
            "Evaluation": [
                1.002,
                0.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "8 - 1 = 7 (left: 1 3 7)",
                "8 - 3 = 5 (left: 1 1 "
            ],
            "Pruning": [],
            "Evaluation": [
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "8 - 1 = 7 (left: 1 3 7) || 1 * 7 = 7 (left: 7)",
                "3 + 1 = 4 (left: 1 4 8)"
            ],
            "Pruning": []
        },
        "Input": "1 1 3 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "3": {
        "puzzle": "1 1 1 8",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 8)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 * 2 = 2 (left: 2 8)"
            ],
            "Pruning": [],
            "Evaluation": [
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4)",
                "8 - 1 = 7 (left: 1 1 7)"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                2.001
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)"
            ],
            "Pruning": []
        },
        "Input": "1 1 1 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "4": {
        "puzzle": "6 6 6 6",
        "Step 0": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36 6)"
            ],
            "Pruning": [],
            "Evaluation": [
                41.0,
                1.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 / 12 = 0.5 ("
            ],
            "Pruning": [],
            "Evaluation": [
                21.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6)",
                "6 + 6 = 12 (left: 6 12 6) || Possible"
            ],
            "Pruning": [],
            "Evaluation": [
                40.001,
                20.001
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 * 6 = 108 (left: 108)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 - 6 = 66 (left: 66)"
            ],
            "Pruning": []
        },
        "Input": "6 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 39457,
        "output_tokens": 5948.333333333334,
        "total_cost": 0.028651000000000003
    }
}