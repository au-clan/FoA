{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 6 7\nSteps:\n6 - 3 = 3 (left: 3 6 7)\n3 * 7 = 21 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 6 = 21 (left: 21)\n21 - 21 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> The goal is to obtain 24 using the numbers 4, 5, 6, and 10. \nOne way to do it is: \n(10 - 5) * 6 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: ((3 + 7) * 3) * 5 = 120",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> I hope this helps! Let me know if you need further assistance.",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) + (5 + 6)) * 2 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 7 7\nSteps:\n3 * 7 = 21 (left: 3 7 21)\n7 - 3 = 4 (left: 4 21)\n4 * 21 = 84 (left: 84)\nAnswer: (3 * 7) * (7 - 3) = 84\nInput: 2 3 5 10\nSteps:\n10 - 5 = 5 (left:",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 * 3 = 24 (left: 24 8)\nAnswer: (3 + 5) * 3 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) * 4) * 3 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 30"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30) -> 10 * 30 = 300 (left: 300)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> The final equation is 6 * (10 - 5) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: (3 + 5) * (8 - 3) = 40",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> These are just a few examples of how to obtain 24 with the given numbers using basic arithmetic operations. There are many different combinations that can lead to the desired result.",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 6 4)\n4 * 6 = 24 (left: 24)\nAnswer: (7 - 3) * (8 - 4) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 5) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "300"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30) -> 10 * 30 = 300 (left: 300) -> 300 * 2 = 600 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 + 9 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (3 + 4) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((5 + 6) - 4) * 3 +",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 + 3 = 15 (left: 5 15)\n15 + 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 * 4) + 3) + 5 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 3 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) + 3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 10 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) - (5 + 3) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "4 2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n8 * 4 = 32 (left: 32)\nAnswer: (3 + 5 + 6) * 4 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 4 5 7\nSteps:\n4 + 7 = 11 (left: 3 5 11)\n5 - 3 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((4 + 7) - (5 - 3)) + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 5 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: (10 - 5) * 6 = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = -9 (left: -9)\n-9 * -1 = 24 (left: 24)\nAnswer: (3 * 8) + ((6 + 9) - 24) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 3 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 4) + 7) * 3 -",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 9) - 3) - 3 =",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (3 + 7) * 3 * (5 - 10) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6.33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 + 4 = 6.33 (left: 6.33) -> 6 + 3.33 = 9.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 * 1 = 14 (left: 14) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "15"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> 15 - 8 = 7 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 + 4 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 10 5"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Input: 10 5 -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 * 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 * 1 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "14"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> There are no possible next steps with just the number 14.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 4 - 2.33 = 1.67 (left: 1.67 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 + 4 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> Possible next steps: -> - 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "14"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 10 5"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Input: 10 5 -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 2 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 * 1 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "14"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 4"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 + 4 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> 2.33 + 4 = 6.33 (left: 6.33) -> 6.33 * 2 = 12.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 7 - 1 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "13"
                }
            },
            "Step 6": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 14"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 14"
                }
            },
            "Step 7": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "14"
                }
            },
            "Step 8": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 * 7 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 16"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 21"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 - 3 = 21 (left: 3 21) -> 21 + 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9 / 5 = 1."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 / 2 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * (8 + 11) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9 / 5 = 1."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 21"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 - 3 = 21 (left: 3 21) -> 21 / 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2.6666666666666665"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 - 8 = -5.333333333333333 (left: -5.333333333333333)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 - 3 = 21 (left: 3 21)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 5 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps for the input 2.6666666666666665.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * (8 + 11) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 - 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 8 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 21"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 - 3 = 21 (left: 3 21) -> 3 + 21 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "11"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 9 / 5 = 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (5 - 2) * 8 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Input: 5 10 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 = 24",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps for the input 2.6666666666666665."
                }
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 - 1.3333 \u2248 7.6667 (left: 7.6667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.9997"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> There are no possible next steps with the input 11.9997.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.9997 - 2 = 9.9997"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> 11.9997 - 2 = 9.9997 -> 9.9997 / 3 = 3.3332333333333335 (left: 3.3332333333333335)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7.6667"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10.3333"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12.3333"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 2 * 12.3333 = 24.6666 (left: 12.3333 24.6666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6.16665 12.3333"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 12.3333 - 6.16665 = 6.16665 (left: 6.16665 12.3333)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 12.3333 / 6.16665 = 2 (left: 2 12 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "11.9997 / 2 = 5.99985"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.9997"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> 11.9997 - 2 = 9.9997",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11.9997 * 2 = 23.9994"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> 11.9997 * 2 = 23.9994 -> 11.9997 - 2 = 9.9997",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11.9997 / 2 = 5.99985"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> 11.9997 * 2 = 23.9994 -> 11.9997 / 2 = 5.99985 -> 11.9997 + 2 = 13.9997",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12.3333"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6.16665 12.3333"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 12.3333 + 6.16665 = 18.49995 (left: 18.49995)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "7.6667"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 12.3333 / 6.16665 = 2 (left: 2 12 -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "7.6667 * 2 = 15.3334"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.9997"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> 11.9997 * 2 = 23.9994",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.9997 - 2 = 9.9997"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> 11.9997 - 2 = 9.9997 -> 11.9997 - 0.5 = 11.4997 (left: ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10.3333"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7.6667"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 - 1.3333 \u2248 7.6667 (left: 7.6667) -> 7.6667 * 2 = 15.3334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12.3333"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 2 * 12.3333 = 24.6666 (left: 24.6666)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6.16665 12.3333"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 12.3333 / 6.16665 = 2 (left: 2 12",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 12.3333 / 6.16665 = 2 (left: 2 12 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "There are no possible next steps with the number 7.6667."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> Input",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.9997"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> There are no possible next steps for the input 11.9997 as it is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 11.9997."
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> There are no possible next steps with the input 11.9997. -> There are no possible next steps with the input 11.9997.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7.6667"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 - 1.3333 \u2248 7.6667 (left: 7.6667) -> There are no possible next steps with the number 7.6667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12.3333"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 - 2 = 10.3333 (left: 10.3333)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 11.9997."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6.16665 12.3333"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 6.16665 / 12.3333 = 0.5 (left: 0.5 12.3333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 12.3333 / 6.16665 = 2 (left: 2 12 -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.9997 - 2 = 9.9997"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11.9997"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> 11.9997 / 2 = 5.99985",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11.9997 * 2 = 23.9994"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 * 9 = 11.9997 (left: 11.9997) -> 11.9997 * 2 = 23.9994 -> 11.9997 / 2 = 5.99985",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7.6667"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 - 1.3333 \u2248 7.6667 (left: 7.6667) -> 7.6667 - 8 = -0.3333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12.3333"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6.16665 12.3333"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 6.16665 * 12.3333 = 75.883194945 (left: 75.883194945)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11.9997 - 2 = 9.9997"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 12"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 1.3333 + 9 = 10.3333 (left: 10.3333) -> 10.3333 + 2 = 12.3333 (left: 2 12.3333) -> 12.3333 / 2 = 6.16665 (left: 6.16665 12.3333) -> 12.3333 / 6.16665 = 2 (left: 2 12 -> 12 - 2 = 10",
                "Pruning": null
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 - 0 - 2 - 4 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "54 56"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 + 9 = 17 (left: 17 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 1.125 / 13 = 0.0865384615385 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.125 / 13 = 0.0865384615385 (left:"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 1.125 / 13 = 0.0865384615385 (left: -> 1.125 + 13 = 14.125 (left: )",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "30"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None - since the input is a single number, there are no possible next steps to perform arithmetic operations on."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0 2 4"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 2 4) -> 5 * 7 = 35 (left: 3",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None - since the input is a single number, there are no possible next steps to perform arithmetic operations on."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2.5 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 * 15 = 37.5 (left: 37.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 + 9 = 17 (left: 17 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 13 - 1.125 = 11.875 (left: 11.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "30"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 + 9 = 17 (left: 17 13) -> 17 + 13 = 30 (left: 30) -> 30 - 8 = 22 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 6"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 + 4 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "0 2 4"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0 2 4"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 2 4) -> 2 * 2 = 4 (left: 0 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2.5 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 + 0 + 24 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 2 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 2 4) -> Input: 1 3 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 13 / 1.125 = 11.555555555555555 (left: 11.555555555555555)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "11.555555555555555"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 13 / 1.125 = 11.555555555555555 (left: 11.555555555555555) -> None - since the input is a single number, there are no possible next steps to perform arithmetic operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 + 4 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "1.125 / 13 = 0.0865384615385 (left:"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0 2 4"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 2 4) -> 2 * 4 = 8 (left: 0 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "54 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 302 - 4 = 298 (left: 298)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 9 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "0 2 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 2 4) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.125 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 13 / 1.125 = 11.555555555555555 (left: 11.555555555555555)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "30"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 + 9 = 17 (left: 17 13) -> 17 + 13 = 30 (left: 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 + 4 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "0 2 4"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0 2 4"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 2 4) -> 2 * 4 = 8 (left: 0 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "13 72"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72) -> 72 / 13 = 5.538 (left: 5.538)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3024"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "17 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 + 9 = 17 (left: 17 13) -> 17 + 13 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "11.555555555555555"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13) -> 13 / 1.125 = 11.555555555555555 (left: 11.555555555555555) -> 11.555555555555555 - 2 = 9.555555555555555",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 2 + 4 = 6 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "11.555555555555555 - 2 = 9.555555555555555"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0 2 4"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 3 * 0 = 0 (left: 0 2 4) -> 2 * 4 = 8 (left: 0 8)",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 156"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-145"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 (left: -72.5)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1.090909 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-145 / 2 = -72.5"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> -145 * 2 = -290",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-145 * 2 = -290"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> -145 * 2 = -290 -> -145 + 2 = -143 (left: -143 * 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for this input as it is already a completed calculation."
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> N/A",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1.18 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input is already a completed calculation."
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> Input is already a completed calculation. -> Input is already a completed calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Input is already a completed calculation."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> Input is already a completed calculation. -> Input is already a completed calculation. -> Calculation is already completed. No further steps needed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.18 12"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 * 12 = 14.16 (left: 14.16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-145"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-145 / 2 = -72.5"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> -145 - 2 = -147",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps for this input as it is already a completed calculation."
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> N/A",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for this input as it is already a completed calculation."
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for this input as it is already a completed calculation."
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> Input is already a completed calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input is already a completed calculation."
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> Input is already a completed calculation. -> The input is already a completed calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps for the input 10.17 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17) -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.18 12"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.17"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17) -> 10 + 17 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-145 / 2 = -72.5"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps for this input as it is already a completed calculation."
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> N/A",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "0.565217391"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for this input as it is already a completed calculation."
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> N/A",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 10.17 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 10.17 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17) -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Input is already a completed calculation."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> Input is already a completed calculation. -> Input is already a completed calculation. -> Input is already a completed calculation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "13 23"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 / 23 = 0.565217391 (left: 0.565217391)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-145"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 + 2 = -143 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "-145"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-145 / 2 = -72.5"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> -145 / 2 = -72.5 (no further steps)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-145 * 2 = -290"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> -145 * 2 = -290 -> -145 + 2 = -143",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for this input as it is already a completed calculation."
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> Input is already a completed calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 10.17 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17) -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Input is already a completed calculation."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> Input is already a completed calculation. -> Input is already a completed calculation. -> Input is already a completed calculation.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "11 156"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 + 156 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.17"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17) -> There are no possible next steps for the input 10.17 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input 10.17 as it is already a single number."
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17) -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "-145 * 2 = -290"
                }
            },
            "Step 5": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> -145 * 2 = -290 -> -145 / 2 = -72.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for this input as it is already a completed calculation."
                }
            },
            "Step 6": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 - 156 = -145 (left: -145) -> -145 / 2 = -72.5 -> There are no possible next steps for this input as it is already a completed calculation. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14.16"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 10.17 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17) -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the input 10.17 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 12 / 1.18 = 10.17 (left: 10.17) -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number. -> There are no possible next steps for the input 10.17 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> Possible next steps: -> There are no possible next steps as the input is already in the correct format.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 9 + 2 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 9 + 2 = 11 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "No more possible next steps as there are no more numbers to compute with. The final result is 18."
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 3 * 9 = 27 (left: 7 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> Possible next steps: -> It seems like there might have been an error in the input or calculation. Can you please provide the correct input so I can generate the possible next steps for you? Thank you!",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with the input of 18."
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 9 + 2 = 11 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "No more possible next steps as there are no more numbers to compute with. The final result is 18."
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 9 + 2 = 11 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "No more possible next steps as there are no more numbers to compute with. The final result is 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8) -> 8 + 8 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> Possible next steps: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 9 + 2 = 11 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "No more possible next steps as there are no more numbers to compute with. The final result is 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 10"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "7 27"
                }
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 3 * 9 = 27 (left: 7 27) -> 7 * 27 = 189 (left: 189)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 11"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 9 + 2 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "There are no possible next steps with just the number 18."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "No more possible next steps as there are no more numbers to compute with. The final result is 18."
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 6 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 "
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 3 * 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 * 7"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 3 * 7 -> 3 + 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 9 - 6 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "9 12"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 + 3 = 12 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 - 3 = 6 (left:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left:",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: -> 9 + 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "6 9 "
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 "
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 9 - 6 = 3 (left: 3) -> There is only one possible next step: 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 9 - 6 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 3 6 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 "
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3 9"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 9 - 6 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 9 - 6 = 3 (left: 3 9) -> 3 + 9 = 12 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 6 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 9"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 9"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 + 3 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: -> 3 - 9 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 "
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 9 - 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 * 7"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 3 * 7 -> 3 * 7 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 3 6 9) -> Input: 4 5 10 20",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 9 "
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 * 7"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 3 * 7 -> 3 * 7 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 9"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "9 12"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 + 3 = 12 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 12"
                }
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 9 135)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: ((3 * 5) / 1) + 9 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 135"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 9 135) -> 135 - 9 = 126 (left: 126)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (1 / 9) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 7"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the number 18."
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (7 - (12 - 4)) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps as the input does not contain enough numbers."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> Possible next steps: -> There are no possible next steps as the input does not contain enough numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (7 - (12 - 4)) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "None, as there are no other numbers to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 / 2.25 = 4 (left: 4 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "None, as there are no other numbers to perform operations with."
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with. -> None",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (7 - 3) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 9"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input of 18."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the number 18."
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 + 12 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (7 - (12 - 4)) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "3 18"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 5 7",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There are no possible next steps with the input of 18."
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (7 - 3) * (3 + 12) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "None, as there are no other numbers to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> Input: 3 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 5 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the number 18."
                }
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the input 11.25 in the given format."
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25 in the given format. -> There are no possible next steps for the input 11.25 in the given format.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "20.25 * 2 = 40.5"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25) -> 20.25 + 2 = 22.25 -> 20.25 * 2 = 40.5 -> 2 + 20.25 = 22.25 (left: 22.25 2 40.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5.625 11.25"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 5.625 / 11.25 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5.625 5.625"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625) -> 5.625 + 5.625 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There are no possible next steps for the input 11.25 in the given format."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5.625 5.625"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625) -> 5.625 * 5.625 = 31.640625 (left: 31.640625)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input: 3 6 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 3 * 6 = 18 (left: 18 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "20.25 + 2 = 22.25"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25) -> 20.25 + 2 = 22.25 -> 20.25 * 2 = 40.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input 11.25 in the given format."
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25 in the given format. -> There are no possible next steps for the input 11.25 in the given format. -> There are no possible next steps for the input 11.25 in the given format.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5.625 11.25"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 5.625 = 2 (left: 2 11.25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 11.25"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 5.625 = 2 (left: 2 11.25) -> 2 + 11.25 = 13.25 (left: 13.25)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5.625 5.625"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625) -> 5.625 / 5.625 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "There are no possible next steps for the input 11.25 in the given format."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11.25"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25 in the given format.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "18 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9 -> 3 * 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 11.25."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps for the input 11.25 in the given format."
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25 in the given format. -> There are no possible next steps for the input 11.25 in the given format. -> There are no possible next steps for the input 11.25 in the given format.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5.625 11.25"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 5.625 * 11.25 = 63.28125 (left: 63.28125)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There are no possible next steps for the input 11.25 in the given format."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5.625 5.625"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625) -> 5.625 + 5.625 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5.625 5.625"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5.625 5.625"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625) -> 5.625 + 5.625 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "There are no possible next steps for the input 11.25 in the given format."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20.25"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 * 9 = 20.25 (left: 20.25) -> 20.25 + 2 = 22.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps for the input 11.25."
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> There are no possible next steps for the input 11.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5.625 11.25"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> Input: 4 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5.625 5.625"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625) -> 5.625 * 5.625 = 31.640625 (left: 31.640625)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5.625 5.625"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625) -> 5.625 + 5.625 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "20.25 * 2 = 40.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11.25"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input 11.25."
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11.25 + 2 = 13.25 "
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5.625 11.25"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 11.25"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 5.625 = 2 (left: 2 11.25) -> 11.25 / 2 = 5.625 (left: 5.625)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "20.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "5.625 5.625"
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25. -> 11.25 + 2 = 13.25  -> 11.25 / 2 = 5.625 (left: 5.625 11.25) -> 11.25 / 2 = 5.625 (left: 5.625 5.625) -> 5.625 / 5.625 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5.625 5.625"
                }
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.25"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 * 8 = 10 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> No further steps can be taken with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 \u2248 1.846 (left: 1.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.846"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846) -> 1.846 - 2 = -0.154",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.846"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846) -> 1.846 / 1 = 1.846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.846"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846 (left: 1.846) -> 1.846 + 2 = 3.846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.66667 (left: 2.66667 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 / 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "153"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153) -> 1 * 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "8.67"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 + 6 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 144"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 144"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 16 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 9 135)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 9 = 81 (left: 81 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "81 144"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 9 = 81 (left: 81 144) -> 81 * 144 = 11664 (left: 11664)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 - 6 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 1 = 9 (left: 1)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 144"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 144"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 / 9 = 16 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 144"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 16 = 144 (left: 9 144) -> 144 / 9 = 16 (left: 9 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "81 144"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 9 = 81 (left: 81 144) -> 81 / 144 = 0.5625 (left: 0.5625)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "9 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 144"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 / 9 = 16 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 144"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 16 = 144 (left: 9 144) -> 144 / 9 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with just the number 8.67 since it is already a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 2.67"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 + 2.67 = 8.67 (left: 8.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8.67"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 + 2.67 = 8.67 (left: 8.67) -> There are no possible next steps for the input 8.67 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 + 6 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the number 8.67 since it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 144"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 16 = 144 (left: 9 144)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 144"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 16 = 144 (left: 9 144) -> 144 / 16 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "9 144"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8.67"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 + 2.67 = 8.67 (left: 8.67) -> There are no possible next steps with just the number 8.67 since it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 6 / 6 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 + 2 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 144"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 144"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 * 16 = 144 (left: 9 144) -> 9 - 144 = -135 (left: -135)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 8.67 as it is a single number."
                }
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 4 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 16"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 - 16 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 16"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "1 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 * 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 4 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 16"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "1 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 16"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 * 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "9"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 8"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 * 8 = 64 (left: 64) ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 16"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "1 16"
                }
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 16"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 16 - 11 = 5 (left: 5 16) -> 5 + 16 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.875"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> It seems like there may have been an error in the input. The input should be a list of numbers to perform arithmetic operations on. If you meant to input numbers like \"0.875\", please provide more context or additional numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps for the input 0.875."
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875. -> 0.875 * 2 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps with the input 0.875."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 16"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 16 - 11 = 5 (left: 5 16) -> 5 * 16 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 / 2 = 6"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 -> 6 * 2 = 12 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input 0.875."
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875. -> There are no possible next steps with the input 0.875. -> There are no possible next steps with the input 0.875.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 16"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 16 - 11 = 5 (left: 5 16)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 16"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 16 - 11 = 5 (left: 5 16) -> 5 + 16 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-2 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.875"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 0.875."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875. -> 0.875 + 2 = 2.875 (left: 2.875)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 / 2 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 6 12"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 -> 6 * 2 = 12 (left: 2 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 16"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 16 - 11 = 5 (left: 5 16) -> 16 / 5 = 3.2 (left: 3.2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 11 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.875"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 0.875."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875. -> There are no possible next steps with the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2 6 12"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12) -> 12 / 2 = 6 -> 6 * 2 = 12 (left: 2 6 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 16"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 16 - 11 = 5 (left: 5 16) -> 16 + 5 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "6"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.5"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 0.875."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875. -> There are no possible next steps for the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input 0.875."
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875. -> There are no possible next steps with the input 0.875. -> There are no possible next steps with the input 0.875.",
                "Pruning": null
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11) -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.33 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36.63"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36 + 63 = 99"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 / 63 = 0.57142857143 (left: 0.57142857143 99)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2268 99"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 * 63 = 2268 (left: 2268 99) -> 99 - 2268 = -2169 (left: -2169)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "41 + 2 = 43"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.33 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "41"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30) -> 11 + 30 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 + 63 = 99"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 99 / 63 = 1.5714 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2268 99"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 * 63 = 2268 (left: 2268 99) -> 2 * 2 + 68 = 4 + 68 = 72 (left: 72 99)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 * 2 = 22 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 10 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3.33 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36.63"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 + 63 = 99"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 / 63 = 0.5714 (left: 0.5714 99)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2268 99"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 * 63 = 2268 (left: 2268 99) -> 22 * 6 = 132 (left: 132 99)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.33 11"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 11 / 3.33 \u2248 3.303 (left: 3.303)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36.63"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36.63 * 2 = 73.26 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 + 63 = 99"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 - 63 = -27 (left: -27 63 99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2268 99"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 * 63 = 2268 (left: 2268 99) -> 2 * 2 * 6 + 8 = 28 (left: 28 99)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 10 11"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 30"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 3 * 10 = 30 (left: 11 30) -> 11 + 30 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36.63"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "36 + 63 = 99"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 * 63 = 2268 (left: 2268 99)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2268 99"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11) -> 3.33 * 11 = 36.63 (left: 36.63) -> 36 + 63 = 99 -> 36 * 63 = 2268 (left: 2268 99) -> 2268 - 99 = 2169 (left: 2169)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "2268 99"
                }
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 1"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 / 1 = 8 (left: 8) -> 8 * 8 = 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-1 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 - 8 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10 18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10 18) -> 10 * 18 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 1"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9) -> There are no possible next steps with the number 9 given the original input of 2 8 8 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-1 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 * 8 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10 18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10 18) -> 10 / 18 = 0.5555555555555556 (left: 0.5555555555555556)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "-1 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 + 5 = 8 (left: 8",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 1"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-1 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> Input: 5 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 18 * 2 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10 18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "10 18"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 1"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 / 1 = 8 (left: 8) -> - 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-1 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 + 8 = 7 (left: 7) ",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 5 8"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> Input: 3 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10 18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10 18) -> 10 * 18 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "-1 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 + 8 = 16 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 1"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 / 1 = 8 (left: 8) -> 8 / 8 = 1 (left: None)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "-1 8"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 - 8 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 4 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 8 + 2 = 10 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10 18"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 * 5 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 18) -> 18 - 8 = 10 (left: 10 18) -> 10 - 18 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 - 10 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 - 10 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 + 12 = 23 (left: 9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "9 11 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "9 11 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 / 10 = 1.3 (left: 1.3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 23 * 8 = 184 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "4 17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 * 8 = 12.8 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 + 10 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 13"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 / 1.6 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "23"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 23 / 8 = 2.875 (left: 2.875)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 + 12 = 23 (left: 9 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> 5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 5 13"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 / 1.6 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform."
                }
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 18"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.57"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "63"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-1 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 / -1 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 + (-1) = 5 (left: 5) -> There are no possible next steps with just one number provided. Additional numbers are needed to perform operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.2857 (left: 1.2857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.57"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> 2.57 - 8 = -5.43 (left: 8)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "7 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "63"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 - 3 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 - 6 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-1 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 + (-1) = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "-6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 / -1 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 3 -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "63"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "7 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-1 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 / (-1) = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 / -1 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 - 3 = "
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.57"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There are no possible next steps for the number 2.57 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.285",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "63"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-1 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> -1 / 6 = -0.16666666666666666 (left: -0.16666666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 / -1 = -6 (left: -6) -> There are no valid next steps with the input of -6.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 9"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 3 -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "63"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 + 2 = 65",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 + 7 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-1 6"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 / -1 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "-6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 / -1 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 * 0.03125 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 32"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "32 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 / 32 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1.8 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "32 0.03125"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "32 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 - 32 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 8 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 - 0.03125 = 31.96875 (left: 31.96875)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "14 45"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "45 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "32 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32 32) -> 32 + 32 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 * 0.03125 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "44 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 32"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 / 18 = 0.7222222222222222 (left: 0.7222222222222222)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 5 7 9"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 6 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input: 3 9 3"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3 -> 3 / 9 = 0.3333 (left: 3",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 12 3"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3 -> 3 + 9 = 12 (left: 3 12 3) -> 12 - 3 = 9 (left: 3 9 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 / 18 = 0.7222222222222222 (left: 0.7222222222222222)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 5 7 9"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 5 + 7 = 12 (left: 3 12 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 - 8 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 13 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 12 3"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3 -> 3 + 9 = 12 (left: 3 12 3) -> 3 * 12 = 36 (left: 3 3 36)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 5 7 9"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 5 + 7 = 12 (left: 3 12 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "31"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input: 3 9 3"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3 -> 3 + 9 = 12 (left: 3 12 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 12 3"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3 -> 3 + 9 = 12 (left: 3 12 3) -> 3 + 12 = 15 (left: 3 15 3)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 18 + 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 5 7 9"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 5 + 7 = 12 (left: 3 12 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 13 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 15"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "13 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "30"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 * 5 = 30 (left: 30) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 12 3"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3 -> 3 + 9 = 12 (left: 3 12 3) -> 12 - 3 = 9 (left:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "13 18"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 3 5 7 9"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 7 * 9 = 63 (left: 3 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 17"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 24 + 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 5 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 18"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 12 3"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 9 3 -> 3 + 9 = 12 (left: 3 12 3) -> 12 / 3 = 4 (left: 3 4 ",
                "Pruning": null
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 2 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 / 0.5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "10 40"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 40"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 / 40 = 0.25 (left: 0.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 40 - 10 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 10 + 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 * 0.5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "50"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 40"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.25"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 / 40 = 0.25 (left: 0.25) -> 0.25 / 0.25 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> None, as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 10 - 0.5 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "5 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 40"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 40 - 10 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "150"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 50 + 100 = 150 (left: 150) -> There are no possible next steps with the input 150.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 40"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 40 / 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 * 9 = 27"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 3 * 9 = 27 -> 3 + 9 = 12 (left: 12 = 27)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "5 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 40"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 50 + 100 = 150 (left: 150)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "30"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 40 - 10 = 30 (left: 30) -> There are no possible next steps with the number 30.",
                "Pruning": null
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 - 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 12 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 - 24 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24 24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 - 24 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 12 48"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 * 12 = 48 (left: 12 12 48) -> 48 / 12 = 4 (left: 12 4 48)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12 4 48"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 * 12 = 48 (left: 12 12 48) -> 48 / 12 = 4 (left: 12 4 48) -> 48 / 4 = 12 (left: 12 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> Input: 5 6 7 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 - 24 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 * 12 = 48 (left: 12 12 48)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 12 48"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 * 12 = 48 (left: 12 12 48) -> 12 * 4 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12 4 48"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 * 12 = 48 (left: 12 12 48) -> 48 / 12 = 4 (left: 12 4 48) -> 48 / 4 = 12 (left: 12 48)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> There are no possible next steps for the number 48 as it is a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 - 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 % 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "4 12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24 24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 - 24 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12 4 48"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 * 12 = 48 (left: 12 12 48) -> 48 / 12 = 4 (left: 12 4 48) -> 48 / 4 = 12 (left: 12 48)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> There are no possible next steps for the input 48 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 + 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 - 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24 24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 48 - 24 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12 4 48"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 * 12 = 48 (left: 12 12 48) -> 48 / 12 = 4 (left: 12 4 48) -> 12 / 4 = 3 (left: 3 48)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 * 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "48 / 24 = 2 (left"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "48 / 24 = 2 (left"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 - 48 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "12 4 48"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 * 12 = 48 (left: 12 12 48) -> 48 / 12 = 4 (left: 12 4 48) -> 12 / 4 = 3 (left: 3 48)",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (8 - (11 - 7)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) + 8 - 4 = 24"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "18 1.33"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 16.67"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67) -> 3 + 5 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps, 14 is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "No possible next steps for the number 14 as it is the final number."
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 3 * 6 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 16.67"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67) -> 16.67 / 1.33 = 12.53 (left: 12.53)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "9 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 + 6 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> There are no possible next steps as 14 is the final number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 16.67"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67) -> 16.67 - 1.33 = 15.34 (left: 15.34)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 9 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> - None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> None",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "4 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 9 + 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 16.67"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67) -> 1.33 + 16.67 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 9 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 54 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "No possible next steps, 14 is the final result."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> There are no possible next steps for the number 14 as it is the final number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 9 3"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33 16.67"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 - 1.33 = 16.67 (left: 1.33 16.67) -> 1.33 * 16.67 = 22.3055 (left: 22.3055)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "18 1.33"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 * 6 = 54 (left: 12 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 * 14 = 196 (left: 196)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "54 12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> 8 / 2 = 4 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No possible next steps for the number 14 as it is the final number."
                }
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps for the number 14 as it is the final number. -> No possible next steps for the number 14 as it is the final number.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) - (6 - 3) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n5 + 4 = 9 (left: 9 21)\n9 + 21 = 30 (left: 30)\nAnswer: (3 * 7) + (5 + 4) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * (8 - 5)) + 12 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n8 - 3 = 5 (left: 5 21)\n5 * 21 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\n21 * 1 = 21 (left: 21)\nAnswer: ((3 * 7) * (8 - 3)) /",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 2 3 5 9\nSteps:\n5 - 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((5 - 3) * 9) + 2 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * ((5 + 6) / 2) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 5 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\nAnswer: (3 * 5) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n7 + 8 = 15 (left: 3 3 15)\n3 * 3 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 24)\n6 * 24 = 24\nAnswer: ((3 * 3) + (7 + 8)) * 24 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\nAnswer: (3 * 3) * (8 - 5) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((5 * 4) - 6) + 3 + 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 * 3 = 21 (left: 21 8)\n21 + 8 = 29 (left: 29)\nAnswer: (3 + 4) * (7 + 8) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 + 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 13 54"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n3 + 9 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 5) * 4) - 8 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 + 10 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) + 8) + 9 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 2 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = -9 (left: -9)\nAnswer: (3 * 8) + (6 + 9) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 + 10 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 7) + 5) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "1.75 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "22.75"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input \"22.75\" as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "1.75 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (13 - 9) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "143"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 + 13 = 14.75 (left: 14.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "11.25"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 13 - 1.75 = 11.25 (left: 11.25) -> There are no possible next steps for the input 11.25.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 11 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "143"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 13 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1.75 13"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 11 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1.75 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 13 - 1.75 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "22.75"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the number 22.75 as it is a decimal and not an integer.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 13 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 13 28"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((13 - 9) + 7) + 11 = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "8 13"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 + 13 = 14.75 (left: 14.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "14.75"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 + 13 = 14.75 (left: 14.75) -> There are no possible next steps for the input 14.75 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "1.75 13"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (4 + 7) + (9 + 13) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "143"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "22.75"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the given input of 22.75.",
                "Pruning": null
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 3 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 9\nSteps:\n3 * 3 = 9 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nAnswer: (3 * 3) * (5 - 9) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "24 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 9\nSteps:\n3 + 3 = 6 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n11 - 9 = 2 (left: 2 11)\n2 * 11 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 + 3) + 5) * (",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 3 3\nSteps:\n3 * 3 = 9 (left: 3 3 9)\n9 + 3 = 12 (left: 3 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 3) + 3) * 2 = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "10 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n7 - 5 = 2 (left: 2 42)\n2 * 42 = 84 (left: 84)\n3 * 84 = 252 (left: 252)\n252",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 10 = 50 (left: 3 50)\n50 / 3 = 16.6667 (left: 16.6667)\n16.6667 + 3 = 19.6667 (left: 19.6667)\n19.6667 + 0.3333 = 20 (",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n3 * 6 = 18 (left: 18 24)\nAnswer: 3 * (8 + 6) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 12 30"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n8 + 21 = 29 (left: 29)\nAnswer: (3 * 7) - (5 + 3) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (3 * 4) * (6 - 3) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 30 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n3 * 7 = 21 (left: 21 14)\n21 - 14 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 14) * 3 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None - only one number given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 + 3 = 10 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((6 + 8) + 3) + 7 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) + 8 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 - 18 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 12"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 12 20"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "7 20"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20) -> 7 + 20 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "84"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 20"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20) -> 7 + 20 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are not enough numbers provided to perform any operations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 12"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 12 20"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 5 + 12 = 17 (left: 17 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "7 20"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20) -> 7 * 20 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 20"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20) -> 7 - 20 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 10"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 + 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.5"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Input: 5 5 7 20"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 12 20"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 20 / 5 = 4 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "7 20"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20) -> 20 - 7 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7 20"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 20"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20) -> 1 + 3 = 4 (left: 4 5)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 10 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 12"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 12 20"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "17 20"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 5 + 12 = 17 (left: 17 20) -> 20 / 17 \u2248 1.176 (left: 1.176)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 20"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20) -> 20 / 7 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are not enough numbers provided to perform any operations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> There are not enough numbers provided to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 10 7"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 12"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 12 20"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 + 5 = 17 (left: 17 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "17 20"
                }
            },
            "Step 7": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 5 + 12 = 17 (left: 17 20) -> 20 + 17 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are not enough numbers provided to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "7 20"
                }
            },
            "Step 8": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> Input: 5 5 7 20 -> 7 + 5 = 12 (left: 5 12 20) -> 12 - 5 = 7 (left: 7 20) -> 7 + 20 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 0 10"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.4285714285714286 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 10 - 1.4285714285714286 = 8.571428571428572 (left: 8.571428571428572 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.25 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 5"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 0 10"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 10 - 0 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1.25 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "7 0 10"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 3 + 5 = 8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 5"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 5"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 0 10"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 + 0 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 10 / 0 is undefined or not a real number (left: 10)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1.25 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "10 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 5"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "8.571428571428572 "
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 0 10"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 0 = undefined (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.4285714285714286 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 1.4285714285714286 + 10 = 11.428571428571429 (left: 10)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 10 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 10 10"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 2 = 12 (left: 2)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "Input: 4 8 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 5"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "Input: 4 8 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "7 0 10"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 10"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "7 0 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "11"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1 5"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 7 * 0 = 0 (left: 0 10) -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 4 = 12 (left: 12) -> 12 + 2 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 44"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 + 8 = 44 (left: 2 44) -> 2 * 44 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 20"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 + 8 = 26 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2 44"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 44"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 + 8 = 44 (left: 2 44) -> 2 * 44 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> There are no more possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input of 3."
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> 3 - 3 = 0 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 20"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 44"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 20"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 + 8 = 26 (left: 8 20) -> 20 * 8 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "-36"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 / 20 ="
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 + 8 = 26 (left: 8 20) -> 8 / 20 = -> 8 / 20 = 0.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36 + 2 = 38"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 + 8 = 44 (left: 2 44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 + 8 = 26 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 20"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 + 8 = 26 (left: 8 20) -> 8 / 20 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 + 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "36 + 2 = 38"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "36 + 2 = 38"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 20"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 - 20 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 - 3 = 0 "
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> 3 - 3 = 0  -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 1"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 20"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 + 8 = 26 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 44"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 + 8 = 44 (left: 2 44) -> 44 - 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36 + 2 = 38"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 20"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 20"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 + 2 = 20) -> 18 + 8 = 26 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "18 + 2 = 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 44"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 -> 36 + 8 = 44 (left: 2 44) -> 44 - 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 16 = 3 (left: 3) -> There are no possible next steps with the number 3.",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> There are no possible next steps for the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 - 9 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 99"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 + 99 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "108"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 + 99 = 108 (left: 108) -> 108 / 2 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Input: 3 3"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> Input: 3 3 -> 3 / 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps with the given numbers. -> 5 + 7 = 12 (left: 3 12 9)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "108"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108) -> 10 * 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> Input: 3 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 9"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "11"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> Input: 3 3 -> 3 / 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 / 2 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "108"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108) -> 1 * 0 * 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "56"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 9"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "108"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 + 99 = 108 (left: 108) -> 1 * 0 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Input: 3 3"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> Input: 3 3 -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps with the given numbers. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 56."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 + 2 = 56 (left: 56) -> 56 / 2 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 9"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "108"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 + 99 = 108 (left: 108) -> 108 - 8 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "108"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Input: 3 3"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> Input: 3 3 -> 3 / 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> Input: 3 3 -> 3 / 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "54 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 / 2 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 / 2 = 27 (left: 27) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 99"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 + 99 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "108"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 + 99 = 108 (left: 108) -> 108 - 10 = 98 (left: 98)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Input: 3 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 * 0 +"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 * 9 = 99 (left: 9 99) -> 9 + 99 = 108 (left: 108) -> 1 * 0 + -> 1 * 0 = 0 (left: 0 +)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> Input: 3 3 -> 3 / 3 = 1 (left: 1) -> There are no possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 16 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 * 12 = 24"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 -> 12 / 2 = 6 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 8) * (11 - 12) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "14"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((5 + 8) - 11) * 12 = 24"
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 10"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "100"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100) -> 100 + 2 = 102 (left: 2)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "100"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 8 = 160 (left: 8 160) -> 8 + 152 = 160 (left: 152)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "198"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16 160"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 8 = 160 (left: 8 160) -> 8 * 2 = 16 (left: 16 160) -> 16 + 160 = 176 (left: 176)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 100."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 15"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 5 15) -> 15 + 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 160"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 8 = 160 (left: 8 160) -> 8 * 2 = 16 (left: 16 160)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 3.125)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 10"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 + 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 15"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 5 15) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 8 = 160 (left: 8 160) -> 8 / 160 = 0.05 (left: 0.05)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "100"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 3.125)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "16 160"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 18"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 * 18 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 8 = 160 (left: 8 160)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "100"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100) -> There are no possible next steps for the input 100.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 8 = 160 (left: 8 160) -> 8 * 20 = 160 (left: 20)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 + 20 = 25 (left: 25) -> 25 * 2 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 160"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 5 - 12 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 2 = 40 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 2 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "100"
                }
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 * 10 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100) -> 100 / 2 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 160"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 8 = 160 (left: 8 160) -> 160 - 8 = 152 (left: 8)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "25"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "16 160"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)  -> 20 * 8 = 160 (left: 8 160) -> 8 * 2 = 16 (left: 16 160) -> 16 * 10 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 100."
                }
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 14"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25 - 14 = "
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 14 =  -> 25 - 14 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25 - 14 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "25 / 6 = 4.166666"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 / 6 = 4.166666 -> 25 / 6 = 4.166666 (left: 4.166666)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "14 / 4 = 3.5 ("
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 14 25"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 14 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.428571"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 / 14 = 0.428571 (left: 0.428571) -> There are no possible next steps for the number 0.428571.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 4 + 8 = 12 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "6 * 11 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "25 / 6 = 4.166666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 16"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "25 - 14 = 11"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 14"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 / 14 = 0.428571 (left: 0.428571)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25 - 14 = "
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 14 =  -> 25 - 14 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 14 64"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "25 - 14 = "
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 14 =  -> 25 - 14 = 11",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 14 25"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 / 6 = 4.166666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25 - 14 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "25 - 14 = "
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 14 =  -> 25 - 14 = 11",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 14"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 - 14 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.428571"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 / 14 = 0.428571 (left: 0.428571) -> 0.428571 / 2 = 0.2142855 (left: 0.2142855)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "6 14 25"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 14 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 / 4 = 3.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "4 6"
                }
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "25 - 14 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps for the input.",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 19 13"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "38 13"
                }
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are multiple possible next steps depending on the desired operation. Some examples include:"
                }
            },
            "Step 4": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 14 + 2 = 16 (left: 8 8 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 8 14"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 2 + 8 = 10 (left: 10 8 14) -> 10 - 8 = 2 (left: ",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12.25"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 16"
                }
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 14 + 2 = 16 (left: 8 8 16) -> 8 / 8 = 1 (left: 1 16) -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 9.75 11.75"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 2 * 9.75 = 19.5 (left: 11.75 19.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "7.75 11.75"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 9.75 - 2 = 7.75 (left: 7.75 11.75) -> 11.75 / 7.75 = 1.516129032 (left: 1.516129032)",
                "Pruning": {
                    "Idx": "1.7",
                    "Pruned state": "494 - "
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "21 13"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9.75"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are multiple possible next steps depending on the desired operation. Some examples include:"
                }
            },
            "Step 4": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 16"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 14 + 2 = 16 (left: 8 8 16) -> Input: 16 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 16"
                }
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 14 + 2 = 16 (left: 8 8 16) -> 8 / 8 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2 9.75 11.75"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 9.75 11.75"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 2 + 9.75 = 11.75 (left: 11.75)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "494 - "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "7.75 11.75"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 9.75 - 2 = 7.75 (left: 7.75 11.75) -> 7.75 * 11.75 = 91.0625 (left: 91.0625)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "494 - "
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "0.75 13"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "494"
                }
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 * 13 = 494 (left: 494) -> 4 * 9 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 98"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 - 0.75 = 12.25 (left: 12.25) -> 12.25 * 8 = 98 (left: 8 98) -> 8 * 98 = 784 (left: 784)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 9.75 11.75"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 16"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 14 + 2 = 16 (left: 8 8 16) -> 8 + 8 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 16"
                }
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 14 + 2 = 16 (left: 8 8 16) -> 8 / 8 = 1 (left: 1 16) -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "494 - "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 9.75 11.75"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 2 * 9.75 = 19.5 (left: 11.75 19.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "7.75 11.75"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 9.75 - 2 = 7.75 (left: 7.75 11.75) -> 11.75 / 7.75 = 1.516129032258065 (left: 1.516129032258065)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "494 - "
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "38 13"
                }
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 * 13 = 494 (left: 494)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "494"
                }
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 * 13 = 494 (left: 494) -> 494 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 9.75 11.75"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 9.75 / 2 = 4.875 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 8 16"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 14 + 2 = 16 (left: 8 8 16) -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 16"
                }
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 14 + 2 = 16 (left: 8 8 16) -> 8 / 8 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12.25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 9.75 11.75"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 9.75 - 2 = 7.75 (left: 7.75 11.75)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "7.75 11.75"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 9.75 - 2 = 7.75 (left: 7.75 11.75) -> 11.75 - 7.75 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "9.75 / 2 = 4.875 ("
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "0.75 13"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 - 0.75 = 12.25 (left: 12.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12.25"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 - 0.75 = 12.25 (left: 12.25) -> 12.25 * 8 = 98 (left: 8 98)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are multiple possible next steps depending on the desired operation. Some examples include:"
                }
            },
            "Step 4": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 2 + 8 = 10 (left: 10 8 14)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 8 14"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 2 + 8 = 10 (left: 10 8 14) -> 10 - 8 = 2 (left: 2 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 8 14"
                }
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> Possible next steps: -> There are multiple possible next steps depending on the desired operation. Some examples include: -> 2 + 8 = 10 (left: 10 8 14) -> 10 - 8 = 2 (left: 2 8 14) -> 8 * 2 = 16 (left: 16 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 9.75 11.75"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 9.75 / 2 = 4.875 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "7.75 11.75"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 0.75 * 13 = 9.75 (left: 9.75) -> 9.75 + 2 = 11.75 (left: 2 9.75 11.75) -> 9.75 - 2 = 7.75 (left: 7.75 11.75) -> 11.75 / 7.75 = 1.5161290322580645 (left: 1.5161290322580645)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 9.75 11.75"
                }
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.33"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "42 8"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768) -> 7 * 6 = 42 (left: 42 8) -> 42 - 8 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.5 "
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 2 - 1.5 = 0.5 (left: 0.5 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.5 2"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 2 - 1.5 = 0.5 (left: 0.5 2) -> 0.5 * 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.5 "
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> There is not enough information given to determine possible next steps. Please provide additional numbers or operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 9.5"
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 + 8 = 9.5 (left: 8 9.5) -> 8 + 9.5 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "52"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.5 "
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 - 8 = -6.5 (left: -6.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.5 2"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 2 - 1.5 = 0.5 (left: 0.5 2) -> 0.5 * 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "52"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.5 "
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 + 8 = 9.5 (left: 8 9.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 9.5"
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 + 8 = 9.5 (left: 8 9.5) -> 8 - 9.5 = -1.5 (left: -1.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.33"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "42 8"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768) -> 7 * 6 = 42 (left: 42 8) -> 42 * 8 = 336 (left: 336)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "52"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.5 "
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.5 2"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 2 - 1.5 = 0.5 (left: 0.5 2) -> 2 / 0.5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.5 "
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.5 "
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 8 / 1.5 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 9.5"
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 + 8 = 9.5 (left: 8 9.5) -> 8 - 9.5 = -1.5 (left: -1.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "768"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768) -> 7 * 6 = 42 (left: 42 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 12"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.5 "
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.5 2"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 2 - 1.5 = 0.5 (left: 0.5 2) -> 0.5 * 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "52"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.5 "
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 9.5"
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 + 8 = 9.5 (left: 8 9.5) -> 8 * 9.5 = 76 (left: 76)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "64 12"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "52"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 - 12 = 52 (left: 52) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 12 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "42 8"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768) -> 7 * 6 = 42 (left: 42 8) -> 42 - 8 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.5 "
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.5 2"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 2 - 1.5 = 0.5 (left: 0.5 2) -> 0.5 + 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.5 "
                }
            },
            "Step 7": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 9.5"
                }
            },
            "Step 8": {
                "Step": "2 * 6 = 12 (left: 8 12 12) -> 12 / 8 = 1.5 (left: 1.5  -> 1.5 + 8 = 9.5 (left: 8 9.5) -> 8 + 9.5 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an operation with multiple numbers."
                }
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.33 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 4 * 1.33 = 5.32 (left: 5.32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> No possible next steps. -> There are no more possible next steps with the numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5.32"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 4 * 1.33 = 5.32 (left: 5.32) -> There are no possible next steps with the input 5.32.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16) -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps as all combinations have been exhausted."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 + 4 = 16 (left: 16) -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> 48 / 16 = 3 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input is already in its final form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> No possible next steps. -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps to perform."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform. -> There are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the input 48."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 * 4 = 48 (left: 48) -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48. -> There are no possible next steps with the input 48.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.2 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 / 1.2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10.8"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps for the input 10.8 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 10.8."
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps with the input 10.8. -> Input: There are no possible next steps with the input 5 5 5 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.65 8"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> 8 - 2.65 = 5.35 (left: 5.35)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "8 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "Input: 5 7 3"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 7 / 5 = 1.4 (left: 1.4 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 5 7 3"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 7 - 5 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 7 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 3 + 4 = 7 (left: 6 7 8) -> 6 * 7 = 42 (left: 8 42)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.2 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 / 1.2 = 10 (left: 10) -> 10 * 2 = 20 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13.2 + 8 = 21.2"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.65 8"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 12"
                }
            },
            "Step 6": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 5 7 3"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> Input: 4 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 7 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 3 + 4 = 7 (left: 6 7 8) -> 6 + 7 = 13 (left: 8 13)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.2 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13.2"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 10.8."
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps with the input 10.8. -> 10 / 8 = 1.25 (left: 1.25 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.65 8"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "Input: 5 3"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 3 -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "Input: 5 7 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 5 7 3"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 5 + 7 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 7 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 3 + 4 = 7 (left: 6 7 8) -> 6 + 7 = 13 (left: 8 13)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.2 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 * 12 = 14.4 (left: 14.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.8"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> 10 + 8 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 10.8."
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps with the input 10.8. -> 10 / 8 \u2248 1.25 (left: 1.25 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.65 8"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "Input: 5 3 7"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 3 7 -> 3 + 7 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 5 7 3"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 5 + 7 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 7 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 3 + 4 = 7 (left: 6 7 8) -> 8 / 6 = 1.33 (left: 1.33 7)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.2 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10.8"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps with the input 10.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 10.8."
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps with the input 10.8. -> There are no possible next steps with the input 10.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.65 8"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> 8 - 2.65 = 5.35 (left: 5.35)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10.8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "10.8"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "14.4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 5 7 3"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "6 7 8"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 1.2 + 12 = 13.2 (left: 13.2) -> 13.2 + 8 = 21.2 -> 21.2 / 8 = 2.65 (left: 2.65 8 -> Input: 5 7 3 -> 3 + 4 = 7 (left: 6 7 8) -> 8 / 6 = 1.3333333333333333 (left: 1.333333333333333",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 10.8 as it is a single number."
                }
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "13 11"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) - (1 + 11) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "13 11"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7) + (11 + 1) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "13 11"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 * 11 = 143 (left: 143) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 7) - 1) + 11 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "13 11"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: (2 * 7 - 1) + 11 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "13 11"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24) -> Answer: ((2 * 7) - 1) + 11 = 24"
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 14"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.55555555556"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556) -> 1.55555555556 * 2 = 3.11111111112",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "126 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126) -> 1 + 2 + 6 = 9 (left: 126 9) -> 126 / 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 14"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.55555555556"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556) -> 1.55555555556 * 1 = 1.55555555556",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "126 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126) -> 1 + 2 + 6 = 9 (left: 126 9) -> 126 * 9 = 1134 (left: 1134)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.55555555556 * 1 = 1.55555555556"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 14"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "126"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126) -> 1 + 2 + 6 = 9 (left: 126 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "126 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126) -> 1 + 2 + 6 = 9 (left: 126 9) -> 126 + 9 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 * 1.33 = 11.97 (left: 11.97)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "126"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 14"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.55555555556 (left: 1.55555555556)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "126"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126) -> 126 - 1 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "126 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126) -> 1 + 2 + 6 = 9 (left: 126 9) -> 126 / 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1.33 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide more than one number to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 14"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 + 14 = 23 (left: 23) -> 23 * 8 = 184 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.55555555556"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "126 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126) -> 1 + 2 + 6 = 9 (left: 126 9) -> 126 + 9 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 20"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 / 3 = 3.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "11.97"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 9 * 1.33 = 11.97 (left: 11.97) -> There are no possible next steps for the input 11.97 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "156 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 - 16 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "25 16"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "25 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.5625"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 / 16 \u2248 1.5625 (left: 1.5625) -> There are no possible next steps for the input 1.5625 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 + 1 = 5"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 4 + 1 = 5 -> 4 * 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 40 50"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 50 - 10 = 40 (left: 10 40 50) -> 50 - 40 = 10 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 50 50"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 50 - 10 = 40 (left: 10 40 50) -> 40 + 10 = 50 (left: 10 50 50) -> 10 * 50 = 500 (left: 50 50)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 120 13"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "156 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 - 16 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9 (left: 9) -> 9 * 1 = 9 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "140"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "25 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "41"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 4 + 1 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps for the input 1.5625."
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 / 16 \u2248 1.5625 (left: 1.5625) -> There are no possible next steps for the input 1.5625. -> There are no possible next steps for the input 1.5625 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10 40 50"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 50 - 10 = 40 (left: 10 40 50) -> 40 + 10 = 50 (left: 10 50 50)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 50 50"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 50 - 10 = 40 (left: 10 40 50) -> 40 + 10 = 50 (left: 10 50 50) -> 50 / 10 = 5 (left: 5 50 50)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "156 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> Input: 10 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "25 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 * 16 = 400 (left: 400)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.5625"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 / 16 \u2248 1.5625 (left: 1.5625) -> There are no possible next steps for the input 1.5625.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "10 * 5 = 50"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 50 - 10 = 40 (left: 10 40 50)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 4 + 1 = 5 -> 4 * 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "There are no possible next steps for the input 1.5625."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 50 50"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 50 - 10 = 40 (left: 10 40 50) -> 40 + 10 = 50 (left: 10 50 50) -> 50 / 10 = 5 (left: 5 50 50)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "156 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "16 156"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "25 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 / 16 \u2248 1.5625 (left: 1.5625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 * 5 ="
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "10 * 5 = 50"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 10 + 5 = 15 (left: 15 = 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 4 + 1 = 5 -> 4 * 1 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "140"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 50 50"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 50 - 10 = 40 (left: 10 40 50) -> 40 + 10 = 50 (left: 10 50 50) -> 50 - 10 = 40 (left: 40 50)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 + 13 = 19 (left: 19 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "156 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Input: 10 5 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "25 16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 * 16 = 400 (left: 400)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1.5625"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 / 16 \u2248 1.5625 (left: 1.5625) -> 1.5625 * 2 = 3.125 (left: 3.125)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "41"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "41"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 41 * 2 = 82 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "400"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 4 + 1 = 5 -> 4 * 1 = 4 (left: 4 5) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "There are no possible next steps for the input 1.5625."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10 50 50"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 10 * 5 = -> 10 * 5 = 50 -> 50 - 10 = 40 (left: 10 40 50) -> 40 + 10 = 50 (left: 10 50 50) -> 50 - 10 = 40 (left: 40 50)",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 14"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 3 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 14"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 3 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (9 / 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "9 14"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 14) -> 14 - 9 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "7"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 5 + 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (9 / 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 9 14"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 9 14) -> 14 - 9 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 * 3 = 24 (left: 24 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (9 / 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 / 3 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: (9 - 1) * (9 / 3) = 24"
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + 4) * 11 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (1 + 4) * (4 * 11) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (11 - (1 + 4)) = 24"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input 21.36."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. -> There are no possible next steps for the input 21.36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> None",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5 8 14"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8 14) -> 14 / 5 = ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 5 + 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2.99"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99) -> There are no possible next steps for the input 2.99 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> Possible next steps: -> There are no more possible next steps with the given numbers. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "21 + 36 = 57"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5 8 14"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8 14) -> 5 * 8 = 40 (left: 40 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "21.36"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> 21 + 36 = 57",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no more possible next steps with the given numbers."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> Possible next steps: -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5 8 14"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8 14) -> 14 / 5 = 2.8 (left: 8 2.8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "21.36"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 6 "
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5 8 14"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8 14) -> 14 / 5 = ",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "21.36"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input 21.36."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. -> None, as 21.36 is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5 8 14"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8 14) -> 8 * 5 = 40 (left: 40 14)",
                "Pruning": null
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5) ",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 2 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 1 + 2 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 13 + 9 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps since there is no input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps: -> There are no possible next steps since there is no input provided. -> There are no possible next steps since there is no input provided. -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "No input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps: -> There are no possible next steps since there is no input provided. -> There are no possible next steps since there is no input provided. -> No input provided. -> Please provide a set of numbers for the next step calculation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 2 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 1 * 2 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps since there is no input provided."
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps: -> There are no possible next steps since there is no input provided. -> There are no possible next steps since there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-4"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4) -> There are no possible next steps when the input is -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "No input provided."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps: -> There are no possible next steps since there is no input provided. -> There are no possible next steps since there is no input provided. -> No input provided. -> Please provide a set of numbers to calculate next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.33"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps with the input 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps: -> There are no possible next steps since there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "Input: 12 5"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> Input: 12 5 -> 12 * 5 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps since there is no input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps: -> There are no possible next steps since there is no input provided. -> There are no possible next steps since there is no input provided. -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps when the input is -4."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4) -> There are no possible next steps when the input is -4. -> There are no possible next steps when the input is -4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-4"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input of -4."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 3"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10) -> Input: 12 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps since there is no input provided."
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps: -> There are no possible next steps since there is no input provided. -> There are no possible next steps since there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps since there is no input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> Input: 5 10 -> Possible next steps: -> There are no possible next steps since there is no input provided. -> There are no possible next steps since there is no input provided. -> No input provided. Please provide numbers to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps when the input is -4."
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4) -> There are no possible next steps when the input is -4. -> There are no possible next steps when the input is -4.",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> No possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "0 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 * 0 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 5 / 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just 5 as the input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 27"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 - 27 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 + 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> 5 + 8 = 13 (left: 8) ",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 27"
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1 + 5 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 9"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 3 * 7 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "45"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> There are no possible next steps with the input of 6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "1 5"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 9"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 3 + 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 6."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 6."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.8"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> 1 + 8 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 + 5 = 6"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 * 7 = 21"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 3 * 7 = 21 -> 3 + 7 = 10 (left: 10 = 21)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 + 4 = 13 (left: 13) -> 13 + 2 = 15 (left: 2)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "5 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 -> 5 - 1 = 4 (left: 4 6) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 9"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 * 1 = 4 (left: 4 9) -> 3 + 6 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 27"
                }
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "18 11"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 / 11 \u2248 1.636 (left: 1.636)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.636"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 / 11 \u2248 1.636 (left: 1.636) -> 1.636 * 2 = 3.272",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "-17"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 / 18 = 0.055555 -> 1 - 18 = -17 (left: -17) -> -17 * 2 = -34 (left: -34)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "10 11"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 58"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 2 + 58 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 58"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 58 / 2 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 3.67 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 - 3 = 8 (left:"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 11 * 3 = 33 (left: 33 - 3 = 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "33 - 3 = 8"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 11 * 3 = 33 (left: 33 - 3 = 8) -> 33 + 3 = 36 (left: 36 - 3 = 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 + 18 = 19 (left: 11 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 19"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 + 18 = 19 (left: 11 19) -> 11 / 19 \u2248 0.5789473684210526 (left: 0.5789473684210526)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "29"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 58"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 58 - 2 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "0.5789473684210526"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 58"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 58 / 2 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 58"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3.67"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 11 / 3 = 3.67 (left: 3.67) -> There are no possible next steps with the input 3.67 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 11 + 1 = 12 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "11 18"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 + 18 = 19 (left: 11 19) -> 19 - 11 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 58"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 2 + 58 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 58"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 2 * 58 = 116 (left: 116)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "20"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 - 8 = 12 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 18 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 - 1 = 17 (left: 17 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 / 18 = 0.055555"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 / 18 = 0.055555 -> 1 - 18 = -17 (left: -17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "29"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 + 2 = 31 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3.67"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 58"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 58 / 2 = 29 (left: )",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 58"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 58"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 58 / 2 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "2 58"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "11 - 3 = 8 (left:"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.636"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 / 11 \u2248 1.636 (left: 1.636) -> Input: 2.5 5.8 1.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 18 11"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 / 18 = 0.055555",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 19"
                }
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 + 18 = 19 (left: 11 19) -> 19 - 11 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 1 + 18 = 19 (left: 11 19) -> 19 - 11 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 58"
                }
            },
            "Step 7": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 58 * 2 = 116 (left: 116)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3.67"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 58"
                }
            },
            "Step 8": {
                "Step": "3 * 6 = 18 (left: 1 18 11) -> 18 / 1 = 18 (left: 11 18) -> 11 + 18 = 29 (left: 29) -> 29 * 2 = 58 (left: 2 58) -> 10 - 5 = 5 (left: ",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "7.647"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.647 (left: 7.647) -> 7.647 * 2 = 15.294 (left: 2 15.294)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 15.294"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.647 (left: 7.647) -> 7.647 * 2 = 15.294 (left: 2 15.294) -> 2 - 15.294 = -13.294 (left: -13.294 15.294)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "17 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> - No valid next steps, the numbers have been used up.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "- No valid next steps, the numbers have been used up."
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> - No valid next steps, the numbers have been used up. -> No valid next steps, the numbers have been used up.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.6471 (left: 7.6471)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14.7"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 + 13 = 14.7 (left: 14.7) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 15.294"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.647 (left: 7.647) -> 7.647 * 2 = 15.294 (left: 2 15.294) -> 2 / 15.294 = 0.1306",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "17 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 - 130 = -113 (left: -113)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> There seems to be a mistake in the input provided. Could you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no more possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 1.7 + 13 = 14.7 (left: 14.7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14.7"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> There are no possible next steps for the input 14.7 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 15.294"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.647 (left: 7.647) -> 7.647 * 2 = 15.294 (left: 2 15.294) -> 2 + 15.294 = 17.294",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 23 + 33 = 56",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "17 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 130 / 17 = 7.647058823529412 (left: 7.647058823529412)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps as the input is already at its final state."
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> There are no possible next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no more possible next steps with the given input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.647 (left: 7.647)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "14.7"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> There are no possible next steps for the input 14.7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 15.294"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.647 (left: 7.647) -> 7.647 * 2 = 15.294 (left: 2 15.294) -> 2 - 15.294 = -13.294 (left: -13.294)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 13 17"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 10 = 23 (left: 17 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "17 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 + 130 = 147 (left: 147)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There seems to be a mistake in the input provided. Could you please provide the correct input for me to generate the possible next steps?"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> There seems to be a mistake in the input provided. Could you please provide the correct input for me to generate the possible next steps? -> Without the correct input, I am unable to provide possible next steps. Please provide the correct input for me to generate the calculations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.7 13"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.64705882353 (left: 7.64705882353)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "7.647"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.647 (left: 7.647) -> 7.647 / 2 = 3.823",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 15.294"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 / 1.7 = 7.647 (left: 7.647) -> 7.647 * 2 = 15.294 (left: 2 15.294) -> 2 + 15.294 = 17.294",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 * 17 = 221 (left: 10 221)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "17 130"
                }
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 + 130 = 147 (left: 147)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "147"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> 17 + 130 = 147 (left: 147) -> 7 / 4 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There seems to be a mistake in the input provided. Could you please provide the correct input for me to generate the possible next steps?"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130) -> Possible next steps: -> There seems to be a mistake in the input provided. Could you please provide the correct input for me to generate the possible next steps? -> Without the correct input, I am unable to generate possible next steps. Please provide the correct input so I can assist you further.",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> There seems to be a mistake in the input, please provide the correct numbers for the next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "1.5 6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24 10"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 10 / 24 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps with the number 18."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with the number 18. -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * 4) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps for the number 18."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps for the number 18. -> There are no possible next steps for the number 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * 4) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24 10"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps as there are no other numbers to perform operations with."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with. -> There are no possible next steps as there are no other numbers to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> Input: 16 4 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24 10"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps as there are no other numbers to perform operations with."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with. -> 2 / 2 = 1 (left: 1 2 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> There is no input provided to generate possible next steps. If you provide numbers, I can generate the possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 * 4 = 24 (left: 24) -> Answer: (6 * (6 - 2)) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "6 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "14 10"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 + 4 = 10 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "Input: 16 4 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 / 17 = 0.35294117647058826 (left: 0.35294117647058826)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "102"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 102 / 2 = 51 (left: 51)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 12 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.3 12"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 / 10 = 1.3 (left: 1.3 12) -> 12 - 1.3 = 10.7 (left: 10.7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> None, 36 is a final number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated. -> Input: 36",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 + 6 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "102"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 10 + 2 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 / 10 = 1.3 (left: 1.3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.3 12"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 / 10 = 1.3 (left: 1.3 12) -> 12 / 1.3 = 9.230769 (left: 9.230769)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 2 = 34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated. -> N/A",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "36 is a final number and cannot be further manipulated."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "102"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 102 - 2 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "6 17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 - 6 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 13"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 17"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 17 - 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "102"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 1 + 0 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "102"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 / 12 = 0.833333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "36 is a final number and cannot be further manipulated."
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated. -> 36 is a final number and cannot be further manipulated.",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 8 = 1.5 (left:"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "96"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the number 96 as it is a single number and cannot be combined with the existing numbers."
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the number 96 as it is a single number and cannot be combined with the existing numbers. -> There are no possible next steps with the number 96 as it is a single number and cannot be combined with the existing numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with the number 96 as it is a single number and cannot be combined with the existing numbers."
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the number 96 as it is a single number and cannot be combined with the existing numbers. -> There are no possible next steps with the number 96 as it is a single number and cannot be combined with the existing numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "96 / 24 = 4 (left"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> 96 / 24 = 4 (left -> 24 / 96 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with the input of 4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps as the expression has been completed with the result of 1.5."
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> There are no possible next steps as the expression has been completed with the result of 1.5. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 32 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> There are no possible next steps with the input 32 as it is a single number. -> There are no possible next steps with the input 32 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24 / 96 ="
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> 96 / 24 = 4 (left -> 24 / 96 = -> 24 / 96 = 0.25",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 8 = 1.5 (left:"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 12 * 8 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps as the expression has been completed with the result of 1.5."
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> There are no possible next steps as the expression has been completed with the result of 1.5. -> Calculation is completed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> 96 / 3 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the number 96 as it is a single number and cannot be combined with the existing numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> 96 / 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "8 4"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 96."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 8 = 1.5 (left:"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> There are no possible next steps as the expression has been completed with the result of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "96"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the number 96 as it is a single number and cannot be combined with the existing numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps with the input 32 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> There are no possible next steps with the input 32 as it is a single number. -> None",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "8 4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 4"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "32"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32) -> There are no possible next steps with the input 32 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps with the input of 96."
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> 96 / 24 = 4 (left",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "96 / 24 = 4 (left"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 * 12 = 96 (left: 96) -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> There are no possible next steps with the input of 96. -> 96 / 24 = 4 (left -> 96 + 24 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "24 / 96 ="
                }
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> Input: 36 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 150"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150) -> 150 - 5 = 145 (left: 5 145)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 150"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150) -> 150 / 5 = 30 (left: 30 150)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "27"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 150"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150) -> 5 + 150 = 155 (left: 155)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "30 150"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150) -> 150 / 5 = 30 (left: 30 150) -> 150 / 30 = 5 (left: 5 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "27"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27) -> 27 + 27 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "72"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "8 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 150"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150) -> 5 * 150 = 750 (left: 750)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 145"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27) -> 27 - 2 = 25 (left: 2 25)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 150"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150) -> 5 + 150 = 155 (left: 155)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "30 150"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150) -> 150 / 5 = 30 (left: 30 150) -> 30 * 150 = 4500 (left: 4500)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 150"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72) -> 72 / 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "27"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 3 * 8 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "5 150"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 150"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 10 * 15 = 150 (left: 5 150) -> 5 + 150 = 155 (left: 150 155)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "3 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "72"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72) -> 72 / 6 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "27"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 + 24 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 54"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 / 54 = 0.2037037037037037 (left: 0.2037037037037037)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.54545"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> 17 / 11 = 1.54545 (left: 1.54545) -> There is no possible next step for the input 1.54545 as it is a single number and cannot be combined or operated on further.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 4"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers for possible calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "No possible next steps with the number 11."
                }
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 + 4 = 11 (left: 11) -> There are no possible next steps with the number 11. -> No possible next steps with the number 11. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 17"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> 17 / 11 = 1.54545 (left: 1.54545)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.2037037037"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 / 54 = 0.2037037037 (left: 0.2037037037) -> 0.2037037037 / 2 = 0.1018518519",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 * 9 = 63 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 4"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 + 4 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 4"
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 / 4 = 1.75 (left: 1.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3 + 3 = 6"
                }
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> 3 + 3 = 6 -> 3 * 3 = 9 (left: 6 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 54"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 3 + 7 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.2037037037037037"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 / 54 = 0.2037037037037037 (left: 0.2037037037037037) -> 0.2037037037037037 * 2 = 0.4074074074074074",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 4"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 + 4 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1.75"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 / 4 = 1.75 (left: 1.75) -> There are no possible next steps for the input 1.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 + 4 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "No possible next steps with the number 11."
                }
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 + 4 = 11 (left: 11) -> There are no possible next steps with the number 11. -> No possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 54"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 - 54 = -43 (left: -43)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.2037037037037037"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 / 54 = 0.2037037037037037 (left: 0.2037037037037037) -> 0.2037037037037037 + 2 = 2.2037037037037037",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 / 7 = 1.29 (left: 1.29 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 4"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "11"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 + 4 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 3."
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with just the number 3. -> 3 + 3 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Please provide at least two numbers for possible calculations."
                }
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers for possible calculations. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "11 54"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 / 54 = 0.2037037037 (left: 0.2037037037)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 9"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 3 + 7 = 10 (left: 10 9) -> 10 - 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 11"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7 4"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "7 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the number 11."
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 + 4 = 11 (left: 11) -> There are no possible next steps with the number 11. -> No possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Please provide at least two numbers for possible calculations."
                }
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 7 = 4 (left: 7 4) -> 7 - 4 = 3 (left: 3) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers for possible calculations. -> Division: 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "15"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 15"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 - 2 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 2 * 15 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 15"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 - 2 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 15 - 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with only one number. Please provide at least two numbers to calculate the possible next steps."
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the possible next steps. -> There are no possible next steps with only one number. Please provide at least two numbers to calculate the possible next steps. -> 3 * 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "66 / 2 = 33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Provide at least two numbers to perform operations on."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "66"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 / 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps as there are no other numbers given to perform operations with. -> N/A",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Provide at least two numbers to perform operations on."
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on. -> Input: Please provide more numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with only one number. Please provide at least two numbers to calculate the possible next steps."
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the possible next steps. -> There are no possible next steps with only one number. Please provide at least two numbers to calculate the possible next steps. -> 2 / 8 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "66"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "66 / 2 = 33"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 / 2 = 33 -> 66 + 2 = 68 (left: 68)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Please provide at least two numbers to calculate the possible next steps."
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the possible next steps. -> There are no possible next steps with only one number. Please provide at least two numbers to calculate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "Input: Please provide more numbers to continue."
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on. -> Input: Please provide more numbers to continue. -> Please provide more numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "66 / 2 = 33"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 / 2 = 33 -> 66 / 33 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "15"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with the input 15."
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There are no possible next steps with the input 15. -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 15"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 - 2 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 2 + 15 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "Please provide at least two numbers to calculate the possible next steps."
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the possible next steps. -> Please provide at least two numbers to calculate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "66"
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2"
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "66"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 - 2 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 15"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> 15 - 2 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "66"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "66"
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> 66 - 2 = 64 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 15"
                }
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "-1 12"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> -1 - 12 = -13 (left: -13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-13"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> -1 - 12 = -13 (left: -13) -> -13 * 2 = -26 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2.4"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input \"2.4\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> N/A",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "2.4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> N/A",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "-1 12"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> -1 + 12 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-13"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> -1 - 12 = -13 (left: -13) -> There are no possible next steps for the input -13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 - 5 = 7 (left:"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 + 5 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2.4"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps for the input 2.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 2.4."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps for the input 2.4. -> There are no possible next steps for the input 2.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> N/A",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 / 4 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "-12"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> 12 / -1 = -12 (left: -12) -> There are no possible next steps with the input of -12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 - 5 = 7 (left:"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 * 5 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2.4"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps for the input 2.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 2.4."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps for the input 2.4. -> There are no possible next steps for the input 2.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "No possible next steps as there is only one number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "-1 12"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> 12 / -1 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> -1 + 12 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 - 5 = 7 (left:"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2.4"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers. -> N/A",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 / 4 = 3 (left:"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 12 + 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 12 + 4 = 16 (left: 16) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 - 5 = 7 (left:"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2.4"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input 2.4 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input \"2.4\" as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left: -> 12 / 5 = 2.4 (left: 2.4) -> There are no possible next steps with the input \"2.4\" as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -13."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps for the input -13."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> -1 - 12 = -13 (left: -13) -> There are no possible next steps for the input -13. -> There are no possible next steps for the input -13.",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "143"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 19"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 5 = 30 (left: )",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "Addition, Subtraction, Multiplication, or Division operations can be performed using the numbers provided. To continue, please provide additional numbers to complete the operation."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.8461538461538461"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.8461538461538461 - 2 = -1.1538461538461539"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 - 2 = -1.1538461538461539 -> 0.8461538461538461 * 2 = 1.6923076923076922 (left: 1.6923076923076922 -1.1538461538461539)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "143"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 143 is a prime number and cannot be broken down further.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36 13"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 + 13 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.8461538461538461 * 2 = 1.6923076923076922"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "143"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 1 + 43 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Addition, Subtraction, Multiplication, or Division operations can be performed using the numbers provided. To continue, please provide additional numbers to complete the operation."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36 13"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 / 13 = 2.769230769230769 (left: 2.769230769230769)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 3.125)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "143"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "143"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 - 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "14 / "
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "143"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 - 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "Error: Incomplete input. Please provide additional numbers to complete the operation."
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 /  -> Error: Incomplete input. Please provide additional numbers to complete the operation. -> Addition, Subtraction, Multiplication, or Division operations can be performed using the numbers provided. To continue, please provide additional numbers to complete the operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "0.8461538461538461"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.8461538461538461"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 + 2 = 2.846153846153846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "25 + 25 = 50"
                }
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 25 = 50 -> 25 * 25 = 625 (left: 625)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "0.8461538461538461 + 2 = 2.846153846153846"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.8461538461538461"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 * 2 = 1.6923076923076922",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "14 / "
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 14 /  -> Error: Incomplete input. Please provide additional numbers to complete the operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36 13"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 6 * 6 = 36 (left: 36 13) -> 36 - 13 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "25"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "25 + 25 = 50"
                }
            },
            "Step 8": {
                "Step": "8 - 2 = 6 (left: 6 6 13) -> 13 + 6 = 19 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "0.8461538461538461 * 2 = 1.6923076923076922"
                }
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 + 2 = 8.66666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 1.11111111111 * 6 = 6.66666666666 (left: 6.66666666666)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.11111111111 6"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 6 - 1.11111111111 = 4.88888888889 (left: 4.88888888889)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.66666666667 * 2 = 13.33333333334"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 + 12 = 20 (left: 20 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 30"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.26666666666666666"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 + 2 = 2.2666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.26666666666666666 + 2 = 2.2666666666666666"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 + 2 = 2.2666666666666666 -> 2.2666666666666666 - 0.26666666666666666 = 2 (left:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 1.11111111111 * 6 = 6.66666666666 (left: 6)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "6.66666666667"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 6 / 1.11111111111 = 5.40000000001 (left: 6)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "6.6666666666667"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 30"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 / 8 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.26666666666666666"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 * 2 = 0.5333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.26666666666666666 * 2 = 0.5333333333333333"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 * 2 = 0.5333333333333333 -> 0.5333333333333333 * 2 = 1.0666666666666667",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps with the current input of 6.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 1.11111111111 + 6 = 7.11111111111 (left: 7.11111111111)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "6.66666666667"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 1.11111111111 * 6 = 6.66666666666 (left: 6.66666666666)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps with the current input of 6.66666666667."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 30"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> Input: 5 5 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.26666666666666666"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 * 2 = 0.5333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "0.26666666666666666 * 0.26666666666666666 = 0.0711111111111111"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 * 0.26666666666666666 = 0.0711111111111111 -> 0.26666666666666666 / 0.26666666666666666 = 1 (left: 1 = 0.0711111111111111)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 6 - 1.11111111111 = 4.88888888889 (left: 4.88888888889)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "6.66666666667"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 1.11111111111 + 6 = 7.11111111111 (left: 7.11111111111)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 18"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 - 8 = 4 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 30"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 30 + 8 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.26666666666666666"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 / 2 = 0.13333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "0.26666666666666666 + 2 = 2.2666666666666666"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 + 2 = 2.2666666666666666 -> 2 / 0.26666666666666666 = 7.5 (left: 7.5 2.2666666666666666)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6.66666666667"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 * 2 = 13.33333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 6 / 1.11111111111 = 5.40000000004 (left: 5.40000000004)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "6.66666666667"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.11111111111 6"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 / 6 = 1.11111111111 (left: 1.11111111111 6) -> 6 / 1.11111111111 = 5.4 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 18"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 5": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 30"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.2667 (left: 0.2667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.26666666666666666"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 * 0.26666666666666666 = 0.0711111111111111",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.26666666666666666 * 2 = 0.5333333333333333"
                }
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 12 + 18 = 30 (left: 8 30) -> 8 / 30 = 0.26666666666666666 (left: 0.26666666666666666) -> 0.26666666666666666 * 2 = 0.5333333333333333 -> 0.26666666666666666 - 2 = -1.7333333333333334",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps for calculations."
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps for calculations. -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "Input: 5"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps for calculations. -> Input: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "24 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 3 + 6 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "None as there is only one number provided."
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None as there is only one number provided. -> No possible next steps as there is only one number provided. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps for calculations. -> Input: 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24 12"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "36 38"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "36 * 2 = 72"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72 -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None as there is only one number provided. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None as there is only one number provided. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 - 6 = 30 (left",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps for calculations."
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps for calculations. -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "36"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36 + 2 = 38"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72 -> 36 + 2 = 38 -> 38 - 2 = 36 (left: 36 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None as there is only one number provided. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided. -> None",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 - 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "None as there is only one number provided."
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36 + 2 = 38"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72 -> 36 + 2 = 38 -> 36 / 2 = 18 (left: 18 38)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps for calculations. -> Input: 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 56"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3 is not a valid input. Please enter a valid input."
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 is not a valid input. Please enter a valid input."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 8 / 3 = 2.67 (left: 2.67 8 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 8 - 2 = 6 (left: 6 8 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> Input: 5 10 -> 5 - 10 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 56"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3 is not a valid input. Please enter a valid input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.67 8 14"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 8 / 3 = 2.67 (left: 2.67 8 14) -> 8 * 2.67 = 21.36 (left: 21.36 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> Input: 5 10 -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 56"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 8 - 2 = 6 (left: 6 8 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 5 - 10 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.33"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 + 1.33 = 2.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 56"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3 is not a valid input. Please enter a valid input."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 is not a valid input. Please enter a valid input."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.67 8 14"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 8 / 3 = 2.67 (left: 2.67 8 14) -> 2.67 * 8 \u2248 21.36 (left: 21.36 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 5 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> Input: 5 10 -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 56"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 - 56 = -48 (left: -48)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "7 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 is not a valid input. Please enter a valid input. -> 8 - 2 = 6 (left: 6 8 14) -> 6 * 8 = 48 (left: 48 14)",
                "Pruning": null
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 - 1 = 5 ("
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 - 1 = 5"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 1 * 6 = 6 (left: 5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one number provided so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 24 + 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6 - 1 = 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 - 1 = 5"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 5 + 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> 48 * 2 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 * 2 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "48"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 - 1 = 5 ("
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "48"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 24 + 24 = 48 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one possible next step: 48 / 2 = 24"
                }
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 8 - 4 = 4 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 16 32"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "No possible next steps as there is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "4 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps as the input is not provided."
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> There are no possible next steps as the input is not provided. -> No possible next steps as the input is not provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 16 32"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "No possible next steps as there is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 8 / 4 = 2 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 16 32"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps as there is only one number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> There are no possible next steps as the input is not provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 32 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 16 32"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 24"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> There seems to be an error in the input provided. Please enter a valid set of numbers to generate possible next steps. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "No possible next steps as the input is not provided."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> There are no possible next steps as the input is not provided. -> No possible next steps as the input is not provided. -> Input: No possible next steps as the input is not provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 8 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 16 - 8 = 8 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "32 16"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 32 16) -> 5 * 7 = 35 (left: 10 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16) -> 4 * 8 = 32 (left: 8 16 32) -> 32 - 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 \u2248 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "13 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "10 11"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5) -> 5 - 8 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There is only one number given (1.25"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "13 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> - 8 * 2 = 16 (left: 16 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "13 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13 11) -> 13 * 11 = 143 (left: 143)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 4"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.25"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There is only one number given (1.25), so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "10 11"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "13 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13 11) -> 13 + 11 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 4"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.25"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 / 2 = 0.625 (left: 0.625)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "4 17"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "13 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13 11) -> 13 * 11 = 143 (left: 143)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1.25"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 5"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 10 = 0 (left: 0) -> Please provide a list of numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 * 7 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.75"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 0.75."
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75. -> There are no possible next steps with the input of 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.75 2.66666666667 2.75"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75 -> 2 / 0.75 = 2.66666666667 (left: 0.75 2.66666666667 2.75) -> 2.66666666667 / ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "10 49"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "60"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the number 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "17 + 8 = 25"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 + 8 = 25 -> 25 - 8 = 17 (left: 17 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.75 2.66666666667 2.75"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75 -> 2 / 0.75 = 2.66666666667 (left: 0.75 2.66666666667 2.75) -> 0.75 + 2.66666666667 = 3.41666666667 (left: 2.75 3.41666666667)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 10 = 0 (left: 0) -> No calculation can be performed with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 * 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "17"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 + 8 = 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.75 + 2 = 2.75"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75 -> 2 / 0.75 = 2.66666666667 (left: 0.75 2.66666666667 2.75)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.75 2.66666666667 2.75"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75 -> 2 / 0.75 = 2.66666666667 (left: 0.75 2.66666666667 2.75) -> 2.66666666667 * 2.75 = 7.33333333342 (left: 0.75 7.33333333342)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 7 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 + 2 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "60"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 0.75."
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75. -> There are no possible next steps with the input of 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.75 2.66666666667 2.75"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75 -> 2 / 0.75 = 2.66666666667 (left: 0.75 2.66666666667 2.75) -> 2.66666666667 / 0.75 = 3.55555555556 (left: 0.75 3.55555555556 2.75)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 7 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.75"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 0.75."
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75. -> There are no possible next steps with the input of 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.75 2.66666666667 2.75"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 2 + 7 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75 -> 2 / 0.75 = 2.66666666667 (left: 0.75 2.66666666667 2.75) -> 0.75 * 2.66666666667 = 2 (left: 2 2.75)",
                "Pruning": null
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 96"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 - 96 = -88 (left: -88)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 + 0.333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 0.3333333333333333 * 8 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 * 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 0.3333333333333333 + 8 = 8.333333333333334 (left: 8.333333333333334)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 24"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7.666666666666667 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "Input: 5 5"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 - 0.3333333333333333 = 7.666666666666666 (left: 7.666666666666666 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 0.3333333333333333 * 8 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 -"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 24 * 8 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "12"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 - 0.3333333333333333 = 7.666666666666667 (left: 7.666666666666667 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "7.666666666666667 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "12"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.3333333333333333 8"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 0.333333333333",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "0.3333333333333333 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "7.666666666666666 8"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 - 0.3333333333333333 = 7.666666666666666 (left: 7.666666666666666 8) -> 7.666666666",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8) -> 8 / 0.3333333333333333 = 24 (left: 24 8) -> 24 + 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 9 + ",
                "Pruning": null
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There is no input provided. Please provide the input sequence to generate possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There is no input provided. Please provide the input sequence to generate possible next steps. -> No input provided. Please provide the input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "No possible next steps provided as there are no numbers in the input."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> ",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "I'm sorry, but without the input numbers, I am unable to provide the possible next steps. Please provide the numbers for me to calculate."
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> I'm sorry, but without the input numbers, I am unable to provide the possible next steps. Please provide the numbers for me to calculate. -> I'm sorry, but without the input numbers, I am unable to provide the possible next steps. Please provide the numbers for me to calculate. -> I'm sorry, but without the input numbers, I am unable to provide the possible next steps. Please provide the numbers for me to calculate.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 12 13"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 13 / 8 = 1.625 (left: 1.625 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.5 13"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 / 8 = 1.5 (left: 1.5 13) -> 1.5 * 13 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There seems to be an error in the input provided. Could you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "No possible next steps provided as there are no numbers in the input."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps provided as there are no numbers in the input."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "No possible next steps provided as there are no numbers in the input."
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 12 13"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 + 13 = 25 (left: 8 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.5 13"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 / 8 = 1.5 (left: 1.5 13) -> 1.5 + 13 = 14.5 (left: 14.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Unfortunately, without the input numbers, I am unable to provide the next steps. Please provide the numbers for us to continue."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There doesn't seem to be any input provided. Can you please provide the numbers for the next steps?"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "No possible next steps provided as there are no numbers in the input."
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps provided as there are no numbers in the input."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue."
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 12 13"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 / 8 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.5 13"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 / 8 = 1.5 (left: 1.5 13) -> 13 - 1.5 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> Sorry, I cannot provide possible next steps without any numbers provided in the input. Please provide the numbers for me to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Apologies for the missing input. Can you please provide the numbers for the next steps?"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps provided as there are no numbers in the input."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "No possible next steps provided as there are no numbers in the input."
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input. -> No possible next steps provided as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 12 13"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 / 8 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1.5 13"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 / 8 = 1.5 (left: 1.5 13) -> 1.5 + 13 = 14.5 (left: 14.5)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "1.5 13"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "Input:"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There is no input provided. Please provide the input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any numbers provided in the input. Please provide the numbers to continue finding possible next steps. -> No possible next steps provided as there are no numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Apologies for the missing input. Can you please provide the numbers for the next steps?"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> I'm sorry, but without the input numbers, I am unable to provide the possible next steps. Please provide the numbers for me to calculate.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "I'm sorry, but without the input numbers, I am unable to provide the possible next steps. Please provide the numbers for me to calculate."
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> I'm sorry, but without the input numbers, I am unable to provide the possible next steps. Please provide the numbers for me to calculate. -> I'm sorry, but without the input numbers, I am unable to provide the possible next steps. Please provide the numbers for me to calculate.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue."
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> Unfortunately, without the input numbers, I am unable to provide the next steps. Please provide the numbers for us to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 12 13"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 - 8 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.5 13"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> There doesn't seem to be any input provided. Can you please provide the numbers for the next steps? -> Apologies for the missing input. Can you please provide the numbers for the next steps? -> Without the input numbers, it's not possible to provide the next steps. Please provide the numbers for us to continue. -> 6 + 7 = 13 (left: 8 12 13) -> 12 / 8 = 1.5 (left: 1.5 13) -> 13 - 1.5 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps provided as there are no numbers in the input."
                }
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 4 - 6 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12 24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 4 10 8 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> Input: 4 10 8 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "16 96"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "12 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 - 24 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 * 2 = 24 (left: 24) -> Answer: (4 * 4) + 8 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "112"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 24"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> Input: 4 10 16 6 8 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Input: 4 10 16 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "16 96"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 * 2 = 24 (left: 24) -> Answer: (4 * 4 + 8) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "12 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "16 96"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 16 + 96 = 112 (left: 112)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 * 2 = 24 (left: 24) -> Answer: (4 * 4) + 8 = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "9 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> Input: 4 10 16 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "Input: 4 10 16 6 8 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 8 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12 24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12 24) -> 24 - 12 = 12 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Input: 4 10 16 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 4"
                }
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 8 - 2 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "12 24"
                }
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0 16"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 / 0 is undefined, division by zero is not allowed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 16"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 * 0 = 0 (left: 0 16) -> 0 - 16 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 0"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "16 / 0 = undefined"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16 + 0 = 16"
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16 -> There are no possible next steps as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform calculations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0 16"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 0 * 16 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "64"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 16"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 * 0 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "16 0"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 0"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 / 0 = undefined or not possible to divide by 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "0"
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps with the input 0, as there are no numbers provided to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "64"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64) -> 64 / 4 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0 16"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 0 * 16 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 16"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 * 0 = 0 (left: 0 16) -> 0 + 16 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 0"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "16 / 0 = undefined"
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0 16"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 - 16 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "64"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 16"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 * 0 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "7"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 0"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16 + 0 = 16"
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16 -> 16 * 0 = 0 (left: 0 16)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0 16"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 * 0 = 0 (left: 0 16)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 16"
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 16 * 0 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "0 16"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "16 0"
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 / 0 = undefined (cannot divide by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16 + 0 = 16"
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 + 0 = 16 -> No possible next steps as the equation is already simplified.",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 2 "
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2"
                }
            },
            "Step 6": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number provided. -> - Add another number to the input",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "Please provide more numbers to continue the calculations."
                }
            },
            "Step 8": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> There are no possible next steps with just one number provided. -> Please provide more numbers to continue the calculations. -> - Divide any two numbers",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Please provide more than one number to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 2 "
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2"
                }
            },
            "Step 6": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "- Add another number to the input"
                }
            },
            "Step 8": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number provided. -> - Add another number to the input -> - Perform an operation between the new number and one of the existing numbers in the input",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "720"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 2 "
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 1 + 2 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "No possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5) -> There are no possible next steps as there are only 4 numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 2 "
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 1 / 2 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2"
                }
            },
            "Step 6": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 3."
                }
            },
            "Step 7": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 1 + 2 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input 3."
                }
            },
            "Step 8": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 1 + 2 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 2 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps as there are only 4 numbers provided in the input."
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5) -> There are no possible next steps as there are only 4 numbers provided in the input. -> N/A",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 2 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 2 "
                }
            },
            "Step 5": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2"
                }
            },
            "Step 6": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> There are no possible next steps with just one number provided. -> Please provide more numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps with the input 3."
                }
            },
            "Step 8": {
                "Step": "12 / 5 = 2 (left: 1 2  -> 1 + 2 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 8 / 6.8 = 1.1764705882352942 (left: 1.1764705882352942 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1.1764705882352942"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 8 / 6.8 = 1.1764705882352942 (left: 1.1764705882352942) -> 1.1764705882352942 * 2 = 2.3529411764705884",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.1764705882352942 * 2 = 2.3529411764705884"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "7 8"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "5 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "6 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 + 6 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.75"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps with the input 0.75.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "5 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) ",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 8"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> None. The input is not a valid operation with the remaining numbers.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "5 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1.2 6 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 - 1 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 5"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.75"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> 0.75 - 2 = -1.25",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 8 / 6.8 = 1.1764705882352942 (left: 1.1764705882352942)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "6.8 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 6 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 11"
                }
            },
            "Step 1": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 4 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 + 15 = 19 (left: 7 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "99"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> There are no possible next steps with the input of 99 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 4 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 * 15 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15) -> 3 / 15 = 0.2 (left: 0.2)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "22 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "Input: 4 10 20"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15) -> Input: 4 10 20 -> 4 + 10 = 14 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "14 20"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15) -> Input: 4 10 20 -> 4 + 10 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7 19"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "99"
                }
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> 99 + 2 = 101",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 11"
                }
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15) -> 3 + 15 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "99"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 4 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-6 11"
                }
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 - 14 = -6 (left: -6 11) -> -6 / 11 = -0.5454545454545454 (left: -0.5454545454545454)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "105 + 2 = 107"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 * 15 = 105 (left: 105) -> 105 + 2 = 107 -> 105 - 2 = 103",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "14 20"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15) -> Input: 4 10 20 -> 4 + 10 = 14 (left: 14 20) -> 14 * 20 = 280 (left: 280)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 99 as it is a single number and cannot be combined with any other numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "99"
                }
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> 99 + 2 = 101 (left: 2)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "105 + 2 = 107"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 4 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 / 4 = 1.75 (left: 1.75 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 19"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 + 15 = 19 (left: 7 19) -> 7 + 19 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "7 4 15"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 - 14 = -6 (left: -6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 15 - 7 = 8 (left: 8 4) -> 8 - 4 = 4 (left: 4) ",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "105"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "105 + 2 = 107"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 * 15 = 105 (left: 105) -> 105 + 2 = 107 -> 105 * 2 = 210",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "105 * 2 = 210"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 * 15 = 105 (left: 105) -> 105 + 2 = 107 -> 105 * 2 = 210 -> 105 + 2 = 107 (left: 107 * 2 = 214)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "99"
                }
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> There are no possible next steps with the input 99.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 4 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 19"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 + 15 = 19 (left: 7 19) -> 7 * 19 = 133 (left: 133)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 14 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 4 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 15 - 7 = 8 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15) -> Input: 4 10 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "22 11"
                }
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 - 3 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "105 - 2 = 103"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 * 15 = 105 (left: 105) -> 105 + 2 = 107 -> 105 - 2 = 103 -> 105 + 2 = 107 (left: 107)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "99"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "99"
                }
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> There are no possible next steps with the input of 99.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 4 15"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 * 4 = 28 (left: 28 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.75 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 / 4 = 1.75 (left: 1.75 15) -> 1.75 + 15 = 16.75 (left: 16.75)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "99"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 4 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 15 - 4 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "105"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 * 15 = 105 (left: 105) -> 105 + 2 = 107",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "Input: 4 10 20"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15) -> Input: 4 10 20 -> 4 + 10 = 14 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "14 20"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 7 - 4 = 3 (left: 3 15) -> Input: 4 10 20 -> 4 + 10 = 14 (left: 14 20) -> 20 + 14 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "105 * 2 = 210"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "99"
                }
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> There are no possible next steps with the input 99.",
                "Pruning": null
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 - 1 = 2 (left:"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3.33"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no possible next steps with the input 3.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 3.33 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no possible next steps with the input 3.33 as it is a single number. -> There are no possible next steps with the input 3.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10) -> 10 * 10 = 100",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 3.33 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 - 1 = 2 (left:"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 * 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 / 1 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.665 2"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665 (left: 1.665 2) -> 1.665 / 2 = 0.8325 (left: 0.8325)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3.33"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> 3.33 / 2 = 1.665 (left: 1.665 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one number so there are no possible next steps."
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There is only one number so there are no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 6"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 - 1 = 2 (left:"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 / 1 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3.33"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There is only one number so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with the input 3.33 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no possible next steps with the input 3.33 as it is a single number. -> There are no possible next steps with the input 3.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.665 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 - 1 = 2 (left:"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3.33"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no possible next steps for the input 3.33 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps for the input 3.33 as it is a single number and not an operation with multiple numbers."
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 / 3 = 3.33 (left: 3.33) -> There are no possible next steps for the input 3.33 as it is a single number and not an operation with multiple numbers. -> There are no possible next steps for the input 3.33 as it is a single number and not an operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 6"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "3.33"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2 6"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 6"
                }
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 6 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 14 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 36"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> No possible next steps with input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input of 0."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "3"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 12 36",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 8 = 20 (left: 8) ",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 8 / 3 = 2.6667 (left: 2.6667)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12 36"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 36"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 20"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 / 20 = 0.4 (left: 0.4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "No possible next steps with input 0."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "No possible next steps with input 0."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "0 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 36"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 * 3 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3 12) -> 4",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.1428571428571428 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 0.114285714"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 / 10 = 0.1142857142857143 (left: 10 0.114285714 -> 10 * 0.114285714 = 1.14285714 (left: 0.114285714 1.14285714)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 / 7 = 1.42857142857 (left:"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 / 7 = 1.42857142857 (left:"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation is already completed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Calculation is already completed."
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation is already completed. -> Calculation is already completed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.1428571428571428 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 / 10 = 0.1142857142857143 (left: 10 0.114285714",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 0.114285714"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 / 10 = 0.1142857142857143 (left: 10 0.114285714 -> 10 / 0.114285",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 / 7 = 1.42857142857 (left:"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no more possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation is complete. No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "Calculation is complete. No possible next steps."
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation is complete. No possible next steps. -> Calculation is complete. No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 8"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 0.114285714"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 / 10 = 0.1142857142857143 (left: 10 0.114285714 -> 10 / 0.114285714 = 87.5 (left: 87.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "0.114285714285714"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 / 7 = 1.42857142857 (left:"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "Calculation is complete. No possible next steps."
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation is complete. No possible next steps. -> Calculation is complete. No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1.1428571428571428 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 / 10 = 0.11428571428571428 (left: 0.114285714285714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 0.114285714"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 / 10 = 0.1142857142857143 (left: 10 0.114285714 -> 10 * 0.114285714 = 1.14285714 (left: 1.14285714)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "10 0.114285714"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.114285714 1.14285714"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 / 10 = 0.1142857142857143 (left: 10 0.114285714 -> 10 * 0.114285714 = 1.14285714 (left: 0.114285714 1.14285714) -> 1.14285714 - 0.114285714 = 1.028571426 (left: 1.028571426)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 10 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 / 7 = 1.42857142857 (left:"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> 10 + 7 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "Calculation has been completed."
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed. -> No possible next steps as the calculation has been completed.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 8"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 0.114285714"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 1.1428571428571428 / 10 = 0.1142857142857143 (left: 10 0.114285714 -> 10 * 0.114285714 \u2248 1.14285714 (left: 1.14285714)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 / 7 = 1.42857142857 (left:"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> 10 + 7 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation is already completed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "Calculation is already completed."
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 / 7 = 1.42857142857 (left: -> There are no possible next steps as the calculation has been completed. -> There are no possible next steps as the calculation has been completed. -> Calculation is already completed. -> Calculation is already completed.",
                "Pruning": null
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9.5 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 - 9.5 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "123.5"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 + 2 = 125.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps."
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> There is only one number given, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "The input does not contain enough numbers to perform any operations."
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Please input at least two numbers to perform operations."
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Subtraction: 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "There are no possible next steps with the given numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided."
                }
            },
            "Step 7": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Division: 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "- Subtraction: 8 - 2 = 6 (left:"
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Subtraction: 8 - 2 = 6 (left: -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided in the input."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9.5 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "123.5"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "None. There is only one number provided in the input."
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> There are no possible next steps as there is only one number provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "The input does not contain enough numbers to perform any operations."
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please provide at least two numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "Please provide at least two numbers to perform operations."
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please provide at least two numbers to perform operations. -> Please provide at least two numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided."
                }
            },
            "Step 7": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Subtraction: 8 - 2 = 6 (left:",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "- Subtraction: 8 - 2 = 6 (left:"
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Subtraction: 8 - 2 = 6 (left: -> 16 / 2 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9.5 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "123.5"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 + 2 = 125.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "None. There is only one number provided in the input."
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> There is only one number given, so there are no possible next steps. -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> There is only one number given, so there are no possible next steps. -> No possible next steps. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided."
                }
            },
            "Step 7": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Multiplication: 8 * 8 = 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "- Subtraction: 8 - 2 = 6 (left:"
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Subtraction: 8 - 2 = 6 (left: -> 8 * 2 = 16 (left: 6 16 48)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9.5 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 - 9.5 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22.5"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> There are no possible next steps with the input 22.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps."
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> There is only one number given, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> There is only one number given, so there are no possible next steps. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> There is only one number given, so there are no possible next steps. -> No possible next steps. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided."
                }
            },
            "Step 7": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Add the third and fourth numbers (8 + 14 = 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "- Subtraction: 8 - 2 = 6 (left:"
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Subtraction: 8 - 2 = 6 (left: -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "- Add the third and fourth numbers (8 + 14 = 22"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9.5 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22.5"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "123.5 + 2 = 125.5"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> 123.5 + 2 = 125.5 -> 123.5 + 2 = 125.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 * 13 = 123.5 (left: 123.5) -> There is only one number given, so there are no possible next steps. -> No possible next steps. -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided in the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Please input at least two numbers to perform operations."
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided."
                }
            },
            "Step 7": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Multiplication: 8 * 8 = 64",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "- Subtraction: 8 - 2 = 6 (left:"
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 9.5 + 13 = 22.5 (left: 22.5) -> None. There is only one number provided in the input. -> The input does not contain enough numbers to perform any operations. -> Please input at least two numbers to perform operations. -> Addition, subtraction, multiplication, or division operations can be performed on the two numbers provided. -> - Subtraction: 8 - 2 = 6 (left: -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "12 / 5 = 2.4 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 17"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "27"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 / 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "27 + 2 = 29"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 + 2 = 29 -> 27 / 2 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "27 + 2 = 29"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> No possible next steps. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 17"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "27"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "27 / 3 = 9"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 / 3 = 9 -> 27 + 3 = 30 (left: 30 = 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> No possible next steps. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 17"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 * 17 = 170 (left: 170)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "27"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 * 2 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "27 + 2 = 29"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 + 2 = 29 -> 27 / 2 = 13.5 (left: 13.5 29)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "5 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 17"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 * 17 = 170 (left: 170)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "27"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 54"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 * 2 = 54 (left: 2 54) -> 2 * 54 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "27 + 2 = 29"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 + 2 = 29 -> 27 - 2 = 25 (left: 25 29)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 17"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "27"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> 27 * 2 = 54 (left: 2 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> No possible next steps. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 + 5 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27) -> No possible next steps. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.5 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 6 10"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 6 10) -> 10 / 3 = 3.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no valid operations that can be performed with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no valid operations that can be performed with only one number."
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no valid operations that can be performed with only one number. -> There are no valid operations that can be performed with only one number. -> Input: 5 3 7 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "Please provide at least two numbers to perform mathematical operations."
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers to perform mathematical operations. -> - Subtract one number from the other",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no valid operations that can be performed with only one number."
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no valid operations that can be performed with only one number. -> There are no valid operations that can be performed with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no valid operations that can be performed with only one number."
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no valid operations that can be performed with only one number. -> There are no valid operations that can be performed with only one number. -> There are no valid operations that can be performed with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Input: 5 3 7 2"
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no valid operations that can be performed with only one number. -> There are no valid operations that can be performed with only one number. -> Input: 5 3 7 2 -> 5 + 2 = 7 (left: 3 7 7)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.5 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "1.5 6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Not enough numbers provided for any mathematical operations."
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers to perform mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "Input: 5 3 7 2"
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no valid operations that can be performed with only one number. -> There are no valid operations that can be performed with only one number. -> Input: 5 3 7 2 -> 7 - 5 = 2 (left: 2 3 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 6 10"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 6 10) -> 6 * 3 = 18 (left: 18 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "There are no valid operations that can be performed with only one number."
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no valid operations that can be performed with only one number. -> There are no valid operations that can be performed with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "6 6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> Not enough numbers provided for any mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "Please provide at least two numbers to perform mathematical operations."
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No possible next steps as there is only one number given. -> No possible next steps as there is only one number given. -> Not enough numbers provided for any mathematical operations. -> Please provide at least two numbers to perform mathematical operations. -> Please provide at least two numbers to perform mathematical operations.",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2.66667 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 11 - 8 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 9.6"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 + 8 = 9.6 (left: 8 9.6) -> 8 / 9.6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps as there is only one number provided. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the number 14.4 since it is not an integer."
                }
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer. -> There are no possible next steps for the number 14.4 since it is not an integer.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 / 1.6 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "14.4"
                }
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the number 14.4 since it is not an integer."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer. -> There are no possible next steps for the number 14.4 since it is not an integer.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the number 14.4 since it is not an integer."
                }
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer. -> 14.4 is not an integer, so there are no possible next steps for this number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "40"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)  -> There are no possible next steps with the input of 40 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> Possible next steps: -> - 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 16"
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> Possible next steps: -> - 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the number 14.4 since it is not an integer."
                }
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer. -> There are no possible next steps for the number 14.4 since it is not an integer.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 11"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 + 8 = 9.6 (left: 8 9.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "14.4"
                }
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the number 14.4 since it is not an integer."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the number 14.4 since it is not an integer."
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the number 14.4 since it is not an integer."
                }
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer. -> 14.4 is not an integer, so there are no possible next steps for this number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 - 8 = -3 (left: -3) -> -3 * -3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.6 8 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 + 8 = 9.6 (left: 8 9.6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6.4 8"
                }
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "14.4"
                }
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the input 14.4 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the number 14.4 since it is not an integer."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer. -> There are no possible next steps for the number 14.4 since it is not an integer.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "There are no possible next steps for the number 14.4 since it is not an integer."
                }
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 -> 6.4 + 8 = 14.4 (left: 14.4) -> There are no possible next steps for the number 14.4 since it is not an integer. -> There are no possible next steps for the number 14.4 since it is not an integer.",
                "Pruning": null
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1.3333 96"
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 - 1.3333 = 94.6667 (left: 94.6667 96)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "94.6667 96"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 - 1.3333 = 94.6667 (left: 94.6667 96) -> 94.6667 / 96 = 0.9868 (left: 0.9868 96)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "0.9868 96"
                }
            },
            "Step 4": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 - 1.3333 = 94.6667 (left: 94.6667 96) -> 94.6667 / 96 = 0.9868 (left: 0.9868 96) -> 0.9868 + 96 = 96.9868 (left: 96.9868)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "6 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "48 96"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 - 96 = -48 (left: -48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "48 192"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 2 = 16 (left: 16 12 48) -> 16 * 12 = 192 (left: 48 192) -> 192 / 48 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 48"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 * 48 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "192"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 * 48 = 192 (left: 192) -> 1 * 9 * 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.9868 96"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 / 3 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "94.6667 96"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 - 1.3333 = 94.6667 (left: 94.6667 96) -> 94.6667 + 96 = 190.6667 (left: 96)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "4 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "48 96"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 96 / 48 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "48 192"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 2 = 16 (left: 16 12 48) -> 16 * 12 = 192 (left: 48 192) -> 192 / 3 = 64 (left: 48 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 + 44 = 48 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "192"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 * 48 = 192 (left: 192) -> 9 * 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "48 64"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 + 48 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "94.6667 96"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 - 1.3333 = 94.6667 (left: 94.6667 96) -> 94.6667 / 96 = 0.9876 (left: 0.9876 96)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16 12 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 2 = 16 (left: 16 12 48) -> 16 * 12 = 192 (left: 48 192)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "48 192"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 2 = 16 (left: 16 12 48) -> 16 * 12 = 192 (left: 48 192) -> 48 + 192 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 6 = 42 (left: 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "44"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 + 44 = 48 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 12"
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "94.6667 96"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 - 1.3333 = 94.6667 (left: 94.6667 96) -> 94.6667 + 96 = 190.6667 (left: 190.6667)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "4 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 2 = 16 (left: 16 12 48)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "48 96"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96) -> 48 + 96 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "48 192"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 2 = 16 (left: 16 12 48) -> 16 * 12 = 192 (left: 48 192) -> 48 * 4 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 * 48 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "192"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 * 48 = 192 (left: 192) -> 1 + 9 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.9876 96"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 12"
                }
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "94.6667 96"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 - 1.3333 = 94.6667 (left: 94.6667 96) -> 94.6667 / 96 = 0.9872 (left: 0.9872)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 12 48"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 / 8 = 1.5 (left: 1.5 8 48)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.5 8 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 / 8 = 1.5 (left: 1.5 8 48) -> 1.5 + 8 = 9.5 (left: 9.5 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "48 192"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 2 = 16 (left: 16 12 48) -> 16 * 12 = 192 (left: 48 192) -> 48 * 4 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "144"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 48"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 * 12 = 48 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "192"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 4 * 48 = 192 (left: 192) -> 192 / 2 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.9876 96"
                }
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> Input: 5 10 15 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 11 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> Input: 5 25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11 21"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 11 21) -> 21 - 11 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "200 20"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 10 = 200 (left: 200 20) -> 200 / 20 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "11 + 2 = 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 44"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44) -> 11 * 44 = 484 (left: 484)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "55"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55) -> 55 / 2 = 27.5",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "11 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "5 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "200 20"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 10 = 200 (left: 200 20) -> 200 - 20 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 42 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 11 * 2 = 22 (left: 22 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 44"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44) -> 44 / 11 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "55"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55) -> No valid operations can be performed on the number 55.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "200 20"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 10 = 200 (left: 200 20) -> 200 - 20 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "11 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 11 = 3.81818181818 (left: 3.81818181818 42)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 44"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": ""
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 11 = 3.81818181818 (left: 3.81818181818 42) ->  -> No input provided. Please input a set of numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> Input: 20 * 5 = 100",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "200 20"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 10 = 200 (left: 200 20) -> 200 / 20 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 44"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44) -> 44 - 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "55"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44) -> 11 + 44 = 55 (left: 55) -> There are no possible next steps with the input 55, as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "Input: 5 25"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> Input: 5 25 -> 5 + 25 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "11 21"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 10 = 200 (left: 200 20)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "200 20"
                }
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 * 10 = 200 (left: 200 20) -> 200 / 20 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 8 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 - 2 = 40 (left: 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.81818181818 42"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 11 = 3.81818181818 (left: 3.81818181818 42) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "33"
                }
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 2 + 42 = 44 (left: 11 44) -> 44 - 11 = 33 (left: 33) -> 33 - 3 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "17"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13) -> 9 * 12 = 108 (left: 108 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 108"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108) -> 108 - 13 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no more possible next steps for the number 2.4 as it is already a decimal number."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no more possible next steps for the number 2.4 as it is already a decimal number. -> There are no more possible next steps for the number 2.4 as it is already a decimal number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no more possible next steps for the number 2.4 as it is already a decimal number."
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no more possible next steps for the number 2.4 as it is already a decimal number. -> There are no more possible next steps for the number 2.4 as it is already a decimal number. -> There are no more possible next steps for the number 2.4 as it is already a decimal number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps as the input provided is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 108"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108) -> 13 * 108 = 1404 (left: 1404)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "13 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 12"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "156"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 1 + 5 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no more possible next steps for the number 2.4 as it is already a decimal number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "60"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 % 2 = 0 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 9 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 12"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "13 108"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13) -> 9 * 12 = 108 (left: 13 108) -> 13 + 108 = 121 (left: 121)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no more possible next steps for the number 2.4 as it is already a decimal number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step: 25 - 8 = 17."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> There is only one possible next step: 25 - 8 = 17. -> 25 - 8 = 17",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "25 - 8 = 17"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> There is only one possible next step: 25 - 8 = 17. -> 25 - 8 = 17 -> 25 - 8 = 17 (left: 17 17)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.4"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 12"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> There is only one possible next step: 25 - 8 = 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no more possible next steps for the number 2.4 as it is already a decimal number."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no more possible next steps for the number 2.4 as it is already a decimal number. -> There are no possible next steps for the number 2.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "156"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 156 / 1 = 156 (left: 1 156)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.4"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There are no more possible next steps for the number 2.4 as it is already a decimal number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "13 12"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> No possible next steps for the input 25 as it is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13 12"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "25 - 8 = 17"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> There is only one possible next step: 25 - 8 = 17. -> 25 - 8 = 17 -> 25 / 8 = 3.125 (left: 3.125 - 8 = 17)",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "15 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 * 3 = 15 (left: 15 12) -> 12 + 15 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 3 * 5 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "15 12"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 * 3 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.4167 7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 5 = 7 (left: -> 5 / 12 = 0.4167 (left: 0.4167 7) -> 7 * 0.4167 = 2.9169 (left: 2.9169)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 3 5 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 3 = 9 (left: 9 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 12 14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 12 - 1 = 11 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "15 12"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 * 3 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.4167 7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 5 = 7 (left: -> 5 / 12 = 0.4167 (left: 0.4167 7) -> 0.4167 + 7 = 7.4167 (left: 7.4167)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "9 5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "7 - 0.4167 = 6.583"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "15 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "-1 5"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1 5) -> -1 + 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "3 5 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "15 12"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 * 3 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "15 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.4167 7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 5 = 7 (left: -> 5 / 12 = 0.4167 (left: 0.4167 7) -> 7 - 0.4167 = 6.583",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 3 5 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 1": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 5 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 - 5 = 7 (left:"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 5 = 7 (left: -> 5 / 12 = 0.4167 (left: 0.4167 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.4167 7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 5 = 7 (left: -> 5 / 12 = 0.4167 (left: 0.4167 7) -> 7 - 0.4167 = 6.5833 (left: 6.5833)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "15 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 3 5 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 3 = 9 (left: 9 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 4 - 5 = -1 (left: -1 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 5 12"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "15 12"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 * 3 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.4167 7"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 - 5 = 7 (left: -> 5 / 12 = 0.4167 (left: 0.4167 7) -> Input: 3 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 12 / 3 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "Input: 3 5 2"
                }
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 6 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 30"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 + 8 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 + 1 = 241 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 11"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 240 as it is a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 6 / 5 = 1.2 (left: 1.2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 30"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 30 / 8 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There are no possible next steps for the number 240 as it is not possible to break it down further using the operations of addition, subtraction, multiplication, and division with the numbers 2, 8, and 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 11"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 11"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 6 * 8 = 48 (left: 5 48)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 30"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 5 + 5 = 10 (left: 5 10 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There are no possible next steps for the input 240 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "38"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There is only one number, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There is only one number, so there are no possible next steps. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 6 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 6 / 5 = 1.2 (left: 1.2 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 30"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 + 30 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> 240 / 6 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "38"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "38"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "8 11"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the number 240 as it is not possible to break it down further using the operations of addition, subtraction, multiplication, and division with the numbers 2, 8, and 14."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 30"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "240"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There is only one number, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 * 6 = 30 (left: 8 30) -> 8 * 30 = 240 (left: 240) -> There is only one number, so there are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 22"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 * 22 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "1.6 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 * 8 = 12.8 (left: 12.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0 8 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 22"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2.67"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> 2.67 / 2 = 1.335 (left: 1.335)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 10 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 22"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 22"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 22"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "5 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 22"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 2 + 22 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.67"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 - 1.6 = 6.4 (left: 6.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 8 = 0 (left: 0 8 8) -> Input: 6 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 10 - 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Input: 5 9"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> Input: 5 9 -> 3 + 7 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 22"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 (left: 2 22) -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 5 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 22"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 9.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10 11"
                }
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 + 10 = 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 9 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 10"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 4 * 6 = 24 (left: 24 8) -> 8 / 24 = 0.3333 (left: 0.3333)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.1 11"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 -> 1 / 10 = 0.1 (left: 0.1 11) -> 0.1 + 11 = 11.1 (left: 11.1)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "1 + 10 = 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 + 10 = 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 9 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 10"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 4 * 6 = 24 (left: 24 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 4 * 6 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.1 11"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 -> 1 / 10 = 0.1 (left: 0.1 11) -> 11 - 0.1 = 10.9 (left: 10.9)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "8 192"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 18"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18) -> 8 - 18 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 2 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 10"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 4 * 6 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.1 11"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.1 11"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 -> 1 / 10 = 0.1 (left: 0.1 11) -> 11 - 0.1 = 10.9 (left: 10.9)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "None - there is only one number and no operations to perform on it."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.1"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> None - there is only one number and no operations to perform on it.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 10"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 4 * 6 = 24 (left: 24 8) -> 24 * 8 = 192 (left: 8 192)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 + 10 = 11"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 -> 1 / 10 = 0.1 (left: 0.1 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "5 10"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 4 * 6 = 24 (left: 24 8) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "0.1 11"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 -> 1 / 10 = 0.1 (left: 0.1 11) -> 0.1 + 11 = 11.1 (left: 11.1)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "0.1 11"
                }
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 + 2 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (6 + 2) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (2 * 6) + (3 * 8) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (12 / 4)) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: ((3 * 4) * 2) * 6 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (12 / 4)) = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n12 * 8 = 24 (left: 24)\nAnswer: (2 * 6) * (5 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 5 8\nSteps:\n3 + 5 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 2) * 8 / 2 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 8 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 5 7\nSteps:\n2 * 3 = 6 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n13 * 5 = 65 (left: 65)\nAnswer: (2 * 3) + (5 + 7) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 8\nSteps:\n4 * 8 = 32 (left: 2 3 32)\n3 + 2 = 5 (left: 5 32)\n5 * 32 = 160 (left: 160)\nAnswer: (3 + 2) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (12 / 4)) = 24 -> Input: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n12 * 5 = 60 (left: 60)\nAnswer: (2 * 3) + (5 * (6 + 6)) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) * 8 = 24 -> The steps provided are incorrect for the given input. Let's correct it:\n\n3 * 8 = 24 (left: 4 12 24)\n4 * 12 = 48 (left: 24 48)\n48 / 24 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\n\nTherefore, the correct equation is: 3 * 8 = 24, 4 * 12 = 48,",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24\nAnswer: (((2 * 3) + 8) + 6) + 4 = 24.",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All of the given inputs can be simplified using the basic arithmetic operations to obtain the final result of 24.",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (12 / 4)) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 + 10 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((2 * 5) + 4) - 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 7 8 9\nSteps:\n6 * 7 = 42 (left: 8 9 42)\n9 - 8 = 1 (left: 1 42)\n1 * 42 = 42 (left: 42)\nAnswer: (6 * 7) - (9 - 8) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (12 / 4)) = 24 -> Input: 2 3 5 6\nSteps:\n3 * 2 = 6 (left: 5 6 6)\n6 + 5 = 11 (left: 11 6)\n11 * 6 = 66 (left: 66)\nAnswer: (3 * 2) * (6 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\nAnswer: (2 * (3 + 5)) + 5 = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "8 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 8 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given inputs have been used to obtain the number 24 using basic arithmetic operations.",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 6\nSteps:\n6 * 3 = 18 (left: 2 6 18)\n18 - 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 * 3) - (6 - 2) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 * 24 = 24 (left: 24)\nAnswer: ((2 * 6) * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n35 - 11 = 24 (left: 24)\nAnswer: ((6 * 6) / 6) + (36 - 11) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n18 - 4 = 14 (left: 2 14)\n14 + 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 6) - 4) + 2 + 8 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: ((6 + 6) * 6) / 6 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "27 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 3 * 9 = 27 (left: 27 5) -> 27 + 5 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with the input of -6."
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15 30"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with the input of -6."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of -6."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 * 4 = 16 (left: 16) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "15"
                }
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15 30"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30) -> 15 - 30 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "11 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "There are no possible next steps with the input of -6."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "16"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "-6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no possible next steps with the input -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "15"
                }
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> No possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15 30"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30) -> 15 - 30 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of -6."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 + 4 = 8 ("
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no more possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30) -> Possible next steps: -> There are no more possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "16"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 * 4 = 16 (left: 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 3 * 9 = 27 (left: 27 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "27 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 3 * 9 = 27 (left: 27 5) -> 27 - 5 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "15"
                }
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> There are no possible next steps with the input 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15 30"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30) -> 30 - 15 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "4 + 4 = 8 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "4 + 4 = 8 ("
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -6."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 * 4 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "-6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 - 11 = -6 (left: -6) -> There are no possible next steps with the input -6. The input does not match any of the previous results.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "15"
                }
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 - 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15 30"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30) -> 15 / 30 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input -6. The input does not match any of the previous results."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no more possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 + 15 = 30 (left: 15 30) -> Possible next steps: -> There are no more possible next steps with the given input. -> No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 * 4 = 16 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 2 * 8 * 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 - 36 = -27 (left: -27)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "4 9"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1 "
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 + 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 + 1 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 - 32 = -23 (left: -23)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": ""
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 9 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-23"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1 "
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 - 1 = 3 (left: 3 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 1"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 - 1 = 3 (left: 3 1) -> 5 - 7 =",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 32 / 9 = 3.55555555556 (left: 3.55555555556)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 2 - 8 + 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 10 9"
                }
            },
            "Step 4": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 10 - 2 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "4 1 "
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1 "
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 + 1 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 1"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 - 1 = 3 (left: 3 1) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "28 + 8 = 36"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 28 + 8 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "-23"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 1 "
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 / 1 = 4 (left: 4 1)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 1"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 - 1 = 3 (left: 3 1) -> 3 + 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 * 8 * 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 32"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "288"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 28 * 8 = 224 (left: 224)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 10 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "2 9 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 9 8"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 1"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 - 1 = 3 (left: 3 1) -> 9 - 5 = 4 (left: 4 3)",
                "Pruning": null
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 / 1 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 - 1 = 6 (left: 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 9 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 is undefined (left: 0 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 /"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 9 / -> 9 / 8 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 / 1 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 + 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 is undefined (left: 0 7) -> 7 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "9 /"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 36"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "9 / 8 = 1.125"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 9 / -> 9 / 8 = 1.125 -> Input: 5 10 15 20",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 / 1 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 - 7 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 is undefined (left: 0 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 is undefined (left: 0 7) -> 7 - 0 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "9 /"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 /"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 9 / -> 9 / 9 = 1 (left: )",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "9 / 8 = 1.125"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 9 / -> 9 / 8 = 1.125 -> 9 - 8 = 1",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 / 1 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = undefined (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 is undefined (left: 0 7) -> 5 - 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "7 36"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "43"
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> 43 / 2 = 21.5 (left: 2) ",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "9 / 8 = 1.125"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 / 1 = 7 (left:"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "1 2"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 = Error (division by zero)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 7 / 0 is undefined (left: 0 7) -> 0 * 7 = 0 (left: 7)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "7 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "9 /"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0 7) -> 9 / -> 9 / 9 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "43"
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 + 36 = 43 (left: 43) -> 43 * 2 = 86 (left: 2)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "9 / 8 = 1.125"
                }
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 440"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "44 440"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 + 440 = 484 (left: 484)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "2 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 11 = 3.636 (left: 10 3.636)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "40 / 10 = "
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 =  -> 40 / 10 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.636 6.364"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 11 = 3.636 (left: 10 3.636) -> 10 - 3.636 = 6.364 (left: 3.636 6.364) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 - 44 = 396 (left: 396)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "40 / 10 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "40 / 10 = 4"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 =  -> 40 / 10 = 4 -> 2 * 2 = 4 (left: 4",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.75 3.636"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "44 440"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 - 440 = -396 (left: -396)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 11 40"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 10 = 110 (left: 110 40)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "40 / 10 = "
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 =  -> 40 / 10 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.636 6.364"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 11 = 3.636 (left: 10 3.636) -> 10 - 3.636 = 6.364 (left: 3.636 6.364) -> 3.636 + 6.364 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 / 440 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4400"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "Input: 5 10 15"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "44 440"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 * 440 = 19360 (left: 19360)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "2 10"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 10 + 11 = 21 (left: 21 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 3.636"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 11 = 3.636 (left: 10 3.636) -> 10 - 3.636 = 6.364 (left: 3.636 6.364)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.636 6.364"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 11 = 3.636 (left: 10 3.636) -> 10 - 3.636 = 6.364 (left: 3.636 6.364) -> 6.364 / 3.636 = 1.75 (left: 1.75 3.636)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 440 - 44 = 396 (left: 396)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Input: 5 10 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "40 / 10 = 4"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 =  -> 40 / 10 = 4 -> 10 / 40 = 0.25 (left: 0.25 4)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 440"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 * 440 = 4400 (left: 4400)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "44 440"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 + 440 = 484 (left: 484)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 11 40"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 = ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "40 / 10 = "
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 =  -> 40 / 10 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.636 6.364"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 11 = 3.636 (left: 10 3.636) -> 10 - 3.636 = 6.364 (left: 3.636 6.364) -> 6.364 - 3.636 = 2.728 (left: 2.728)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "2 10"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 + 440 = 484 (left: 484)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 * 440 = 4400 (left: 4400) -> 4400 / 400 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Input: 5 10 15"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 10"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "44 440"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 / 440 = 0.1 (left: 0.1)",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "10 48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "40 / 10 = "
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 =  -> 40 / 10 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.636 6.364"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 11 = 3.636 (left: 10 3.636) -> 10 - 3.636 = 6.364 (left: 3.636 6.364) -> 3.636 + 6.364 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "44 440"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "44 440"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 440 / 10 = 44 (left: 44 440) -> 44 - 440 = -396 (left: -396)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "40 / 10 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4400"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 * 440 = 4400 (left: 4400) -> 4 * 4 = 16 (left: 16 400)",
                "Pruning": null
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 4 = 3.25 (left: 3.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 16 = 0"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> There are no possible next steps as the result of 12 divided by 16 is not an integer. The division would result in a decimal or fraction.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 12 / 4 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "32 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "44"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> 44 / 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "44 / 2 = 22"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> 44 / 2 = 22 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 44 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number. -> There are no possible next steps for the input 44 as it is a single number. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 44 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "There are no possible next steps with the input of 44."
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 / 16 = 0"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> There are no valid next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 12 / 4 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "32 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 * 12 = 384 (left: 384)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps with the input of 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps with the input of 44."
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 44."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the input of 44."
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "20 12"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps as the result of 12 divided by 16 is not an integer. The division would result in a decimal or fraction."
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> There are no possible next steps as the result of 12 divided by 16 is not an integer. The division would result in a decimal or fraction. -> N/A",
                "Pruning": {
                    "Idx": "1.1",
                    "Pruned state": "32 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "32 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "44"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "44 / 2 = 22"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> 44 / 2 = 22 -> Input: 3 * 6 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> 44 / 2 = 22 -> Possible next steps: -> There are no more possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no possible next steps for the input 44 as it is a single number."
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number. -> There are no possible next steps for the input 44 as it is a single number. -> There are no possible next steps for the input 44 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 * 4 = 48 (left:"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.67"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.67 (left: 1.67) -> 1.67 / 2 = 0.84",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "32 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "44"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps for the input 44 as it is a single number."
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number. -> There are no possible next steps for the input 44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps for the input 44 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number. -> There are no possible next steps for the input 44 as it is a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There are no possible next steps with the input of 44."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "There are no possible next steps with the input of 44."
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44. -> 44 + 2 = 46 (left: 46)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "There are no possible next steps for the input 44 as it is a single number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "20 12"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 - 12 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 12 / 4 = 3 (left: 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps as the result of 12 divided by 16 is not an integer. The division would result in a decimal or fraction."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "32 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "44"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps for the input 44 as it is a single number."
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps for the input 44 as it is a single number. -> There are no possible next steps for the input 44 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 44."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44. -> There are no possible next steps with the input of 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "There are no more possible next steps for the given input."
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 + 12 = 44 (left: 44) -> 44 / 2 = 22 -> Possible next steps: -> There are no more possible next steps for the given input. -> There are no more possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> Possible next steps: -> There are no more possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "No input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "No input provided."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> Possible next steps: -> No input provided. -> No input provided. Please provide a list of numbers to continue the calculations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 6"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps for the input 3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> Possible next steps: -> 8 / 8 = 1 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "6 8"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 1"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> Possible next steps: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "Possible"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 6"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 27",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "No input provided."
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> Possible next steps: -> No input provided. -> There are no possible next steps since no input was provided.",
                "Pruning": null
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 2 * (4 + (12 - 9)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (12 - 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (12 - 9) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (12 - 9) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 2 * (4 + (12 - 9)) = 24"
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "44 13"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "31"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "44 13"
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 / 13 = 3.38 (left: 3.38)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "31"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> There are no valid operations that can be performed on the input 31 to reach the desired result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3.3846153846153846 - 2 = 1.3846153846153846"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 / 13 = 3.3846153846153846 (left: 3.3846153846153846) -> 3.3846153846153846 - 2 = 1.3846153846153846 -> 3.3846153846153846 * 2 = 6.769230769230769 (left: 1.3846153846153846 6.769230769230769)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "44 13"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "31 is a prime number, so there are no possible next steps for this number."
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps for this number. -> 31 is a prime number, so there are no possible next steps for this number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 / 4 = 2.75 (left: 2.75 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "44 13"
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 / 13 = 3.3846153846153846 (left: 3.3846153846153846)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3.38"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 / 13 = 3.38 (left: 3.38) -> 3.38 - 2 = 1.38 (left: 1.38)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "57"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "57"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57) -> 5 * 7 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "31 - 2 = 29"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "44 13"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "57"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57) -> 57 - 5 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "31"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "31 + 2 = 33"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 + 2 = 33 -> 31 - 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "44 13"
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3.3846153846153846"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 / 13 = 3.3846153846153846 (left: 3.3846153846153846) -> 3.3846153846153846 - 2 = 1.3846153846153846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "31 + 2 = 33"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 + 2 = 33 -> 2 - 31 = -29 (left: -29 33)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 11 13"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "44 13"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "31 + 2 = 33"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 + 2 = 33 -> 2 * 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 11 + 4 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "44 13"
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "31"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "57"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57) -> 57 / 5 = 11.4 (left: 11.4)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "There are no valid operations that can be performed on the input 31 to reach the desired result."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "44 13"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "31"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> Sorry, there seems to be a mistake in the input. Please provide a valid input for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "31 + 2 = 33"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> 31 + 2 = 33 -> 2 + 31 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 11 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "44 13"
                }
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "57"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 + 13 = 57 (left: 57) -> 57 / 5 = 11.4 (left: 11.4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "57"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "There are no valid operations that can be performed on the input 31 to reach the desired result."
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 - 13 = 31 (left: 31) -> There are no valid operations that can be performed on the input 31 to reach the desired result. -> None",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "3.3846153846153846 - 2 = 1.3846153846153846"
                }
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one possible next step: 4.33."
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one possible next step: 4.33. -> 4.33 * 2 = 8.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 14 20.8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 20.8 + 8 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 20.8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 6 - 20.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 - 3.46666666667 = 2.53333333333 (left: 2.53333333333)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 3.46666666667"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 + 3.46666666667 \u2248 9.467 (left: 9.467)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "6 20.8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.6"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps for the input 2.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with the input of 2.6 in the context of the previous calculations provided."
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 14 20.8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 20.8 + 8 = 28.8 (left: 14 28.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 20.8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 6 + 20.8 = 26.8 (left: 26.8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps for the input 2.6."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 * 3.46666666667 = 20.8 (left: 3.46666666667 20.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 * 3.46666666667 = 20.8 (left: 20.8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 2.6."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "5 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.6"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 2.6."
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps for the input 2.6. -> There are no possible next steps for the input 2.6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 14 20.8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 20.8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 - 3.46666666667 = 2.53333333333 (left: 2.533333333",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps for the input 2.6."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 + 3.46666666667 \u2248 9.46666666667 (left: 9.46666666667)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 - 20.8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.33"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one possible next step: 4.33."
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one possible next step: 4.33. -> There is only one possible next step: 4.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 14 20.8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 8 + 14 = 22 (left: 22 20.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 20.8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 6 + 20.8 = 26.8 (left: 26.8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 - 3.46666666667 = 2.53333333333 (left: 2",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "10 20"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 * 3.46666666667 = 20.8 (left: 20.8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "5 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4.33"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one possible next step: 4.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 14 20.8"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 8 + 14 = 22 (left: 22 20.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 20.8"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 6 + 20.8 = 26.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 * 3.46666666667 = 20.8 (left: 20.8)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "20.8 + 8 ="
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6 3.46666666667"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 13 / 5 = 2.6 (left: 2.6) -> There are no possible next steps with the input of 2.6 in the context of the previous calculations provided. -> 2.6 * 8 = 20.8 (left: 8 14 20.8) -> 14 - 8 = 6 (left: 6 20.8) -> 20.8 / 6 = 3.46666666667 (left: 6 3.46666666667) -> 6 + 3.46666666667 = 9.46667 (left: 9.46667)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 1364481,
        "output_tokens": 440897.38888888666,
        "total_cost": 1.34358658333333
    }
}