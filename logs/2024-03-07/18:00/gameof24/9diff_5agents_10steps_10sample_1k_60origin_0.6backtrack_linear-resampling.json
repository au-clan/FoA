{
    "900": {
        "puzzle": "4 5 6 10",
        "Step 0": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 5 10)",
                "5 + 6 = 11 (left: 4 11 10)",
                "6 / 5 = 1.2 (left: 4 1.2 10)",
                "4 * 5 = 20 (left: 6 10 20)",
                "6 - 4 = 2 (left: 2 5 10)"
            ],
            "Evaluation": [
                2.001,
                3.0,
                3.0,
                22.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.2",
                "2 <- 0.3",
                "3 <- 0.0",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20) || 10 * 2 = 20 (left: 6 20)",
                "6 / 5 = 1.2 (left: 4 1.2 10) || 10 + 4 = 14 (left: 4 14)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20)",
                "6 / 4 = 1.5 (left: 1.5 5 10) || 10 - 1.5 = 8.5 (left: 8.5 10)",
                "5 + 6 = 11 (left: 4 11 10) || 11 / 4 = 2.75 (left: 2.75 10)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                20.002,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 0.3"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 6 = 11 (left: 4 11 10)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 20 / 4 = 5 (left: 5 10 20)",
                "10 - 4 = 6 (left: 5 6 6)",
                "4 * 5 = 20 (left: 6 10 20) || 20 - 10 = 10 (left: 6 10 20)",
                "4 * 5 = 20 (left: 6 10 20) || 6 * 10 = 60 (left: 60 20)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                22.0,
                3.0,
                0.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- 2.0",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 3": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20)",
                "4 * 5 = 20 (left: 6 10 20)",
                "5 + 6 = 11 (left: 4 11 10) || 4 * 11 = 44 (left: 10 44)",
                "6 / 4 = 1.5 (left: 1.5 5 10) || 10 - 1.5 = 8.5 (left: 8.5 10) || 8.5 * 10 = 85 (left: 85)",
                "6 / 4 = 1.5 (left: 1.5 5 10) || 10 - 1.5 = 8.5 (left: 8.5 10) || 3 + 9 = 12 (left: 12 27)"
            ],
            "Evaluation": [
                60.0,
                2.001,
                2.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 1.0",
                "2 <- 3.1",
                "3 <- 3.0",
                "4 <- 2.2"
            ]
        },
        "Step 4": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20)",
                "4 * 5 = 20 (left: 6 10 20) || 10 * 2 = 20 (left: 6 20) || 20 / 6 = 3.33 (left: 3.33)",
                "4 * 5 = 20 (left: 6 10 20) || 20 + 6 = 26 (left: 10 26)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 4 * 5 = 20 (left: 20)",
                "10 - 4 = 6 (left: 5 6 6) || Possible next steps:"
            ],
            "Evaluation": [
                41.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 0.3",
                "2 <- 4.0",
                "3 <- 3.0",
                "4 <- 4.0"
            ]
        },
        "Step 5": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 20 / 5 = 4 (left: 4)",
                "4 * 5 = 20 (left: 6 10 20) || 20 - 10 = 10 (left: 6 10 10)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 3 * 9 = 27 (left: 27 27)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || Input: 3 9 27",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 20 / 5 = 4 (left: 4 20)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                0.003,
                21.0,
                20.0
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 4.0",
                "4 <- 2.2"
            ]
        },
        "Step 6": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 20 / 5 = 4 (left: 4 20)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 20 / 5 = 4 (left: 4)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 9 / 3 = 3 (left: 3 27)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 5 * 20 = 100 (left: 100)",
                "10 - 4 = 6 (left: 5 6 6) || Possible next steps:"
            ],
            "Evaluation": [
                21.0,
                0.003,
                0.003,
                40.001,
                20.0
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 6.4",
                "2 <- 6.3",
                "3 <- 6.3",
                "4 <- 2.0"
            ]
        },
        "Step 7": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 20 - 5 = 15 (left: 15)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 3 * 6 = 18 (left: 18 18)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 20 - 5 = 15 (left: 15)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 5 * 20 = 100 (left: 100)",
                "5 + 6 = 11 (left: 4 11 10) || 11 - 10 = 1 (left: 1 10)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.001,
                1.001,
                1.002
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 6.4",
                "2 <- 7.1",
                "3 <- 6.3",
                "4 <- 4.0"
            ]
        },
        "Step 8": {
            "steps": [
                "5 + 6 = 11 (left: 4 11 10) || 11 - 10 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || Possible next steps:",
                "5 + 6 = 11 (left: 4 11 10) || 11 - 10 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || Input: 3 9 27",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 3 + 9 = 12 (left: 12 27)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 3.0",
                "2 <- 7.1",
                "3 <- 6.3",
                "4 <- 7.1"
            ]
        },
        "Step 9": {
            "steps": [
                "5 + 6 = 11 (left: 4 11 10) || 11 - 10 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left",
                "5 + 6 = 11 (left: 4 11 10) || 11 - 10 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 20) || 20 / 4 = 5 (left: 5 20) || 20 - 5 = 15 (left: 15)",
                "5 + 6 = 11 (left: 4 11 10) || 11 - 10 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)"
            ]
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Step 0": {
            "steps": [
                "7 - 4 = 3 (left: 1 2 3)",
                "2 * 4 = 8 (left: 1 8 7)",
                "4 - 2 = 2 (left: 1 2 7)",
                "7 - 2 = 5 (left: 1 4 5)",
                "4 + 7 = 11 (left: 1 2 11)"
            ],
            "Evaluation": [
                1.0,
                1.002,
                1.002,
                21.0,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "1 * 2 = 2 (left: 2 4 7)",
                "4 / 2 = 2 (left: 1 2 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 1 = 4 (left: 4 4)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5)"
            ],
            "Evaluation": [
                1.002,
                2.001,
                1.002,
                0.003,
                40.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.3",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 - 1 = 4 (left: 4)",
                "7 - 2 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 4 5)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 + 5 = 6"
            ],
            "Evaluation": [
                0.002,
                3.0,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.3",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || Possible next steps:"
            ],
            "Evaluation": [
                3.0,
                2.001,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.1",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.4"
            ]
        },
        "Step 4": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 + 5 = 6",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 + 5 = 6"
            ],
            "Evaluation": [
                3.0,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 2.1",
                "4 <- 1.4"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 - 1 = 4 (left: 4)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 + 5 = 6",
                "7 - 2 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 4 5) || 4 * 5 = 20 (left: 20)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.4",
                "2 <- 0.3",
                "3 <- 3.0",
                "4 <- 2.1"
            ]
        },
        "Step 6": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 - 1 = 4 (left: 4)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 1 = 7 (left: 7 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 4 5) || 3 + 9 = 12 (left: 12 27)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                22.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 6.2",
                "2 <- 6.2",
                "3 <- 6.2",
                "4 <- 6.2"
            ]
        },
        "Step 7": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 4 - 5 = -1 (left: -1)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || Input: 10 3",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 6.2",
                "2 <- 2.1",
                "3 <- 6.2",
                "4 <- 6.2"
            ]
        },
        "Step 8": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 4 / 5 = 0.8 (left: 0.8)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 10 / 3 = 3.33 (left: 3.33",
                "7 - 2 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 - 4 = 1 (left: 1)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 4 / 5 = 0.8 (left: 0.8)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 6.2",
                "2 <- 6.2",
                "3 <- 6.2",
                "4 <- 6.2"
            ]
        },
        "Step 9": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7) || 8 - 1 = 7 (left: 7 7)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 3 - 10 = -7 (left: -7)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 4 - 5 = -1 (left: -1)",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || Input: 10 3",
                "7 - 2 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 5) || 5 / 4 = 1.25 (left: 1.25)"
            ]
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Step 0": {
            "steps": [
                "11 - 2 = 9 (left: 2 5 9)",
                "5 * 2 = 10 (left: 10 8 11)",
                "8 + 2 = 10 (left: 5 10 11)",
                "2 * 5 = 10 (left: 10 8 11)",
                "8 + 11 = 19 (left: 2 5 19)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                2.001,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- 0.2",
                "3 <- 0.2",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 * 2 = 10 (left: 10 8 11)",
                "8 + 11 = 19 (left: 2 5 19) || 19 - 5 = 14 (left: 2 14)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 10)",
                "8 - 5 = 3 (left: 2 3 11)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                20.002,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 - 11 = -5 (left: -5)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / ",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 - 11 = -5 (left: -5)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "2 * 5 = 10 (left: 10 8 11)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.001,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83)",
                "11 - 5 = 6 (left: 2 6 8)",
                "2 * 5 = 10 (left: 10 8 11) || 10 / 8 = 1.25 (left: 1.25 11)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                1.002,
                1.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 2.4",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 4": {
            "steps": [
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454)",
                "2 * 5 = 10 (left: 10 8 11) || 10 / 8 = 1.25 (left: 1.25 11)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83 11)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                1.002,
                0.003,
                2.0
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 4.4",
                "2 <- 1.2",
                "3 <- 4.2",
                "4 <- 3.4"
            ]
        },
        "Step 5": {
            "steps": [
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83 11) || 1.83 * 11 = 20.13 (left: 20.13)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83 11) || 11 / 1.83 = 6.01 (left: 6.01)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454)",
                "2 * 5 = 10 (left: 10 8 11) || 10 / 8 = 1.25 (left: 1.25 11) || Input: 3 7",
                "2 * 5 = 10 (left: 10 8 11) || 10 / 8 = 1.25 (left: 1.25 11) || 11 / 1.25 = 8.8 (left: 8.8)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.002,
                2.001
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 5.4",
                "2 <- 4.4",
                "3 <- 5.4",
                "4 <- 4.4"
            ]
        },
        "Step 6": {
            "steps": [
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83 11) || 11 - 1.83 = 9.17 (left: 9.17)",
                "2 * 5 = 10 (left: 10 8 11) || 8 + 11 = 19 (left: 10 19)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83 11) || 11 / 1.83 = 6.01 (left: 6.01)",
                "2 * 5 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83 11) || 11 / 1.83 = 6.01 (left: 6.01)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.002,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 4.4",
                "2 <- 6.4",
                "3 <- 6.3",
                "4 <- 4.2"
            ]
        },
        "Step 7": {
            "steps": [
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83 11) || 11 / 1.83 = 6.01 (left: 6.01)",
                "2 * 5 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11)",
                "2 * 5 = 10 (left: 10 8 11) || 10 - 8 = 2 (left: 2 11)",
                "2 * 5 = 10 (left: 10 8 11) || 10 / 8 = 1.25 (left: 1.25 11) || 11 / 1.25 = 8.8 (left: 8.8)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 7.1",
                "2 <- 7.1",
                "3 <- 6.3",
                "4 <- 7.1"
            ]
        },
        "Step 8": {
            "steps": [
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "2 * 5 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11) || 80 / 11 = 7.272727272727273 (left: 7.272727272727273)",
                "2 * 5 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11) || 80 - 11 = 69 (left: 69)",
                "2 * 5 = 10 (left: 10 8 11) || 8 + 11 = 19 (left: 10 19)",
                "2 * 5 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11) || 80 / 11 = 7.27 (left: 7.27)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 6.3",
                "2 <- 1.2",
                "3 <- 0.4",
                "4 <- 6.4"
            ]
        },
        "Step 9": {
            "steps": [
                "11 - 5 = 6 (left: 2 6 8) || 8 / 2 = 4 (left: 6 4)",
                "2 * 5 = 10 (left: 10 8 11) || 10 - 8 = 2 (left: 2 11)",
                "8 + 2 = 10 (left: 5 10 11) || 11 - 5 = 6 (left: 6 11) || 6 / 11 = 0.545454545 (left: 0.545454545)",
                "8 + 11 = 19 (left: 2 5 19) || 19 - 2 = 17 (left: 5 17)",
                "2 * 5 = 10 (left: 10 8 11) || 10 * 8 = 80 (left: 80 11)"
            ]
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Step 0": {
            "steps": [
                "13 + 3 = 16 (left: 4 4 16)",
                "4 / 3 = 1 (left: 1 4 13)",
                "3 * 4 = 12 (left: 12 4 13)",
                "3 * 4 = 12 (left: 4 12 13)",
                "13 - 3 = 10 (left: 4 4 10)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                1.002,
                0.003,
                40.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10)",
                "3 * 4 = 12 (left: 4 12 13)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)"
            ],
            "Evaluation": [
                60.0,
                2.001,
                60.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 1.3",
                "3 <- 0.4",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.001,
                40.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || Input: 10 20 30",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.001,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.0",
                "2 <- 0.4",
                "3 <- 2.3",
                "4 <- 1.0"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "13 + 3 = 16 (left: 4 4 16) || 3 * 9 = 27 (left: 27",
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 2.5 4) || 4 - 2.5 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 4.0",
                "2 <- 1.0",
                "3 <- 1.3",
                "4 <- 4.0"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (4 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (10 - (13 - 3)) = 24"
            ],
            "Evaluation": [
                0.003,
                0.002,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 5.4",
                "2 <- 5.2",
                "3 <- 5.4",
                "4 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 - 10 =",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (4 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 5.4",
                "2 <- 5.2",
                "3 <- 6.4",
                "4 <- 6.4"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (13 - 3) - (4 - 4) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 7.4",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 5.3"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 7.4",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 6.4"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)"
            ]
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Step 0": {
            "steps": [
                "8 + 9 = 17 (left: 6 7 17)",
                "7 + 8 = 15 (left: 6 9 15)",
                "6 * 7 = 42 (left: 8 9 42)",
                "6 * 7 = 42 (left: 8 9 42)",
                "8 + 9 = 17 (left: 6 7 17)"
            ],
            "Evaluation": [
                0.002,
                3.0,
                2.0,
                1.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- INIT",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "6 * 7 = 42 (left: 8 9 42) || 9 * 8 = 72 (left: 72 42)",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 6 = 9 (left: 6 9)",
                "9 - 6 = 3 (left: 3 7 8)",
                "6 * 7 = 42 (left: 8 9 42) || 8 + 9 = 17 (left: 17 42)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                2.001,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15)",
                "8 - 6 = 2 (left: 2 7 9)",
                "9 - 6 = 3 (left: 3 7 8) || 7 / 3 = 2 (left: 2 8)",
                "8 + 9 = 17 (left: 6 7 17)",
                "8 - 6 = 2 (left: 2 7 9)"
            ],
            "Evaluation": [
                2.001,
                1.001,
                0.003,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.1",
                "3 <- 2.0",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15)",
                "9 - 7 = 2 (left: 2 6 8)",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 0.857 * 8 = 6.856 (left: 6.856 9)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 6 = 9 (left: 6 9)",
                "6 * 7 = 42 (left: 8 9 42)"
            ],
            "Evaluation": [
                21.001,
                2.001,
                2.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 0.1",
                "2 <- 2.3",
                "3 <- 3.1",
                "4 <- 3.0"
            ]
        },
        "Step 4": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15) || 9 - 6 = 3 (left: 3 15)",
                "7 + 8 = 15 (left: 6 9 15) || 15 / 3 = 5 (left: 5 9)",
                "8 + 9 = 17 (left: 6 7 17) || 7 * 17 = 119 (left: 6 119)",
                "9 - 7 = 2 (left: 2 6 8) || 8 - 2 = 6 (left: 6 8)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 6 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.1",
                "2 <- 3.0",
                "3 <- 3.2",
                "4 <- 3.0"
            ]
        },
        "Step 5": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15) || 9 * 6 = 54 (left: 54)",
                "7 + 8 = 15 (left: 6 9 15) || Possible next steps",
                "7 + 8 = 15 (left: 6 9 15) || Possible next steps:",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 0.857 * 8 = 6.856 (left: 6.856 9) || 6.856 / 9 = 0.761777777777778 (left: 0.761777777777778)",
                "7 + 8 = 15 (left: 6 9 15) || Input: 3 7 21"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 3.0",
                "2 <- 3.0",
                "3 <- 3.0",
                "4 <- 3.0"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 7 = 2 (left: 2 6 8) || 6 * 8 = 48 (left: 2 48)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 9 = 6 (left: 6 15)",
                "7 + 8 = 15 (left: 6 9 15) || 9 / 3 = 3 (left: 3 15)",
                "7 + 8 = 15 (left: 6 9 15) || 9 - 6 = 3 (left: 3 15)",
                "7 + 8 = 15 (left: 6 9 15) || 15 / 3 = 5 (left: 5 15)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 3.0",
                "2 <- 3.1",
                "3 <- 3.2",
                "4 <- 3.0"
            ]
        },
        "Step 7": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15) || 9 / 6 = 1.5 (left: 1.5)",
                "7 + 8 = 15 (left: 6 9 15) || Input",
                "9 - 7 = 2 (left: 2 6 8) || 8 - 2 = 6 (left: 6 8)",
                "6 / 7 = 0.857 (left: 0.857 8 9) || 0.857 * 8 = 6.856 (left: 6.856 9) || 6.856 * 9 = 61.704 (left: 9)",
                "7 + 8 = 15 (left: 6 9 15) || Input: 3 5 8 13"
            ],
            "Evaluation": [
                0.001,
                0.003,
                1.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 7.2",
                "2 <- 7.2",
                "3 <- 3.0",
                "4 <- 2.3"
            ]
        },
        "Step 8": {
            "steps": [
                "7 + 8 = 15 (left: 6 9 15) || 9 - 6 = 3 (left: 3 15)",
                "9 - 7 = 2 (left: 2 6 8) || 8 - 2 = 6 (left: 6 8) || 8 / 6 = 1.33 (left: 1.33)",
                "9 - 7 = 2 (left: 2 6 8) || 8 - 2 = 6 (left: 6 8) || 6 - 8 = -2 (left: -2)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 6 = 9 (left: 9)",
                "8 + 9 = 17 (left: 6 7 17) || 7 * 17 = 119 (left: 6 119)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.0,
                0.001,
                1.002
            ],
            "Resampling": [
                "0 <- 8.4",
                "1 <- 7.2",
                "2 <- 3.0",
                "3 <- 3.0",
                "4 <- 3.1"
            ]
        },
        "Step 9": {
            "steps": [
                "8 + 9 = 17 (left: 6 7 17) || 7 * 17 = 119 (left: 6 119) || 6 + 119 = 125 (left: 125)",
                "9 - 7 = 2 (left: 2 6 8) || 8 - 2 = 6 (left: 6 8) || 8 / 6 = 1.33 (left: 1.33)",
                "7 + 8 = 15 (left: 6 9 15) || Possible next steps:",
                "7 + 8 = 15 (left: 6 9 15) || 9 - 6 = 3 (left: 3 15)",
                "9 - 7 = 2 (left: 2 6 8) || 2 * 6 = 12 (left: 12 8)"
            ]
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Step 0": {
            "steps": [
                "13 - 1 = 12 (left: 11 11 12)",
                "11 - 1 = 10 (left: 10 11 13)",
                "11 * 1 = 11 (left: 11 11 13)",
                "11 - 1 = 10 (left: 10 11 13)",
                "13 - 11 = 2 (left: 1 11 2)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "11 / 1 = 11 (left: 11 11 13)",
                "13 - 11 = 2 (left: 1 11 2)",
                "1 * 11 = 11 (left: 11 11 13)",
                "11 / 1 = 11 (left: 11 11 13)",
                "13 - 1 = 12 (left: 11 11 12)"
            ],
            "Evaluation": [
                0.003,
                21.001,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 1.3",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 2) || 11 - 1 = 10 (left: 10 2)",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 11 2)",
                "11 / 1 = 11 (left: 11 11 13) || 11 * 11 = 121 (left: 13 121)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2)",
                "11 - 1 = 10 (left: 10 11 13)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 1.1",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 2) || 11 - 1 = 10 (left: 10 2)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 2 11)",
                "13 - 11 = 2 (left: 1 11 2) || 11 - 1 = 10 (left: 2 10)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2)",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 11 2)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                3.0,
                1.001,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- INIT",
                "3 <- 1.1",
                "4 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "11 / 1 = 11 (left: 11 11 13)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2)",
                "13 - 1 = 12 (left: 11 11 12)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2)",
                "11 / 1 = 11 (left: 11 11 13) || 11 * 11 = 121 (left: 13 121)"
            ],
            "Evaluation": [
                1.002,
                0.002,
                1.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 4.2",
                "2 <- 4.0",
                "3 <- 3.3",
                "4 <- 1.1"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 2) || 11 - 1 = 10 (left: 10 2)",
                "13 - 1 = 12 (left: 11 11 12) || 11 / 11 = 1 (left: 1 12)",
                "11 / 1 = 11 (left: 11 11 13) || 11 - 11 = 0 (left: 0 13)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22)",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 11 2)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.001,
                20.001,
                0.002
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 3.4",
                "2 <- 5.3",
                "3 <- 5.3",
                "4 <- 5.3"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 / 2 = 11 (left: 11)",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 11 2) || 11 / 2 = 5.5 (left: 5.5)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || There are no possible next steps with the number 22 as there are no other numbers provided for arithmetic operations.",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 / 2 = 11",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 5 + 9 = 14 (left: 14 3)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                0.002,
                2.0
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 1.1",
                "2 <- 5.3",
                "3 <- 5.3",
                "4 <- 5.3"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || None, since there is only one number.",
                "13 - 11 = 2 (left: 1 11 2) || 11 / 1 = 11 (left: 11 2)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 * 8 = 176 (left: 8)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || No possible next steps as there is only one number in the input.",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                40.001,
                0.001
            ],
            "Resampling": [
                "0 <- 7.3",
                "1 <- 7.3",
                "2 <- 7.3",
                "3 <- 7.3",
                "4 <- 7.3"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24 || 22 / 2 = 11 (left: 11)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24 || 22 * 2 = 44 (left: 8 14 44)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24 || 22 / 2 = 11 (left: 11 14 22)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24 || 14 + 2 = 16 (left: 16 8)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24 || 22 * 2 = 44 (left: 8 14 44)"
            ],
            "Evaluation": [
                2.0,
                0.003,
                40.001,
                1.001,
                60.0
            ],
            "Resampling": [
                "0 <- 8.0",
                "1 <- 6.4",
                "2 <- 7.3",
                "3 <- 5.3",
                "4 <- 8.4"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24 || 22 * 2 = 44 (left: 8 14 44) || 8 * 14 = 112 (left: 112 44)",
                "13 - 11 = 2 (left: 1 11 2) || 11 - 1 = 10 (left: 2 10) || 2 + 10 = 12 (left: 12)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24 || 22 / 2 = 11 (left: 11 2)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 * 2 = 44 (left: 44)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2) || 11 * 2 = 22 (left: 22) || 22 + 2 = 24 || 22 - 2 = 20 (left: 20 24)"
            ]
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Step 0": {
            "steps": [
                "10 + 1 = 11 (left: 8 11 11)",
                "8 + 1 = 9 (left: 9 10 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "11 - 1 = 10 (left: 8 10 10)",
                "10 - 1 = 9 (left: 8 9 11)"
            ],
            "Evaluation": [
                2.001,
                1.001,
                2.001,
                2.001,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "8 - 1 = 7 (left: 7 10 11)",
                "10 - 1 = 9 (left: 8 9 11) || 11 - 8 = 3 (left: 3 9 11)",
                "10 + 1 = 11 (left: 8 11 11) || 8 - 11 = -3 (left: -3 11)",
                "10 + 1 = 11 (left: 8 11)",
                "1 * 8 = 8 (left: 8 10 11)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                2.001,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.4",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "10 + 1 = 11 (left: 8 11 11) || 8 - 11 = -3 (left: -3 11) || -3 - 11 = -14 (left: -14)",
                "10 - 1 = 9 (left: 8 9 11) || 8 * 9 = 72 (left: 11 72)",
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110)",
                "10 - 1 = 9 (left: 8 9 11)",
                "1 * 10 = 10 (left: 8 10 11)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                21.0,
                2.001,
                3.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- INIT",
                "2 <- 2.3",
                "3 <- INIT",
                "4 <- 0.2"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 10 = 10 (left: 8 10 11) || 10 + 11 = 21 (left: 8 21)",
                "1 * 8 = 8 (left: 8 10 11)",
                "10 - 1 = 9 (left: 8 9 11) || 9 * 11 = 99 (left: 8 99)",
                "10 - 1 = 9 (left: 1 9 11)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80)"
            ],
            "Evaluation": [
                0.002,
                2.001,
                0.003,
                2.001,
                40.001
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 2.3",
                "3 <- 3.4",
                "4 <- 3.4"
            ]
        },
        "Step 4": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 90)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 - 10 =",
                "10 - 1 = 9 (left: 8 9 11) || 9 - 8 = 1 (left: 1 9 11)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 + 80 = 90 (left: 90)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 10 - 80 = -70 (left: -70)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 3.4",
                "3 <- 3.4",
                "4 <- 3.4"
            ]
        },
        "Step 5": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8 80)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 - 10 = 70 (left: 70)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 - 10 = 70 (left: 70)"
            ],
            "Evaluation": [
                21.0,
                0.002,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 5.0",
                "2 <- 2.2",
                "3 <- 2.4",
                "4 <- 5.0"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8 80) || 80 / 8 = 10 (left: 10)",
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 5 * 25 = 125 (left: 10)",
                "1 * 10 = 10 (left: 8 10 11) || 8 * 10 = 80 (left: 80 11)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8 80) || 80 - 8 = 72 (left: 72)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                20.001,
                60.0,
                0.0
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 5.0",
                "2 <- 6.3",
                "3 <- 6.3",
                "4 <- 5.0"
            ]
        },
        "Step 7": {
            "steps": [
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 8 * 2 = 16 (left: 16 110)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8 80) || 8 + 80 = 88 (left: 88)",
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 110 - 8 = 102 (left: 102)",
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 8 * 110 = 880 (left: 880)",
                "11 - 1 = 10 (left: 8 10 10) || 10 * 8 = 80 (left: 10 80) || 80 / 10 = 8 (left: 8 80) || 80 + 8 = 88 (left: 88)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 6.3",
                "2 <- 6.2",
                "3 <- 6.2",
                "4 <- 6.2"
            ]
        },
        "Step 8": {
            "steps": [
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 110 / 8 = 13.75 (left: 13.75)",
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 110 - 8 = 102 (left: 8 102)",
                "1 * 10 = 10 (left: 8 10 11) || 8 * 10 = 80 (left: 80 11) || 80 - 11 = 69 (left: 69)",
                "1 * 10 = 10 (left: 8 10 11) || 8 * 10 = 80 (left: 80 11) || 80 * 11 = 880 (left: 880)",
                "1 * 10 = 10 (left: 8 10 11) || 8 * 10 = 80 (left: 80 11) || 80 / 11 \u2248 7.27 (left: 7.27)"
            ],
            "Evaluation": [
                0.003,
                20.0,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 8.1",
                "1 <- 0.0",
                "2 <- 8.1",
                "3 <- 6.3",
                "4 <- 8.1"
            ]
        },
        "Step 9": {
            "steps": [
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 110 - 8 = 102 (left: 8 102) || 8 * 102 = 816 (left: 816)",
                "10 + 1 = 11 (left: 8 11 11) || 3 + 6 = ",
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 110 - 8 = 102 (left: 8 102) || 102 - 8 = 94 (left: 94)",
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 8 * 110 = 880 (left: 880)",
                "1 * 8 = 8 (left: 8 10 11) || 10 * 11 = 110 (left: 8 110) || 110 - 8 = 102 (left: 8 102) || 102 / 8 = 12.75 (left: 12.75)"
            ]
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Step 0": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3)",
                "6 / 3 = 2 (left: 2 6 9)",
                "6 / 2 = 3 (left: 3 3 9)",
                "6 / 2 = 3 (left: 3 3 9)",
                "9 - 6 = 3 (left: 2 3 3)"
            ],
            "Evaluation": [
                1.001,
                0.003,
                1.001,
                1.002,
                2.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3) || 3 + 3 = 6 (left: 2 6)",
                "9 / 3 = 3 (left: 2 6 9)",
                "9 / 3 = 3 (left: 2 3 6)",
                "6 / 2 = 3 (left: 3 3 9) || 9 / 3 = 3 (left: 3 9)",
                "9 - 6 = 3 (left: 2 3 3) || 3 * 2 = 6 (left: 3 6)"
            ],
            "Evaluation": [
                1.001,
                1.002,
                22.0,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "9 / 3 = 3 (left: 2 3 6) || Possible",
                "9 / 3 = 3 (left: 2 3 6) || 6",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6)"
            ],
            "Evaluation": [
                20.002,
                0.003,
                0.003,
                1.0,
                41.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 / 3 = 2 (left: 2)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "9 / 3 = 3 (left: 2 3 6) || 7 - 3 = 4 (left: 4",
                "9 / 3 = 3 (left: 2 6 9) || 9 - 6 = 3 (left: 2 3)",
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.002,
                0.002,
                20.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 0.2",
                "3 <- 3.4",
                "4 <- 2.4"
            ]
        },
        "Step 4": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0) || There are no possible next steps as there are no numbers given in the input.",
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0) || No possible next steps as there is no input given.",
                "6 / 2 = 3 (left: 3 3 9) || 10 - 5 = 5 (left: 5",
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0) || There are no possible next steps with the input 0.",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.0",
                "2 <- 1.2",
                "3 <- 2.0",
                "4 <- 2.4"
            ]
        },
        "Step 5": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 / 3 = 2 (left: 2)",
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6)",
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                20.0,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 5.2",
                "4 <- 3.4"
            ]
        },
        "Step 6": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "9 / 3 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0) || There are no possible next steps since there is no input provided."
            ],
            "Evaluation": [
                60.0,
                0.001,
                20.001,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 6.0",
                "1 <- 6.2",
                "2 <- 6.2",
                "3 <- 6.0",
                "4 <- 6.2"
            ]
        },
        "Step 7": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3) || 3 + 2 = 5 (left: 5)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3) || There are no possible next steps with the input of 3."
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.003,
                20.0
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 7.4",
                "2 <- 6.2",
                "3 <- 6.0",
                "4 <- 6.0"
            ]
        },
        "Step 8": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps as there are no other numbers provided to perform operations with.",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || There are no possible next steps with the given input of 18.",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3) || 3 - 8 = -5 (left: -5)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 + 2 = 20 (left: 20)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                0.002,
                0.0
            ],
            "Resampling": [
                "0 <- 8.2",
                "1 <- 8.2",
                "2 <- 6.2",
                "3 <- 6.0",
                "4 <- 8.2"
            ]
        },
        "Step 9": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 8 * 16 = 128 (left: 128)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 16 / 8 = 2 (left: 2)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3) || 8 / 3 = 2.67 (left: 2.67)",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || No possible next steps with the input 18.",
                "9 / 3 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 * 6 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 16 - 8 = 8 (left: 8)"
            ]
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Step 0": {
            "steps": [
                "5 + 9 = 14 (left: 1 3 14)",
                "3 + 5 = 8 (left: 1 8 9)",
                "9 - 1 = 8 (left: 3 5 8)",
                "9 - 5 = 4 (left: 1 3 4)",
                "5 + 1 = 6 (left: 3 6 9)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                3.0,
                41.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.0",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 + 1 = 4 (left: 4 4)",
                "5 + 9 = 14 (left: 1 3 14) || 3 - 1 = 2 (left: 2 14)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                21.0,
                22.0,
                22.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 + 1 = 4 (left: 4 4)",
                "9 - 5 = 4 (left: 1 3 4)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 3 - 4 = -1 (left: -1)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 1.4",
                "2 <- 2.1",
                "3 <- 1.3",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "3 + 5 = 8 (left: 1 8 9) || 8 / 1 = 8 (left: 8 9)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || Input: 5 10",
                "9 - 5 = 4 (left: 1 3 4) || 3 / 1 = 3 (left: 3 4)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                40.0,
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 3.4",
                "2 <- 3.2",
                "3 <- 1.2",
                "4 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 + 4 = 7 (left: 1 7)",
                "9 - 5 = 4 (left: 1 3 4) || 3 / 1 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)"
            ],
            "Evaluation": [
                20.0,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 3.2",
                "2 <- 0.3",
                "3 <- 4.0",
                "4 <- 3.4"
            ]
        },
        "Step 5": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 1 * 3 = 3 (left: 3 4) || 3 * 4 = 12 (left: 12)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 5 * 5 = 25 (left: 25)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4)",
                "9 - 5 = 4 (left: 1 3 4) || 3 + 4 = 7 (left: 1 7) || 7 - 1 = 6 (left: 6)",
                "9 - 5 = 4 (left: 1 3 4) || 3 / 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)"
            ],
            "Evaluation": [
                0.003,
                20.001,
                22.0,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 5.1",
                "1 <- 5.2",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- 3.2"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 5 * 5 = 25 (left: 25) || 25 - 8 = 17 (left: 8)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 / 3 = 1.33 (left: 1.33)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 1.2",
                "2 <- 5.1",
                "3 <- 5.2",
                "4 <- 6.4"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 3 / 4 = 0.75 (left: 0.75)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 3 / 4 = 0.75 (left: 0.75)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 5 * 5 = 25 (left: 25) || 25 * 2 = 50 (left: 50)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 3 - 4 = -1 (left: -1)"
            ],
            "Evaluation": [
                20.001,
                0.001,
                0.003,
                0.0,
                21.001
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 7.0",
                "2 <- 4.0",
                "3 <- 6.4",
                "4 <- 6.4"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 3 + 4 = 7 (left: 7)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 3 / 4 = 0.75 (left: 0.75) || 0.75 * 2 = 1.5",
                "9 - 5 = 4 (left: 1 3 4) || 3 + 4 = 7 (left: 1 7) || 7 / 1 = 7 (left: 7)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1) ",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 5 + 10 = 15 (left: 15)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.0,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 5.2",
                "2 <- 3.4",
                "3 <- 5.1",
                "4 <- 5.1"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 3 / 1 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 5 * 5 = 25 (left: 25) || 25 - 8 = 17 (left: 8)",
                "9 - 5 = 4 (left: 1 3 4) || 3 * 1 = 3 (left: 3 4) || 5 * 5 = 25 (left: 25) || 25 / 2 = 12.5 (left: 2)"
            ]
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Step 0": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)",
                "3 * 3 = 9 (left: 9 7 12)",
                "3 * 3 = 9 (left: 9 7 12)",
                "12 - 7 = 5 (left: 3 5 12)",
                "7 - 3 = 4 (left: 3 4 12)"
            ],
            "Evaluation": [
                22.0,
                2.001,
                3.0,
                2.001,
                20.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "3 * 3 = 9 (left: 9 7 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8)"
            ],
            "Evaluation": [
                3.0,
                60.0,
                20.002,
                41.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.3",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || Input: 4 10",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || Possible next steps:"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.4",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 12 / 3 = 4 (left: 4)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 5 * 10 = 50 (left: 4 50)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 12 - 3 = 9 (left: 9)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)"
            ],
            "Evaluation": [
                0.002,
                41.0,
                40.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.4",
                "2 <- 3.1",
                "3 <- 3.1",
                "4 <- 3.1"
            ]
        },
        "Step 4": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.6667 (left: 2.6667)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 5 * 10 = 50 (left: 4 50) || 50 - 4 = 46 (left: 46)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 5 * 10 = 50 (left: 4 50) || Input: 10 5",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 5 * 10 = 50 (left: 4 50) || 50 / 4 = 12.5 (left: 12.5)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                60.0,
                41.0
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 4.4",
                "2 <- 4.4",
                "3 <- 3.2",
                "4 <- 4.4"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9)"
            ],
            "Evaluation": [
                20.002,
                60.0,
                60.0,
                0.003,
                40.0
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 5.0",
                "2 <- 5.2",
                "3 <- 5.2",
                "4 <- 5.2"
            ]
        },
        "Step 6": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36) || 36 + 2 = 38",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 5.2",
                "2 <- 4.3",
                "3 <- 5.2",
                "4 <- 1.1"
            ]
        },
        "Step 7": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 10 / 5 = 2 (left: 2)",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36) || None - 36 is the final result.",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 4 + 6 = 10 (left: 10 9)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 5.1",
                "1 <- 7.3",
                "2 <- 5.1",
                "3 <- 3.2",
                "4 <- 5.0"
            ]
        },
        "Step 8": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || Possible next steps:",
                "7 - 3 = 4 (left: 3 4 12) || 12 / 4 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36) || There are no possible next steps as there is only one number provided.",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 8.4",
                "1 <- 8.4",
                "2 <- 8.4",
                "3 <- 7.3",
                "4 <- 7.3"
            ]
        },
        "Step 9": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: 3 * (7 - (12 - 4)) = 24"
            ]
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    }
}