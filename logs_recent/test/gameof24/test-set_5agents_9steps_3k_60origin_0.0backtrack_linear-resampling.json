{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> 4 * 2 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 88"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 ( -> 5 + 6 = 11 (left: 11) -> 11 * 8 = 88 (left: 8 88) -> 8 * 88 = 704 (left: 704)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input \"90\" as it is a single number."
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 + 10 = 15 (left: 6 15) -> 6 * 15 = 90 (left: 90) -> There are no possible next steps with the input \"90\" as it is a single number. -> There are no possible next steps with the input \"90\" as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8 1.25) -> 8 * 1.25 = 10 (left: 10 1.25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30) -> 10 * 30 = 300 (left: 300)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30) -> 10 * 30 = 300 (left: 300) -> 300 * 2 = 600 (left: 600)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.2 + 2 = 3.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 + 8 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.2 + 2 = 3.2"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2 -> 2 / 1.2 = 1.66666666667 (left: 1.66666666667",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.2 + 2 = 3.2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 ( -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 ( -> 5 + 6 = 11 (left: 11) -> 11 * 8 = 88 (left: 8 88)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 + 8 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.2 + 2 = 3.2"
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2 -> 1.2 / 2 = 0.6 (left: 0.6 + 2 = 2.6)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> There are no possible next steps as the equation is already simplified to 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30) -> 10 + 30 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 * 5 = 30 (left: 10 30) -> 10 + 30 = 40 (left: 40) -> No possible next steps with the input 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 88"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 6 - 5 = 1 ( -> 5 + 6 = 11 (left: 11) -> 11 * 8 = 88 (left: 8 88) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps as the equation is already simplified to 4."
                }
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> There are no possible next steps as the equation is already simplified to 4. -> There are no possible next steps as the equation is already simplified.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: 4 * 6 = 24, 3 * 2 = 6, (6 * 24) / 144 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 5 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 + 10 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 + 10 = 15 (left: 6 15) -> 6 * 15 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 + 10 = 15 (left: 6 15) -> 6 * 15 = 90 (left: 90) -> There are no possible next steps with the input \"90\" as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 + 8 = 10.5 (left: 8 10.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 + 10 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 + 8 = 10.5 (left: 8 10.5) -> 8 / 10.5 = 0.7619047619 (left: 0.7619047619)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps as the equation is already simplified to 4."
                }
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7) -> 12 - 7 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7) -> 12 - 7 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2.33 5"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5) -> 5 / 2.33 \u2248 2.15 (left: 2.15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 4 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 4 = 3 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 4 = 3 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33 (left: 4.33)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps as there are no numbers provided in the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 19."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19. -> No possible next steps with the input of 19.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7) -> Input: 5 3 7  -> 7 / 3 = 2.33 (left: 2.33 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16) -> 6 * 16 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 4 7"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 4 = 1.75 (left: 1.75 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> There are no numbers provided in the input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> There are no numbers provided in the input. -> There are no possible next steps without any numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 2.33 4) -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> There are no possible next steps with the input of 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No numbers provided. -> Please provide numbers to continue the calculation.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 - 3 =  -> 7 - 3 = 4 -> 7 * 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 7"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 /",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 / -> 3 / 1 = 3 (left: )",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 / -> 3 / 1 = 3 (left: ) -> It seems like you did not provide an input to work with. Could you please provide the values to perform calculations on?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as there are no numbers provided in the input."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input. -> No possible next steps. -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 11"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 + 11 = 12.14 (left: 12.14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 + 11 = 12.14 (left: 12.14) -> 12 - 14 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, the input has already been evaluated."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.2 + 2 = 4.2"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> 2.2 + 2 = 4.2 -> 2.2 / 2 = 1.1 (left: 1.1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> 2.2 + 2 = 4.2 -> 2.2 / 2 = 1.1 (left: 1.1 2) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8) -> 3.67 + 8 = 11.67 (left: 11.67) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> 11 / 56 = 0.196",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> 11 / 56 = 0.196 -> 56 - 11 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2.2 + 2 = 4.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.2 + 2 = 4.2"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> 2.2 + 2 = 4.2 -> 2.2 / 2 = 1.1 (left: 1.1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> 2.2 + 2 = 4.2 -> 2.2 / 2 = 1.1 (left: 1.1 2) -> 1.1 + 2 = 3.1 (left: 3.1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2.2 + 2 = 4.2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 / 7 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 / 7 =  -> 11 / 7 = 1.5714285714285714",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 / 7 =  -> 11 / 7 = 1.5714285714285714 -> 11 / 7 = 1.5714285714285714 (left: 1.5714285714285714)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2.2 + 2 = 4.2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.2 + 2 = 4.2"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> 2.2 + 2 = 4.2 -> 2.2 * 2 = 4.4 (left: 4.4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.14285714286 - 2 = -0.85714285714"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 11) -> 1.14285714286 -> 1.14285714286 - 2 = -0.85714285714 -> 1.14285714286 / 2 = 0.57142857143 (left: -0.85714285714 0.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> 2.2 + 2 = 4.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 11) -> 1.14285714286",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14285714286 (left: 1.14285714286 11) -> 1.14285714286 -> 1.14285714286 - 2 = -0.85714285714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 5.09."
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> 56 / 11 = 5.09 (left: 5.09) -> There are no possible next steps for the input 5.09. -> There are no possible next steps for the input 5.09.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> 56 / 11 = 5.09 (left: 5.09) -> There are no possible next steps for the input 5.09. -> There are no possible next steps for the input 5.09. -> There are no possible next steps for the input 5.09.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> None, the input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> 56 / 11 = 5.09 (left: 5.09)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 7 * 8 = 56 (left: 56 11) -> 56 / 11 = 5.09 (left: 5.09) -> There are no possible next steps for the input 5.09.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None, the input has already been evaluated."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> None, the input has already been evaluated. -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> Possible next steps: -> None, the input has already been evaluated. -> There are no possible next steps as the input has already been evaluated. -> 7 / 3 = 2.33 (left: 2.33 5 2)",
                "Pruning": null
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75) -> 3.25 + 4 = 7.25 (left: 7.25 - 4 = 3.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25 - 4 = -0.75) -> 3.25 + 4 = 7.25 (left: 7.25 - 4 = 3.25) -> 4 - 7.25 = -3.25 (left: -3.25)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9) -> -9 - 2 = -11 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12 -> 4 + 3 = 7 (left: 7 = 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.125 9"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 - 3 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125 9) -> 9 - 1.125 = 7.875 (left: 7.875)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with a single number."
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with a single number. -> There are no possible next steps with a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 / 3 = 1.3333 (left: 1.3333 9) -> 9 / 1.3333 = 6.7499 (left: 6.7499 9) -> 6.7499 - 9 = -2.2501 (left: -2.2501)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 3 * 5 = 15 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 3 * 5 = 15 (left: -> 3 - 5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just one number. -> 5 + 10 = 15 (left: 15 15 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just one number. -> 5 + 10 = 15 (left: 15 15 20) -> 20 + 15 = 35 (left: 15 35)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 - 2 = 1.25 (left: 2 1.25) -> 2 + 1.25 = 3.25 (left: 3.25)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 - 3 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 - 3 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 4 - 3 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just one number. -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with a single number."
                }
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with a single number. -> - Find the missing operator in an equation with three numbers",
                "Pruning": null
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-9 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 - 15 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5.538 - 2 = 3.538"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72) -> 72 / 13 = 5.538 (left: 5.538) -> 5.538 - 2 = 3.538 -> 5.538 + 2 = 7.538",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-9 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 - 15 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 17.5."
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 + 4 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "60 4"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 / 4 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 15"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 4 + 2 = 6 (left: 6 7 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 7 3"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 4 + 2 = 6 (left: 6 7 3) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 4 + 2 = 6 (left: 6 7 3) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 3) -> 3 - 1.1666666666666667 = 1.8333333333333333 (left: 1.8333333333333333 3)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 - 6 = 3 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 - 6 = 3 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 9 - 6 = 3 (left:  -> This input seems to be missing numbers for calculations. Could you please provide the numbers so we can suggest possible next steps? -> I'm sorry, but without the numbers for calculations, it is not possible to provide specific next steps. Please provide the missing numbers so we can assist you further.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 * 4 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 17.5."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 8 35"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5. -> 17.5 * 2 = 35 (left: 8 8 35) -> 35 - 8 = 27 (left: 8 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5. -> 17.5 * 2 = 35 (left: 8 8 35) -> 35 - 8 = 27 (left: 8 27) -> 27 - 8 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "I'm sorry, but without the numbers for calculations, it is not possible to provide specific next steps. Please provide the missing numbers so we can assist you further."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72) -> 72 / 13 = 5.538 (left: 5.538)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 * 9 = 72 (left: 13 72) -> 72 / 13 = 5.538 (left: 5.538) -> 5.538 - 2 = 3.538",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "60 4"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 * 56 = 3024 (left: 3024) -> 30 * 2 = 60 (left: 60 4) -> 60 - 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 17.5."
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5. -> 17.5 * 2 = 35 (left: 8 8 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-9 15"
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9 15) -> -9 - 15 = -24 (left: -24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 17.5."
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 6 9 15) -> 15 / 6 = 2.5 (left: 2.5 15) -> 2.5 + 15 = 17.5 (left: 17.5) -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5. -> There are no possible next steps with the input 17.5.",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 * 13 = 156 (left: 11 156) -> 11 / 156 = 0.0705 (left: 0.0705) -> 0.0705 * 2 = 0.141 (left: 0.141)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "11 13 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 11 - 10 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 14) -> 11 + 14 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input: 834"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 / 1 = 13 (left: 13 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13 11"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 - 13 = -2 (left: -2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 - 13 = -2 (left: -2 11) -> -2 - 11 = -13 (left: -13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 - 13 = -2 (left: -2 11) -> -2 - 11 = -13 (left: -13) -> -13 * 2 = -26 (left: -26)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "13 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 24 * 8 = 192 (left: 8 14 192)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 24 * 8 = 192 (left: 8 14 192) -> 14 - 8 = 6 (left: 6 8 192)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 + 12 = 13.18 (left: 13.18) -> 13 / 18 = 0.72 (left: 0.72)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13 11"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 + 13 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 + 13 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 + 13 = 24 (left: 11 24) -> 11 * 24 = 264 (left: 264) -> Input: 834",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8 14 32)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8 14 32) -> 32 / 14 = 2.28571428571 (left: 8 2.285",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13) -> 13 - 1.090909 = 11.909091 (left: 11.909091) -> 11.909091 * 11 = 131 (left: 131)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "11 11 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13 11"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 2 20 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 2 20  -> 2 * 20 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "13 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> -10 / 2 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "11 11 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13 11"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 + 13 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 + 13 = 24 (left: 11 24) -> 11 + 24 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 11 + 13 = 24 (left: 11 24) -> 11 + 24 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 8) -> 20 + 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input: 834"
                }
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> 11 + 2 = 13 -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 "
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 8 8"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> Possible next steps: -> - 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 / 7 = 1.57 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 8 8"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> 8 / 8 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 5.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 8 8"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16) -> 8 - 16 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 5.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 1 = 7 (left: 7 10 11) -> 7 + 10 = 17 (left: 11) -> There are no possible next steps with the input 11. -> 11 / 2 = 5.5 (left: 2 5.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 4 + 8 = 12 (left: 12 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 4 + 8 = 12 (left: 12 14) -> 12 + 14 = 26 (left: 14 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 4 + 8 = 12 (left: 12 14) -> 12 + 14 = 26 (left: 14 26) -> 26 / 14 = 1.8571428571428572 (left: 1.8571428571428572)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 8 8"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps given the input."
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Possible next steps: -> There are no possible next steps given the input. -> There are no possible next steps given the input. -> There are no possible next steps given the input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11) -> 11 / 8 \u2248 1.375 (left: 1.375) -> 1.375 + 2 = 3.375 -> 1.375 - 2 = -0.625 (left: -0.625)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Possible next steps: -> There are no possible next steps given the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 8 10  -> Possible next steps: -> There are no possible next steps given the input. -> There are no possible next steps given the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 8 8"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> Input: 1 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 16 -> There are no possible next steps with just the number 16. -> 16 / 2 = 8 (left: 8 8 8) -> Input: 1 8 -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It appears that the input is missing. Can you please provide the numbers for the next step calculation?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It appears that the input is missing. Can you please provide the numbers for the next step calculation? -> Without the input numbers, it's difficult to provide specific next steps for calculation. Could you please provide the numbers so that I can assist you further?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like the input is missing. Please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps. -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps. -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps. -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9  -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 9 - 0 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 9 - 0 = 9 -> 9 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there are no numbers provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Without the input numbers, it's difficult to provide specific next steps for calculation. Could you please provide the numbers so that I can assist you further?"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It appears that the input is missing. Can you please provide the numbers for the next step calculation? -> Without the input numbers, it's difficult to provide specific next steps for calculation. Could you please provide the numbers so that I can assist you further? -> Apologies for the confusion, please provide the numbers so that I can give you specific next steps for calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left:  -> It appears that the input is missing. Can you please provide the numbers for the next step calculation? -> Without the input numbers, it's difficult to provide specific next steps for calculation. Could you please provide the numbers so that I can assist you further? -> Apologies for the confusion, please provide the numbers so that I can give you specific next steps for calculation. -> Please provide the numbers you would like to use for the calculation.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 9 - 6 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 6 0 9) -> 9 - 6 = 3 (left: 6 3) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there are no numbers provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 * 3 = 27 (left: 6 9 27) -> 27 / 9 = 3 (left: 6 3) -> 6 + 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 3 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 3 9) -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 3 9) -> 6 / 3 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "It seems like the input is missing. Please provide the numbers to continue finding possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like the input is missing. Please provide the numbers to continue finding possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps. -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps. -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps. -> It seems like the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 - 8 = -0.5 (left: -0.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 6 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12) -> 12 + 9 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there are no numbers provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there are no numbers provided."
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 9 = 0 (left: 0) -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 9 = 1.67 (left: 1.67 9) -> 1.67 + 9 = 10.67 (left: 10.67) -> There are no possible next steps for the number 10.67 as it is already a single number and cannot be further operated on with the given operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 * 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps as there is only one number."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 3 4"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide more numbers to continue.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 4 - 1 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide more numbers to continue. -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: -",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 - 15 = -6 (left: - -> There are no possible next steps without an input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 3 14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 3 + 1 = 4 (left: 4 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 3 + 1 = 4 (left: 4 14) -> 14 / 4 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 3 + 1 = 4 (left: 4 14) -> 14 / 4 =  -> 14 / 4 = 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 1 = 14 (left: 14 9) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556) -> 1.5555555555555556 - 1 = 0.5555555555555556",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 3."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 14"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 3 14"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 3."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 * 1 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3. -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "No possible next steps as there is only one number."
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "21 3 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> There are no possible next steps with the input 63.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> There are no possible next steps with the input 63. -> There are no possible next steps with the input 63.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 36 = 0",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 36 = 0 -> 36 / 36 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps as there are no numbers left to perform operations with."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 3 / 6 = 0.5 (left: 0.5 9 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 * 36 = 1296 (left: 1296)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 4 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 + 3 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 / 12 = 3 (left: 3 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 / 12 = 3 (left: 3 36) -> 36 + 3 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 63."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> Possible next steps: -> There are no possible next steps for the given input. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "36 = 36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.5 9 18"
                }
            },
            "Step 7": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 3 / 6 = 0.5 (left: 0.5 9 18) -> 9 * 0.5 = 4.5 (left: 4.5 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63) -> 6 + 3 = 9 -> 3 / 6 = 0.5 (left: 0.5 9 18) -> 9 * 0.5 = 4.5 (left: 4.5 18) -> 4.5 * 18 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0.5 9 18"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with. -> There are no possible next steps as there are no numbers left to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 / 2 = 18 (left: 18 = 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 / 2 = 18 (left: 18 = 36) -> 18 + 36 = 54 (left: 36 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 / 2 = 18 (left: 18 = 36) -> 18 + 36 = 54 (left: 36 54) -> 54 - 36 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "36 = 36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 / 36 = 1 (left: 1 36)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 / 36 = 1 (left: 1 36) -> 1 + 36 = 37",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15) -> 15 / 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 7 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 3 + 21 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((6 + 6) - 6) + 12 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "0.5 9 18"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36 = 36"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 9 / 3 = 3 (left: 3 7) -> 4 * 9 = 36 -> 4 * 9 = 36 (left: 36 = 36) -> 36 - 36 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps as there are no numbers left to perform operations with."
                }
            },
            "Step 8": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> None, as there are no other numbers to perform operations with. -> There are no possible next steps as there are no numbers left to perform operations with. -> There are no possible next steps as there are no numbers left to perform operations with.",
                "Pruning": null
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 4 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 4 + 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Unfortunately, without a valid input, I am unable to generate possible next steps. Please provide a valid set of numbers for me to work with. Thank you!"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There seems to be an issue with the input provided. Please provide a valid input for me to generate the possible next steps. Thank you!",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps: -> There seems to be an issue with the input provided. Please provide a valid input for me to generate the possible next steps. Thank you! -> Unfortunately, without a valid input, I am unable to generate possible next steps. Please provide a valid set of numbers for me to work with. Thank you!",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 8 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.125 * 2 = 2.25"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9) ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9)  -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9)  -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 * 2 = 2.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 4 * 8 = 32 (left: 32 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 4 * 8 = 32 (left: 32 14) -> 32 - 14 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the number 17."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 + 7 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 - 7 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 - 7 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 3 - 7 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 4 + 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1.125 * 2 = 2.25"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> Input: 5 3 -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Unfortunately, without a valid input, I am unable to generate possible next steps. Please provide a valid set of numbers for me to work with. Thank you!"
                }
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> Input: 4 8 16 -> 4 + 8 = 12 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 "
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 / 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps as there are no other numbers provided to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 + 1 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 16 13"
                }
            },
            "Step 6": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 - 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5 as there are no valid operations that can be performed on the existing numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                }
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12 13) -> 12 + 13 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of -5 as there are no valid operations that can be performed on the existing numbers."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "5 2"
                }
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 * 1 + 2 = 5 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 8 "
                }
            },
            "Step 6": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 13 - 1 = 12 (left: 1 12) -> 12 * 1 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1.5 6 9"
                }
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 / 1.5 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 / 1.5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67) -> 6 - 2.67 = 3.33 (left: 3.33) -> There are no further possible next steps with the input 3.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 18 - 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with just the number 39."
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> There are no possible next steps as there is no input provided. -> No input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 18"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 9"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 / 6 = 1.5 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 / 6 = 1.5 ( -> Input: 3 * 5 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 9 + 144 = 153 (left: 153) -> 15 / 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1.5 6 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.5 6 9"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 / 1.5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 / 1.5 = 6 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 9 / 1.5 = 6 (left: 6 9) -> 9 - 6 = 3 (left: 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with just the number 39."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 39."
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39. -> - 39 / 3 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with just the number 39."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.5 6 9"
                }
            },
            "Step 4": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 * 6 = 9 (left: 9 9) -> 9 - 9 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 39."
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39) -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39. -> There are no possible next steps with just the number 39.",
                "Pruning": null
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 9 / 3 = 3 (left: 3 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 8 - 4 = 4 (left: 4 8) -> 9 / 3 = 3 (left: 3 9 -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> Input: 2 7 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> Input: 2 7 9 -> 9 - 2 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> Input: 2 7 9 -> 9 - 2 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 16 = 24 (left: 8 16 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 16 = 24 (left: 8 16 24) -> 8 + 16 = 24 (left: 24 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 * 0.875 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 8 / 2 = 4 (left: 4 20) -> 20 / 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 4 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> Possible",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 50 11"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 50 - 12 = 38 (left: 38)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 50"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 50 / 12 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 50 / 12 = 4.16666666667 (left: 4.16666666667) -> There are no possible next steps for the input 4.16666666667.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -5."
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5 as it does not have enough operands to perform any mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 50"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 50 - 12 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 50 - 12 = 38 (left: 38) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 5 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> 0.75 + 0.75 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.75 + 0.75 = 1.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 50"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 12 + 50 = 62 (left: 62)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 12 + 50 = 62 (left: 62) -> 62 / 2 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> -1 / 2 = -0.5 (left: -0.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 10 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 50 11"
                }
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 50"
                }
            },
            "Step 7": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 12 - 50 = -38 (left: -38)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 11 + 1 = 12 (left: 12 50) -> 12 - 50 = -38 (left: -38) -> There are no possible next steps as there are no numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875) -> There is only one possible step for this input: 0.6875 * 2 = 1.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 / 5 = 1 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input -5."
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input -5."
                }
            },
            "Step 7": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5. -> There are no possible next steps for the input -5 as it is not a valid input for arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 + 11 = 17 (left: 12 17) -> 12 / 17 = 0.70588235294 (left: 0.70588235294 17) -> 0.70588235294 * 17 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 7 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 18 - 11 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 + 6 = 18 (left: 11 18 12) -> 18 - 11 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78) -> Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with? -> 7 + 9 = 16 (left: 3 5 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78) -> Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with? -> 7 + 9 = 16 (left: 3 5 16) -> 5 * 3 = 15 (left: 15 16)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78) -> Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 4 - 3 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78) -> Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with? -> 8 / 2 = 4 (left: 4 4 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78) -> Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with? -> 8 / 2 = 4 (left: 4 4 24) -> 3 * 6 = 18 (left:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 * 2 = 22 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 11 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 143 / 1 = 143 (left: 143)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 + 12 = 14"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 -> 8 - 2 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 -> 8 - 2 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 10 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?"
                }
            },
            "Step 7": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78) -> Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with? -> Provide more numbers for me to work with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 11 * 6 = 66 (left: 12 66) -> 12 + 66 = 78 (left: 78) -> Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with? -> Provide more numbers for me to work with. -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Sorry, I am not able to perform calculations with a single number input. Can you provide more numbers for me to work with?"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 5 - 3 = 2 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 4 5"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 / 4 = 0.75 (left: 0.75 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 / 4 = 0.75 (left: 0.75 5) -> 5 / 0.75 = 6.67 (left: 6.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 / 4 = 0.75 (left: 0.75 5) -> 5 / 0.75 = 6.67 (left: 6.67) -> 6.67 - 2 = 4.67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6.67 - 2 = 4.67"
                }
            },
            "Step 7": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 / 4 = 0.75 (left: 0.75 5) -> 5 / 0.75 = 6.67 (left: 6.67) -> 6.67 - 2 = 4.67 -> 6.67 * 2 = 13.34",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 / 4 = 0.75 (left: 0.75 5) -> 5 / 0.75 = 6.67 (left: 6.67) -> 6.67 - 2 = 4.67 -> 6.67 * 2 = 13.34 -> 6.67 * 2 = 13.34 (left: 13.34 = 13.34)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 4 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 16"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 + 5 = 8 (left: 8 -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 4.5."
                }
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 + 8 = 16 (left: 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> 54 + 2 = 56",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 + 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 + 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 + 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33 8) -> 1.33 * 8 = 10.64 (left: 10.64)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 4.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> Possible next steps: -> There are no possible next steps as the input is already in its final form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> Possible next steps: -> There are no possible next steps as the input is already in its final form. -> Input is already in its final form.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 + 5 = 8 (left: 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 + 5 = 8 (left: 8 -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 3 + 5 = 8 (left: 8 -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 2 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> Possible next steps: -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "54 + 2 = 56"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 2 4 9) -> 2 + 4 = 6 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> 54 + 2 = 56 -> 56 / 8 = 7 (left: 8 14 7)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 - 8 = 1 (left: 8 1) -> 8 + 1 = 9 (left: 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 * 2 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 * 2 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 * 2 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 * 2 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "54 + 2 = 56"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 + 8 = 16 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 + 8 = 16 (left: 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 8 + 8 = 16 (left: 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 4 * 2 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 2 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 / 10 = 1.3 (left: 1.3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13) -> 13 / 10 = 1.3 (left: 1.3) -> 1.3 / 2 = 0.65 (left: 0.65)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 + 8 = 14"
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14 -> 6 * 8 = 48 (left: 48 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14 -> 6 * 8 = 48 (left: 48 8 14) -> 48 - 8 = 40 (left: 40 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> There are no possible next steps with just the number 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the number 13."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 13."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with just the number 13. -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with just the number 13."
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with just the number 13. -> 13 + 2 = 15 (left: 2 8 15)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with just the number 13."
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with just the number 13. -> There are no possible next steps with just the number 13.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with just the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 13."
                }
            },
            "Step 7": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 17 - 4 = 13 (left: 13) -> There are no possible next steps with just the number 13. -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6 + 8 = 14"
                }
            },
            "Step 8": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 5 + 12 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14 -> 14 - 8 = 6 (left: ",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide more than one number to generate possible next steps."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None - this is the final number."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left: -> 12 - 2 = 10 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 + 2 = 14 (left: -> 12 - 2 = 10 (left:  -> There are no more possible next steps with the given input."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 12 - 2 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 24 / 14 = 1.7142857142857142 (left: 1.7142857142857142)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24) -> 24 / 14 = 1.7142857142857142 (left: 1.7142857142857142) -> 1.7142857142857142 - 1 = 0.7142857142857142"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (8 / 2) * 8 = 32 (left: 32 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (8 / 2) * 8 = 32 (left: 32 14) -> 32 / 14 = 2.2857142857142856 (left: 2.2857142857142856)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": ""
                }
            },
            "Step 6": {
                "Step": " -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like there was an error in the input. Can you please provide the numbers to continue with the calculations?"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers to continue with the calculations? -> Apologies for the error. Please provide the numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers to continue with the calculations? -> Apologies for the error. Please provide the numbers to continue with the calculations. -> Please provide the numbers to continue with the calculations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> 2.57 + 8 = 10.57 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 9 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (2 + 8) * 8 = 80 (left: 80 14) -> 80 + 14 = 94 (left: 94)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one number in the input, so no operations can be performed."
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number in the input, so no operations can be performed. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": " -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": " -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 =  -> 6 - 3 = 3 -> 3",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 9 7"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 7) -> 9 - 3 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 7) -> 9 - 3 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 7) -> 9 - 3 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 * 8 = 64 (left"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 - 2) * 8 = 96 (left: 8 8 96) -> 96 - 8 = 88 (left: 8 88) -> 8 * 8 = 64 (left -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 * 8 = 64 (left"
                }
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 - 2) * 8 = 96 (left: 8 8 96) -> 96 - 8 = 88 (left: 8 88) -> 8 * 8 = 64 (left -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 * 8 = 64 (left"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers to continue with the calculations?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like there was an error in the input. Can you please provide the numbers to continue with the calculations?"
                }
            },
            "Step 7": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers to continue with the calculations? -> Apologies for the error. Please provide the numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers to continue with the calculations? -> Apologies for the error. Please provide the numbers to continue with the calculations. -> Apologies for the error. Please provide the numbers to continue with the calculations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 18 / 7 = 2.57 (left: 2.57) -> There is only one number in the input, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3. Utilize parentheses to change the order of operations."
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 - 2) * 8 = 96 (left: 8 8 96)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 - 2) * 8 = 96 (left: 8 8 96) -> 96 - 8 = 88 (left: 8 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> Possible -> Without knowing the specific numbers in the input, it is difficult to provide possible next steps. Please provide the numbers in the input for further assistance. -> 3. Utilize parentheses to change the order of operations. -> (14 - 2) * 8 = 96 (left: 8 8 96) -> 96 - 8 = 88 (left: 8 88) -> 8 * 8 = 64 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "13 + 2 = 15"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 7) -> 9 - 3 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 + 2 = 15 -> 15 - 8 = 7 (left: 7 8 23)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 7) -> 9 - 3 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 + 2 = 15 -> 15 - 8 = 7 (left: 7 8 23) -> 8 - 7 = 1 (left: 1 8 23)",
                "Pruning": null
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 - 3 - 0 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 45 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 11.2."
                }
            },
            "Step 7": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps with the input 11.2. -> There are no possible next steps with the input 11.2.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps with the input 11.2. -> There are no possible next steps with the input 11.2. -> There are no possible next steps with the input 11.2.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps with the input 11.2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 1 + 4 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 1 + 4 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 1 + 4 = 5 (left: 5 13) -> 5 * 13 = 65 (left: 65) -> 65 + 2 = 67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> None, as there is only one number provided. -> No further operations can be performed since there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> None, as there is only one number provided. -> No further operations can be performed since there is only one number provided. -> No further operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 + 3 + 0 = 9 (left: 9 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 1 * 4 = 4 (left: 4 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 1 * 4 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 1 * 4 = 4 (left: 4 13) -> 13 - 4 = 9 (left: 9) -> 9 + 8 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 11.2."
                }
            },
            "Step 7": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps with the input 11.2. -> There are no possible next steps with the input 11.2 as it is not a whole number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps with the input 11.2. -> There are no possible next steps with the input 11.2 as it is not a whole number. -> Invalid input: 11.2 is not a whole number. Please enter whole numbers only.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13) -> 45 + 13 = 58 (left: 58) -> 5 + 8 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 / 1 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 / 1 = 13 (left: 4 13) -> 13 + 4 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 / 1 = 13 (left: 4 13) -> 13 + 4 = 17 (left: 17) -> There are no more possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 11.2."
                }
            },
            "Step 7": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 9 / 5 = 1.8 (left: 1.8 13) -> 13 - 1.8 = 11.2 (left: 11.2) -> There are no possible next steps with the input 11.2. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 0"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 + 3 + 0 = 9 (left: 9 0) -> 9 / 0 = undefined (cannot divide by zero)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32) -> 32 * 2 = 64 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 4 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 4 13"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 - 1 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 - 1 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 1 4 13) -> 13 - 1 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 11.2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10 -> Input: 5 6 7 8 -> 6 + 7 = 13 (left: 5 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 4"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 =  -> 6 / 5 = 1.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 4"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 8 13"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Input: 5 6 2",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Input: 5 6 2 -> Input: 3 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Input: 5 6 2 -> Input: 3 3 -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "6 / 5 = 1.2"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 =  -> 6 / 5 = 1.2 -> 6 * 5 = 30",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 - 7 = -4 (left: -4 7 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 - 7 = -4 (left: -4 7 3) -> 3 * 7 = 21 (left: -4 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 - 7 = -4 (left: -4 7 3) -> 3 * 7 = 21 (left: -4 21) -> 21 - (-4) = 25 (left: 25)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 7 - 3 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 6 6"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 4"
                }
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "6 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 =  -> 3 + 9 = 12 -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 7 3"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10 3) -> 3 + 10 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> 3 + 7 = 10 (left: 3 10 3) -> 3 + 10 = 13 (left: 3 13) -> 13 + 3 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 4"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18) -> 13 * 18 = 234 (left: 234) -> 2 * 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 7 3"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8 -> 8 - 5 = 3 (left: 3 4 3) -> 3 + 4 = 7 (left: 3 7 3) -> Input: 5 9 5 3",
                "Pruning": null
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 8 10"
                }
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 0 = undefined (left: 0 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 0 = undefined (left: 0 10) -> 0 + 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 0 = undefined (left: 0 10) -> 0 + 10 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "- 14 - "
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 5 = 2 (left: 0 2) -> Possible next steps: -> - 14 -  -> -14 + 14 = 0 (left: -)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the input of 17."
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with just the input of 17. -> There are no possible next steps with just the input of 17.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 8 10"
                }
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 5 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 5 = 2 (left: 0 2) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 5 = 2 (left: 0 2) -> Possible next steps: -> - 14 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 / 5 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40) -> 40 * 2 = 80",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 8 10"
                }
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 10 = 18 (left: 0 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 10 = 18 (left: 0 18) -> 0 + 18 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 10 = 18 (left: 0 18) -> 0 + 18 = 18 (left: 18) -> There are no possible next steps for the number 18. It is a prime number and cannot be created by combining the numbers 2, 8, 8, and 14 using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the number 18. It is a prime number and cannot be created by combining the numbers 2, 8, 8, and 14 using basic arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 10 = 18 (left: 0 18) -> 0 + 18 = 18 (left: 18) -> There are no possible next steps for the number 18. It is a prime number and cannot be created by combining the numbers 2, 8, 8, and 14 using basic arithmetic operations. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "- 14 - "
                }
            },
            "Step 8": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 5 = 2 (left: 0 2) -> Possible next steps: -> - 14 -  -> -14 + 14 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10) -> 10 / 3 \u2248 3.33 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "0 8 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 8 10"
                }
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 - 8 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 - 8 = 2 (left: 0 2) -> 0 + 2 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 - 8 = 2 (left: 0 2) -> 0 + 2 = 2 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 20."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "40 * 2 = 80"
                }
            },
            "Step 7": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40) -> 40 * 2 = 80 -> 40 / 2 = 20 (left: 20 80)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40) -> 40 * 2 = 80 -> 40 / 2 = 20 (left: 20 80) -> 20 * 80 = 1600 (left: 1600)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the number 18. It is a prime number and cannot be created by combining the numbers 2, 8, 8, and 14 using basic arithmetic operations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with just the input of 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0 8 10"
                }
            },
            "Step 4": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 - 8 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 - 8 = 2 (left: 0 2) -> 0 + 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 - 8 = 2 (left: 0 2) -> 0 + 2 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "40 * 2 = 80"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "- 14 - "
                }
            },
            "Step 7": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 10 / 5 = 2 (left: 0 2) -> Possible next steps: -> - 14 -  -> -14 * -14 = 196 (left: 196)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the number 18. It is a prime number and cannot be created by combining the numbers 2, 8, 8, and 14 using basic arithmetic operations."
                }
            },
            "Step 8": {
                "Step": "5 - 5 = 0 (left: 0 8 10) -> 8 + 10 = 18 (left: 0 18) -> 0 + 18 = 18 (left: 18) -> There are no possible next steps for the number 18. It is a prime number and cannot be created by combining the numbers 2, 8, 8, and 14 using basic arithmetic operations. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the input of 17."
                }
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2) -> 6 * 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 16 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps as there is no input provided."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) + 6) + 12 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3) -> 12 + 3 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 12 3) -> 12 + 3 = 15 (left: 3 15) -> 3 * 15 = 45 (left: 15 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There is only one number provided, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 / 12 = 3 (left: 3, 12) -> 3 * 4 = 12 (left: 4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> 11 + 2 = 13"
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 / 15 = 4.4 (left: 4.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15) -> 66 / 15 = 4.4 (left: 4.4) -> There are no possible next steps for the input 4.4 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 7 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 7 = 12 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 7 = 12 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> 72 / 2 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 15 20"
                }
            },
            "Step 7": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 2 + 15 = 17 (left: 17 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 2 + 15 = 17 (left: 17 20) -> 17 * 20 = 340 (left: 340)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 4.4 as it is a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 - 3 = 6 (left: 6 27) -> 6 + 27 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 - 7 = -1 (left: -1 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 - 7 = -1 (left: -1 19) -> -1 + 19 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 6 - 7 = -1 (left: -1 19) -> -1 + 19 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 4.4 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 15 20"
                }
            },
            "Step 7": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 20 - 15 = 5 (left: 2 5 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 20 - 15 = 5 (left: 2 5 20) -> 20 / 5 = 4 (left: 2 4 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 13 / 6 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 13 / 6 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 7 19"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 7 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 7 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 7 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3) ",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "81 is already a single number and cannot be further manipulated."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 15 20"
                }
            },
            "Step 7": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 15 - 2 = 13 (left: 2 13 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 15 - 2 = 13 (left: 2 13 20) -> 13 - 2 = 11 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66) -> 15 + 66 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66) -> 15 + 66 = 81 (left: 81) -> 81 is already a single number and cannot be further manipulated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 15 20"
                }
            },
            "Step 7": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 15 - 2 = 13 (left: 2 13 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 15 - 2 = 13 (left: 2 13 20) -> 2 * 13 = 26 (left: 26 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 4"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 6 8 4) -> 8 - 4 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (11 - 7) + 8 - 4 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 13) -> 13 - 6 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "81 is already a single number and cannot be further manipulated."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 15 20"
                }
            },
            "Step 7": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 15 / 2 = 7.5 (left: 7.5 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19) -> 1 * 19 = 19 (left: 19) -> 10 / 5 = 2 (left: 2 15 20 -> 15 / 2 = 7.5 (left: 7.5 20) -> Possible",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 4.4 as it is a single number."
                }
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5 -> 3 + 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> Input: 3 5 -> 3 + 5 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 4": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 13 - 10 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 13 - 10 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4 -> 3 * 3 = 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4 -> 3 * 3 = 9 -> 3 ^ 3 = 27 (left: 27 = 9)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4) -> -2 - 4 = -6 (left: -6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> 13 - 9 = 4 (left: -2 4) -> -2 - 4 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "-2 9 "
                }
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18) -> -18 + 2 = -16 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18) -> -18 + 2 = -16 (left: 2) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18) -> -18 + 2 = -16 (left: 2) -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18) -> -18 + 2 = -16 (left: 2) -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided. -> N/A",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0.6923076923076923 - 2 = -1.3076923076923077"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "-2 9 "
                }
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 - 9 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 - 9 = -11 (left: -11) -> -11 - 2 = -13 (left: -13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 - 9 = -11 (left: -11) -> -11 - 2 = -13 (left: -13) -> There are no possible next steps as the input is not valid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18) -> -18 + 2 = -16 (left: 2) -> No possible next steps as there is only one number provided. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 13 - 10 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13) -> 4.5 - 13 = -8.5 (left: -8.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13) -> 4.5 - 13 = -8.5 (left: -8.5) -> There are no possible next steps with the input of -8.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "-2 9 "
                }
            },
            "Step 4": {
                "Step": "7 - 9 = -2 (left: -2 9  -> 9 - (-2) = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 9 = -2 (left: -2 9  -> 9 - (-2) = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 9 = -2 (left: -2 9  -> 9 - (-2) = 11 (left: 11) -> 11 + 2 = 13 -> 11 - 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 13 - 10 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 13 - 10 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as the input is not valid."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "-2 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 9 = -2 (left: -2 9 13) -> -2 + 9 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "-2 9 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 4": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 13 / 1 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 13 / 1 = 13 (left: 9 13) -> 9 / 13 = 0.6923076923076923 (left: 0.6923076923076923)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 13 / 1 = 13 (left: 9 13) -> 9 / 13 = 0.6923076923076923 (left: 0.6923076923076923) -> 0.6923076923076923 - 2 = -1.3076923076923077",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18) -> -18 + 2 = -16 (left: 2) -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 9 = -2 (left: -2 9  -> -2 * 9 = -18 (left: -18) -> -18 + 2 = -16 (left: 2) -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps as there are no other numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left: 1 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 9 = 1 (left: 1 9 9) -> 9 / 1 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 9 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12) -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 3 * 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 3 * 6 = 18 (left: 9 18) -> 9 - 18 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 9"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 + 1.33 = 19.33 (left: 19.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 + 1.33 = 19.33 (left: 19.33) -> 19.33 + 2 = 21.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 9 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> Input: 4 16 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 - 3 =  -> 9 - 3 = 6",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18) -> 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 6 + 12 = 18 (left: 9 18) -> 3 -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 + 3 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 + 3 = 12 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 3 + 9 = 12 (left: 9 12) -> 12 / 9 = 1.3333333333333333 (left: 1.3333333333333333)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1.33 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 / 9 = 1.33 (left: 18 1.33) -> 18 * 1.33 = 23.94 (left: 1.33 23.94) -> 1.33 + 23.94 = 25.27 (left: 25.27)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "18 9 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 9 - 6 = 3 (left: 3 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 3 = 3 (left: 6 9 3) -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 7": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 4 + 5 = 9 (left: 6 7 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 9 / 3 = 3 (left: 3 9 9) -> 4 + 5 = 9 (left: 6 7 9) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5 -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": "NA",
                "Evaluation": 60.0
            },
            "Step 7": {
                "Pruning": null
            },
            "Step 8": {
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 15 60) -> 15 * 60 = 900 (left: 900)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": "NA",
                "Evaluation": 0.001
            },
            "Step 7": {
                "Pruning": null
            },
            "Step 8": {
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 3 + 5 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "12 13 15"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": "NA",
                "Evaluation": 0.003
            },
            "Step 7": {
                "Pruning": null
            },
            "Step 8": {
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 - 1.5 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "12 13 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 - 4 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": "NA",
                "Evaluation": 0.002
            },
            "Step 7": {
                "Pruning": null
            },
            "Step 8": {
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 2 = 24",
                "Pruning": "NA",
                "Evaluation": 60.0
            },
            "Step 7": {
                "Pruning": null
            },
            "Step 8": {
                "Pruning": null
            }
        },
        "Input": "6 9 12 13",
        "Verifications": []
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 22.75."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75. -> 22.75 / 8 = 2.84375 (left: 2.84375 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75. -> 22.75 / 8 = 2.84375 (left: 2.84375 8) -> 2.84375 + 8 = 10.84375 (left: 10.84375)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 13 28"
                }
            },
            "Step 6": {
                "Step": "4 * 7 = 28 (left: 9 13 28) -> 9 + 13 = 22 (left: 22 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.25 11.25"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25 -> 3.25 / 8 = 0.40625 (left: 0.40625 8 11.25) -> 0.40625 * 8 = 3.25 (left: 3.25 11.25) -> 3.25 / 11.25 = 0.2888888888888889 (left: 0.2888888888888889)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 22.75."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> None",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 22.75."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with -2 as the input."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> -2 - 8 = -10 (left: -10 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.25 11.25"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25 -> 3.25 / 8 = 0.40625 (left: 0.40625 8 11.25) -> 0.40625 * 8 = 3.25 (left: 3.25 11.25) -> 3.25 * 11.25 = 36.56 (left: 36.56)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 22.75."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75. -> There are no possible next steps for the input 22.75.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps for the input 22.75."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75. -> There are no possible next steps for the input 22.75.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75. -> There are no possible next steps for the input 22.75. -> There are no possible next steps for the input 22.75.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps for the input 22.75. -> There are no possible next steps for the input 22.75. -> There are no possible next steps for the input 22.75. -> There are no possible next steps for the input 22.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.25 11.25"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25 -> 3.25 / 8 = 0.40625 (left: 0.40625 8 11.25) -> 0.40625 * 8 = 3.25 (left: 3.25 11.25) -> 3.25 * 11.25 = 36.5625 (left: 36.5625)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 22.75."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75) -> There are no possible next steps with the input 22.75. -> 22.75 / 2 = 11.375",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with -2 as the input."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> Sorry, there are no possible next steps with -2 as the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.25 11.25"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25 -> 3.25 / 8 = 0.40625 (left: 0.40625 8 11.25) -> 0.40625 * 8 = 3.25 (left: 3.25 11.25) -> 11.25 - 3.25 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3.25 11.25"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25 -> 3.25 / 8 = 0.40625 (left: 0.40625 8 11.25) -> 0.40625 * 8 = 3.25 (left: 3.25 11.25) -> Input: 5",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 13 - 5 = 8 (left: 8 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 9 13) -> 13 - 5 = 8 (left: 8 13) -> Possible next steps: -> There are no more possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps with the input 3.25."
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25 -> 3.25 / 8 = 0.40625 (left: 0.40625 8 11.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25 -> 3.25 / 8 = 0.40625 (left: 0.40625 8 11.25) -> 0.40625 * 8 = 3.25 (left: 3.25 11.25)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.25 11.25"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 ( -> 13 / 4 = 3.25 (left: 3.25) -> There are no possible next steps with the input 3.25. -> 3.25 + 8 = 11.25 -> 3.25 / 8 = 0.40625 (left: 0.40625 8 11.25) -> 0.40625 * 8 = 3.25 (left: 3.25 11.25) -> 3.25 * 11.25 = 36.5625 (left: 36.5625)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Sorry, there are no possible next steps with -2 as the input."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 4 + 7 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> There are no possible next steps with -2 as the input. -> Sorry, there are no possible next steps with -2 as the input. -> -2 * 8 = -16 (left: -16 8 14)",
                "Pruning": null
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 12 - 10 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 3.75 + 12 = 15.75 (left: 15.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 3.75 + 12 = 15.75 (left: 15.75) -> 15.75 * 2 = 31.5 (left: 31.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "No possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.83 + 2 = 3.83"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 12 22) -> 22 / 12 = 1.83 (left: 1.83) -> 1.83 + 2 = 3.83 -> 1.83 / 2 = 0.915 (left: 0.915 2 3.83)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 12 22) -> 22 / 12 = 1.83 (left: 1.83) -> 1.83 + 2 = 3.83 -> 1.83 / 2 = 0.915 (left: 0.915 2 3.83) -> 3.83 - 2 = 1.83 (left: 0.915 1.83)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 30 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25) -> There are no possible next steps with the input of 8.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.83 + 2 = 3.83"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 12 22) -> 22 / 12 = 1.83 (left: 1.83) -> 1.83 + 2 = 3.83 -> 2 / 1.83 = 1.09 (left: 1.09 3 3.83)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 12 22) -> 22 / 12 = 1.83 (left: 1.83) -> 1.83 + 2 = 3.83 -> 2 / 1.83 = 1.09 (left: 1.09 3 3.83) -> 3.83 - 1.09 = 2.74 (left: 3 2.74)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 8) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n3 * 6 = 18 (left: 18 24)\nAnswer: 3 * (8 + 6) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 12 30"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 12 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 8 + 12 = 20 (left: 20 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 8 + 12 = 20 (left: 20 30) -> 30 / 20 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 8 + 12 = 20 (left: 20 30) -> 30 / 20 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with just one number. -> None.",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input of 8.25 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25) -> There are no possible next steps with the input of 8.25 as it is already a single number. -> There are no possible next steps with the input of 8.25 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25) -> There are no possible next steps with the input 8.25.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 8.25 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25) -> There are no possible next steps with the input of 8.25 as it is already a single number. -> There are no possible next steps with the input of 8.25 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 / 8 = 3.75 (left: 3.75 12) -> 12 - 3.75 = 8.25 (left: 8.25) -> There are no possible next steps with the input of 8.25 as it is already a single number. -> There are no possible next steps with the input of 8.25 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1.83 + 2 = 3.83"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 + 4 = 10 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 12 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 12 22) -> 22 / 12 = 1.83 (left: 1.83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 30 - 8 = 22 (left: 12 22) -> 22 / 12 = 1.83 (left: 1.83) -> 1.83 + 2 = 3.83",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 1.5."
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 8 + 12 = 20 (left: 20 30) -> 30 / 20 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 8 + 12 = 20 (left: 20 30) -> 30 / 20 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 4.8 + 2 = 6.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 - 7 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 - 7 = -1 (left: -1 8) -> -1 + 8 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 - 7 = -1 (left: -1 8) -> -1 + 8 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 50 as it is a single number and not an expression."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for this input."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 6 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 8 = -1 (left: -1 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 8 = -1 (left: -1 7) -> -1 * 7 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 - 8 = -1 (left: -1 7) -> -1 * 7 = -7 (left: -7) -> -7 / 2 = -3.5 (left: -3.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for this input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for this input."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> Input: 2 -1 1",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> Input: 2 -1 1 -> 2 / -1 = -2 (left: -2 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> Input: 2 -1 1 -> 2 / -1 = -2 (left: -2 1) -> -2 * 1 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for this input."
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for this input."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 + 6 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the input 50 as it is a single number and not an expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 * 6 = 48 (left: 7 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 * 6 = 48 (left: 7 48) -> 48 / 7 = 6 (left: 6 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 * 6 = 48 (left: 7 48) -> 48 / 7 = 6 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps for the input 50 as it is a single number and not an expression."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for this input."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 / 6 = 1.17 (left: 1.17 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 / 6 = 1.17 (left: 1.17 8) -> 1.17 * 8 = 9.36 (left: 9.36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 / 6 = 1.17 (left: 1.17 8) -> 1.17 * 8 = 9.36 (left: 9.36) -> 9 * 3 = 27.0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for this input."
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 1.4285714285714286 * 10 = 14.285714285714286 (left: 10 14.285714285714286)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 50 80"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 10 * 5 = 50 (left: 9 50 80) -> 80 - 9 = 71 (left: 71 80)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 10 * 5 = 50 (left: 9 50 80) -> 80 - 9 = 71 (left: 71 80) -> 71 * 80 = 5680 (left: 5680)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 10 10"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 2 10 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1.8"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8) -> There are no possible next steps for the input 1.8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8) -> There are no possible next steps for the input 1.8. -> 1.8 * 8 = 14.4 (left: 14.4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "10 14.285714285714286"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 -> 2 * 5 = 10 (left: 10 18 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 -> 2 * 5 = 10 (left: 10 18 10) -> 10 * 18 = 180 (left: 180 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 27"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 3 + 9 = 12 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "10 14.285714285714286"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 10 - 10 = 0 (left: 7 0 10) -> 10 / 7 = 1.4285714285714286 (left: 1.4285714285714286 10) -> 1.4285714285714286 * 10 = 14.285714285714286 (left: 10 14.285714285714286) -> 10 * 14.285714285714286 = 142.85714285714286 (left: 14.285714285714286 142.85714285714286)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 10 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "180 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 -> 2 * 5 = 10 (left: 10 18 10) -> 10 * 18 = 180 (left: 180 10) -> 180 / 10 = 18 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 10 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 10 = 1 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 10 * 5 = 50 (left: 9 50 80)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "180 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 -> 2 * 5 = 10 (left: 10 18 10) -> 10 * 18 = 180 (left: 180 10) -> 10 - 180 = -170 (left: 180)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one number, so no further steps can be taken."
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 1.25 * 10 = 12.5 (left: 12.5) -> There is only one number, so no further steps can be taken. -> Since there is only one number, no further steps can be taken.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 1.25 * 10 = 12.5 (left: 12.5) -> There is only one number, so no further steps can be taken. -> Since there is only one number, no further steps can be taken. -> No further steps can be taken.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "Input: 2 10 10"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 2 8 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 2 8 10) -> 2 * 8 = 16 (left: 16 10)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 1.25 * 10 = 12.5 (left: 12.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 1.25 * 10 = 12.5 (left: 12.5) -> There is only one number, so no further steps can be taken.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "180 10"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 -> 2 * 5 = 10 (left: 10 18 10) -> 10 * 18 = 180 (left: 180 10) -> 180 * 10 = 1800 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 10 10"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> 8 + 10 = 18 (left: 10 18) -> 18 / 10 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 27"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 3 + 9 = 12 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "9 50 80"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 8 10 10) -> Input: 10 18 2 5 80 -> 18 / 2 = 9 (left: 9 5 10 80) -> 10 * 5 = 50 (left: 9 50 80) -> 80 / 9 = 8.88888888888889",
                "Pruning": null
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 - 42 = -36 (left: -36) -> -36 - 2 = -38 -> -36 + 2 = -34 (left: -34)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 1"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24 / 48 ="
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 44."
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44. -> There are no possible next steps with the input 44.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44. -> There are no possible next steps with the input 44. -> There are no possible next steps with the input 44.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "42 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 44."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "- Multiply a number to get a new product"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 + 42 = 48 (left: 48) -> No possible next steps with just one number. -> - Multiply a number to get a new product -> - Subtract a number to get a new difference",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 + 42 = 48 (left: 48) -> No possible next steps with just one number. -> - Multiply a number to get a new product -> - Subtract a number to get a new difference -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24 / 48 ="
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24 / 48 ="
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 / 48 = -> 24 / 48 = 0.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 / 48 = -> 24 / 48 = 0.5 -> 48 - 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 44."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 / 24 = 2 (left -> 24 / 48 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 + 5 = 7 (left: 7 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 + 5 = 7 (left: 7 2) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24 / 48 ="
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "- Multiply a number to get a new product"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 + 42 = 48 (left: 48) -> No possible next steps with just one number. -> - Multiply a number to get a new product -> - Divide a number to get a new quotient",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 + 42 = 48 (left: 48) -> No possible next steps with just one number. -> - Multiply a number to get a new product -> - Divide a number to get a new quotient -> - Subtract a number to get a new difference",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 + 42 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 + 42 = 48 (left: 48) -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 + 42 = 48 (left: 48) -> No possible next steps with just one number. -> - Multiply a number to get a new product",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input 44."
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44. -> There are no possible next steps with the input 44.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44) -> There are no possible next steps with the input 44. -> There are no possible next steps with the input 44. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 44."
                }
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 6 * 9 = 54 (left: 54 2) -> 54 * 2 = 108 (left: 108) -> 1 + 0 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 9 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 / 1.5 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number provided. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 9 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 9 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 - 9.5 = -0.5 (left: -0.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 - 9.5 = -0.5 (left: -0.5) -> -0.5 / 2 = -0.25 (left: -0.25)",
                "Pruning": "NA",
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps as the input is a single number."
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11) -> 7.5 + 11 = 18.5 (left: 18.5) -> There are no possible next steps as the input is a single number. -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11) -> 7.5 + 11 = 18.5 (left: 18.5) -> There are no possible next steps as the input is a single number. -> There are no possible next steps as the input is a single number. -> Input: 5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 / 3 = 3 (left: -> 3 / 11 = 0.2727272727272727 -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.5 9 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 * 9.5 = 85.5 (left: 85.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 * 9.5 = 85.5 (left: 85.5) -> There is only one number given, so there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 * 9.5 = 85.5 (left: 85.5) -> There is only one number given, so there are no possible next steps to perform any arithmetic operations. -> No arithmetic operations can be performed with only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 * 9.5 = 85.5 (left: 85.5) -> There is only one number given, so there are no possible next steps to perform any arithmetic operations. -> No arithmetic operations can be performed with only one number given. -> Provide at least two numbers to perform arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11) -> 3 + 9 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.5 9 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11) -> 7.5 + 11 = 18.5 (left: 18.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 9 - 1.5 = 7.5 (left: 7.5 11) -> 7.5 + 11 = 18.5 (left: 18.5) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 * 9.5 = 85.5 (left: 85.5) -> There is only one number given, so there are no possible next steps to perform any arithmetic operations. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 * 9.5 = 85.5 (left: 85.5) -> There is only one number given, so there are no possible next steps to perform any arithmetic operations. -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 + 9 + 4 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.5 9 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.5 9 11"
                }
            },
            "Step 4": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 - 9.5 = -0.5 (left: -0.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 - 9.5 = -0.5 (left: -0.5) -> -0.5 + 2 = 1.5 (left: 1.5)",
                "Pruning": "NA",
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any arithmetic operations."
                }
            },
            "Step 7": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 * 9.5 = 85.5 (left: 85.5) -> There is only one number given, so there are no possible next steps to perform any arithmetic operations. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11) -> 11 - 1.5 = 9.5 (left: 9 9.5) -> 9 * 9.5 = 85.5 (left: 85.5) -> There is only one number given, so there are no possible next steps to perform any arithmetic operations. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 (left: -> 8 * 4 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 (left: -> 8 * 4 = 32 (left: 32) -> 32 - 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "- 11 / 2 = 5.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "- 11 / 2 = 5.5"
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5 -> -11 / 2 = -5.5 (left: -5.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "- 11 / 2 = 5.5"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5 -> - 11 / - 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 * 12 = 96 (left: 96 16) -> Possible next steps: -> There seems to be a formatting issue with the input. Could you please provide the correct input so I can generate the possible next steps for you? Thank you.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 4 + 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "- 11 / 2 = 5.5"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5 -> -11 + 2 = -9 (left: -9 / 2 = -4.5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (12 + (11 + 5)) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 12 16"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 / 8 = 2 (left: 12 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 / 8 = 2 (left: 12 2) -> 12 / 2 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 / 8 = 2 (left: 12 2) -> 12 / 2 = 6 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 15."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 4 + 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 4 + 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There seems to be a formatting issue with the input. Could you please provide the correct input so I can generate the possible next steps for you? Thank you."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 1": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 16 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 16 20) -> 16 * 20 = 320 (left: 320)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 8 + 12 = 20 (left: 16 20) -> 16 * 20 = 320 (left: 320) -> 320 - 3 = 317 (left: 317)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 12 16"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 15."
                }
            },
            "Step 7": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15) -> There are no possible next steps with the input of 15. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "- 11 / 2 = 5.5"
                }
            },
            "Step 8": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5 -> -11 / 2 = -5.5 (left: -5.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 24"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11) -> There are no possible next steps with just the number 11. -> - 11 / 2 = 5.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 - 8 = 4 -> 4 + 8 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36 + 2 = 38"
                }
            },
            "Step 7": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> 36 + 2 = 38 -> 38 * 2 = 76 (left: 76 2 38)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 + 16 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36) -> 36 + 2 = 38 -> 38 * 2 = 76 (left: 76 2 38) -> 76 / 2 = 38 (left: 38 38)",
                "Pruning": null
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 10 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 28"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> 28 / 8 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 6 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 10 - 6 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 10 - 6 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24 28)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> 8 * 3 = 24 (left: 24 28) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18) -> 11 - 18 = -7 (left: -7) -> -7 * -7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 10 11"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 28"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> 28 + 8 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 10 - 6 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 28"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21) -> 8 * 21 = 168 (left: 168) -> 1 * 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "20 + 2 = 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> Input: 5 5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> Input: 5 5 -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 28"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "20 + 2 = 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> 28 / 8 = 3.5 (left: 3.5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> 28 / 8 = 3.5 (left: 3.5 8) -> 3.5 * 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 28"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 + 10 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 - 2 = 58 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 2 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 / 2 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 / 2 = 2.5 (left: 2.5 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 / 2 = 2.5 (left: 2.5 10) -> 2.5 + 10 = 12.5 (left: 10 12.5) -> 10 / 12.5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "20 + 2 = 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> 28 - 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "20 + 2 = 22"
                }
            },
            "Step 8": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 * 2 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 2 = 22 -> 20 / 2 = 10 (left: 10 2 22)",
                "Pruning": null
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 / 66 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "7 11 12"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 1.57 * 12 = 18.84 (left: 18.84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18.84"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 1.57 * 12 = 18.84 (left: 18.84) -> There are no possible next steps for the input 18.84.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 1.57 * 12 = 18.84 (left: 18.84) -> There are no possible next steps for the input 18.84. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3.39 / 2 = 1.695"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 1": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> 3.39 / 2 = 1.695",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 - 66 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 - 13 = -7 (left: -7 13 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 - 13 = -7 (left: -7 13 23) -> 13 + 23 = 36 (left: -7 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "49.79"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 / 6 = 3.83 (left: 3.83 13) -> 3.83 * 13 = 49.79 (left: 49.79) -> 49.79 - 2 = 47.79",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 / 6 = 3.83 (left: 3.83 13) -> 3.83 * 13 = 49.79 (left: 49.79) -> 49.79 - 2 = 47.79 -> 49.79 - 0.2 = 49.59",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 / 6 = 4.166666",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 / 6 = 4.166666 -> 25 / 6 = 4.166666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132 -> 66 - 66 = 0 (left: 0 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 + 66 = 132 -> 66 - 66 = 0 (left: 0 132) -> 132 - 0 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3.39 / 2 = 1.695"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.39 / 2 = 1.695"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> 3.39 / 2 = 1.695 -> 3.39 + 2 = 5.39 (left: 5.39)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "-7 36"
                }
            },
            "Step 8": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 - 13 = -7 (left: -7 13 23) -> 13 + 23 = 36 (left: -7 36) -> -7 + 36 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "25 / 6 = 4.166666"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 6 = 19 (left: 14 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14 25) -> 25 - 6 = 19 (left: 14 19) -> 14 * 19 = 266 (left: 266)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 11 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "66 66"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66) -> 66 - 66 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 13 23"
                }
            },
            "Step 5": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 / 6 = 3.83 (left: 3.83 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 23 / 6 = 3.83 (left: 3.83 13) -> 3.83 * 13 = 49.79 (left: 49.79)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18.84"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 1.57 * 12 = 18.84 (left: 18.84) -> There are no possible next steps for the input 18.84.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 / 7 = 1.57 (left: 1.57 12) -> 1.57 * 12 = 18.84 (left: 18.84) -> There are no possible next steps for the input 18.84. -> There are no possible next steps for the input 18.84.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 =  -> 6 * 11 = 66 -> 11 * 6 = 66 (left: 66 66)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 + 11 = 18 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3.39 / 2 = 1.695"
                }
            },
            "Step 7": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> 6 * 13 = 78 (left: 78 23) -> 78 / 23 = 3.39 (left: 3.39) -> 3.39 / 2 = 1.695 -> 2 / 3.39 = 0.5904 (left: 0.5904)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            },
            "Step 8": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There are no possible next steps with the input of 20. -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 + 2 = 10 (left: 10 8) -> 10 * 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps with only the number 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with only the number 14."
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps with only the number 14. -> - 14 - 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only the number 14."
                }
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps with only the number 14. -> 14 / 2 = 7 (left: 7 8 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 * 4 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 * 4 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 * 4 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "12 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 4 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8) -> There are no possible next steps with just one number. -> 8 / 8 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 4 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8) -> There are no possible next steps with just one number. -> 8 / 8 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 6 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 4 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 4 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 8 - 4 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 8"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 2 6 8) -> 8 / 2 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 8"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 4 + 2 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 4 + 2 = 6 (left: 4 6) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 4 + 2 = 6 (left: 4 6) -> 9 - 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "12 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with only the number 14."
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps with only the number 14. -> 14 - 2 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps with only the number 14. -> 14 - 2 = 12 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 6 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 8"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 4 - 2 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 4 - 2 = 2 (left: 2) -> No possible next steps with only one number provided. -> Provide at least two numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with only the number 14."
                }
            },
            "Step 7": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps with only the number 14. -> 14 * 2 = 28 (left: 14 28)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 + 4 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> There are no possible next steps with only the number 14. -> 14 * 2 = 28 (left: 14 28) -> 14 * 28 = 392 (left: 392)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "12 8"
                }
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 19 13"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 + 13 = 51 (left: 51)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 2 * 19 = 38 (left: 38 13) -> 38 + 13 = 51 (left: 51) -> 51 - 2 = 49",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> None",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 19 13"
                }
            },
            "Step 5": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 19 / 13 = 1.46 (left: 1.46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 19 / 13 = 1.46 (left: 1.46) -> 1.46 / 2 = 0.73 (left: 0.73)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.73"
                }
            },
            "Step 7": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 19 / 13 = 1.46 (left: 1.46) -> 1.46 / 2 = 0.73 (left: 0.73) -> There is only one possible next step: 0.73 + 0.73 = 1.46",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 19 / 13 = 1.46 (left: 1.46) -> 1.46 / 2 = 0.73 (left: 0.73) -> There is only one possible next step: 0.73 + 0.73 = 1.46 -> 0.73 / 0.73 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "51 - 2 = 49"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 + 12 = 21 (left: 21 13) -> 21 * 13 = 273 (left: 273) -> 27 + 3 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 12 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 17.33 as it is a single number."
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> There are no possible next steps for the input 17.33 as it is a single number. -> There are no possible next steps for the input 17.33 as it is a single number.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> There are no possible next steps for the input 17.33 as it is a single number. -> There are no possible next steps for the input 17.33 as it is a single number. -> There are no possible next steps for the input 17.33 as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> There are no possible next steps for the input 17.33 as it is a single number. -> There are no possible next steps for the input 17.33 as it is a single number. -> There are no possible next steps for the input 17.33 as it is a single number. -> There are no possible next steps for the input 17.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Please provide a set of numbers to continue with the calculations."
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable. -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable. -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 2 = 16 (left: 16 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable. -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13 + 2 = 15"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 12 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 13 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 12 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 13 15) -> 6.5 + 13 = 19.5 (left: 19.5 15)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 9 / 12 = 0.75 (left: 0.75 13) -> 13 / 0.75 = 17.33 (left: 17.33) -> There are no possible next steps for the input 17.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> Input: 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> Input: 5 -> There is only one number given, so there are no possible next steps without additional numbers or operators.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> Input: 5 -> There is only one number given, so there are no possible next steps without additional numbers or operators. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.73"
                }
            },
            "Step 7": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 19 / 13 = 1.46 (left: 1.46) -> 1.46 / 2 = 0.73 (left: 0.73) -> 0.73 + 2 = 2.73",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 12 = 19 (left: 2 19 13) -> 19 / 13 = 1.46 (left: 1.46) -> 1.46 / 2 = 0.73 (left: 0.73) -> 0.73 + 2 = 2.73 -> 0.73 * 2 = 1.46 (left: 1.46 2.73)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21 -> 21 - 12 = 9 (left: 9 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 12 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 12 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Please provide a set of numbers to continue with the calculations."
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable. -> Please provide a set of numbers to continue with the calculations. -> - Add two numbers together",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 - 9 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There is only one number given, so there are no possible next steps to perform any operations. -> There are no possible next steps as there is only one number given. -> Not applicable. -> Please provide a set of numbers to continue with the calculations. -> - Add two numbers together -> - Multiply two numbers together ",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> 5.33 - 8 = -2.67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Equation is already solved."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved. -> Equation is already solved. No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number provided (5.33), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 28."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> There are no possible next steps for the input 28. -> 28 / 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Equation is already solved."
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved. -> Equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38) -> 10 * 38 = 380 (left: 380)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 * 12 = 768 (left: 768) -> 7 + 6 + 8 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 5.33 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 5.33 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number. -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is a single number. -> There are no possible next steps for the input 5.33 as it is a single number. -> There are no possible next steps for the input 5.33 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 8 + 20 = 28 (left: 28) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 12 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 12 =  -> 8 * 12 = 96",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 12 =  -> 8 * 12 = 96 -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Equation is already solved."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps for the input 28."
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> There are no possible next steps for the input 28. -> There are no possible next steps for the input 28.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> There are no possible next steps for the input 28. -> There are no possible next steps for the input 28. -> 28 - 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Equation is already solved."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 / 8 = 1.5 ( -> - There are no possible next steps as the equation is already solved. -> Equation is already solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) -> There are no possible next steps for the input 28.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5.33 - 8 = -2.67"
                }
            },
            "Step 7": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> 5.33 - 8 = -2.67 -> 5.33 + 8 = 13.33 (left: 13.33 - 2.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> 5.33 - 8 = -2.67 -> 5.33 + 8 = 13.33 (left: 13.33 - 2.67) -> 13.33 - 2.67 = 10.66 (left: 10.66)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number provided (5.33"
                }
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 4"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 11"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "0.375 8"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8) -> 0.375 * 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 3 = 12 (left: 12 4) -> 12 / 4 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: -> Please provide the numbers so I can generate the possible next steps for you.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: -> Please provide the numbers so I can generate the possible next steps for you. -> There are no numbers provided. Please input numbers so I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.142857142857143 * 2 = 6.285714285714286"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143) -> 3.142857142857143 * 2 = 6.285714285714286 -> 6.285714285714286 / 2 = 3.142857142857143",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143) -> 3.142857142857143 * 2 = 6.285714285714286 -> 6.285714285714286 / 2 = 3.142857142857143 -> 6.285714285714286 + 2 = 8.285714285714286",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Possible next steps: -> There are no possible next steps as the input provided does not have any operations to perform. -> There are no possible next steps as the input provided does not have any operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 16 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 16 13) -> 16 * 13 = 208 (left: 208)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 16 13) -> 16 * 13 = 208 (left: 208) -> 2 + 0 ^ 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 + 0 ^ 8 = "
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 16 13) -> 16 * 13 = 208 (left: 208) -> 2 + 0 ^ 8 =  -> 2 + 0 = 2 (left: 2 ^ 8 =)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 16 13) -> 16 * 13 = 208 (left: 208) -> 2 + 0 ^ 8 =  -> 2 + 0 = 2 (left: 2 ^ 8 =) -> 2 ^ 8 = 256",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4) -> 1.33 + 4 = 5.33 (left: 5.33) -> There are no possible next steps for the input 5.33 as it is already a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 / 7 = 1.29 (left: 1.29 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 / 7 = 1.29 (left: 1.29 13) -> 13 - 1.29 = 11.71 (left: 11.71)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 / 7 = 1.29 (left: 1.29 13) -> 13 - 1.29 = 11.71 (left: 11.71) -> 11.71 * 2 = 23.42 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3.142857142857143 * 2 = 6.285714285714286"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143) -> 3.142857142857143 * 2 = 6.285714285714286 -> 6.285714285714286 / 2 = 3.142857142857143",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143) -> 3.142857142857143 * 2 = 6.285714285714286 -> 6.285714285714286 / 2 = 3.142857142857143 -> 3.142857142857143 - 2 = 1.1428571428571428 (left: 1.1428571428571428)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as the input provided does not have any operations to perform."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: 5 10 15 -> 10 * 15 = 150 (left: 10 150) -> 150 / 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22) -> 22 / 7 = 3.142857142857143 (left: 3.142857142857143) -> 3.142857142857143 * 2 = 6.285714285714286",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no numbers provided. Please input numbers so I can generate possible next steps for you."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: -> Please provide the numbers so I can generate the possible next steps for you. -> There are no numbers provided. Please input numbers so I can generate possible next steps for you. -> No numbers provided. Please input numbers first.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> Input: -> Please provide the numbers so I can generate the possible next steps for you. -> There are no numbers provided. Please input numbers so I can generate possible next steps for you. -> No numbers provided. Please input numbers first. -> No numbers provided. Please input numbers first.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 / 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 * 40 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 14"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> Input: 6 8 9 14 -> 14 - 8 = 6 (left: 6 8 14) -> 14 - 6 = 8 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.6666666666666666 / 2 = 0.3333333333333333"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 5 12"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 5 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> There are no possible next steps for the input 10.8 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> Input: 6 8 9 14",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> Input: 6 8 9 14 -> 14 - 8 = 6 (left: 6 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> Input: 6 8 9 14 -> 14 - 8 = 6 (left: 6 8 14) -> 14 - 6 = 8 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 + 40 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 40"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 0.8 * 10 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 2 = 0.3333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.6666666666666666 / 2 = 0.3333333333333333"
                }
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 2 = 0.3333333333333333 -> 0.3333333333333333 * 2 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10 -> 10 + 10 = 20 (left: 10 20) -> 20 - 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 2 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> 72/2 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 + 40 = 42",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 + 40 = 42 -> 42 - 40 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 2"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12) -> 72 - 18 = 54 (left: 54 6 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12) -> 72 - 18 = 54 (left: 54 6 2 -> 54 / 2 = 27 (left: 27 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 40"
                }
            },
            "Step 7": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 * 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2 40) -> 2 + 40 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 4 5 2) -> 5 - 2 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333) -> There are no possible next steps for the input 0.7333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 / 2 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "10 + 10 = 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 16 = 32 (left: 16 32) -> 32 / 16 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 0.7333 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 1 + 14 = 15 (left: 11 15) -> 11 / 15 = 0.7333 (left: 0.7333) -> There are no possible next steps for the input 0.7333 as it is already a single number. -> There are no possible next steps for the input 0.7333 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 14 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 14 - 1 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 14 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 16 = 32 (left: 16 32) -> 16 + 32 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2 -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 16 = 32 (left: 16 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 16 = 32 (left: 16 32) -> 16 * 32 = 512 (left: 512)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 + 10 = 20"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 20)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 7 / 3 = 2 (left: 2 11) -> 11 * 2 = 22 (left: 2 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 2 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 + 9 = 10 (left: 10) -> 10 + 2 = 12 -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 16 = 32 (left: 16 32) -> 32 - 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "16 32"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 16 = 32 (left: 16 32) -> 32 / 16 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 - 3 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> 56 / 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 9 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> There is no possible next step with the input: 9.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 1 * 9 = 9 (left: 9) -> There is no possible next step with the input: 9. -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 0.7333 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16 32"
                }
            },
            "Step 7": {
                "Step": "2 + 7 = 9 (left: 1 9  -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 16 = 32 (left: 16 32) -> 16 * 2 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 + 10 = 20"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> 11 / 3 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 10 20)",
                "Pruning": null
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 11 + 2 = 13 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 30"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 5 * 10 = 50 (left: 50",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 5 * 10 = 50 (left: 50 -> There are no possible next steps with just the number 50. Please provide additional numbers for calculations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 5 * 10 = 50 (left: 50 -> There are no possible next steps with just the number 50. Please provide additional numbers for calculations. -> 50 - 10 = 40 (left: 10 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.5556 * 2 = 3.1112"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 \u2248 1.5556 (left: 1.5556) -> 1.5556 * 2 = 3.1112 -> 1.5556 - 2 = -0.4444 (left: -0.4444 3.1112)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 \u2248 1.5556 (left: 1.5556) -> 1.5556 * 2 = 3.1112 -> 1.5556 - 2 = -0.4444 (left: -0.4444 3.1112) -> -0.4444 + 3.1112 = 2.6668 (left: 2.6668)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "No input provided. Please provide a set of numbers to generate possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> Input: -> There is no input provided. Please provide a set of numbers to generate possible next steps. -> No input provided. Please provide a set of numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) ->  -> There are no more possible next steps with the current input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) ->  -> There are no more possible next steps with the current input. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 39."
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> There are no possible next steps with the input 39. -> There are no possible next steps with the input 39.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> There are no possible next steps with the input 39. -> There are no possible next steps with the input 39. -> There are no possible next steps with the input 39.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 / 14 = 0.642857 (left: 0.642857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 / 14 = 0.642857 (left: 0.642857) -> 0.642857 * 2 = 1.285714 (left: 1.285714)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 30"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57) -> 7 - 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) ->  -> There are no more possible next steps with the current input. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) ->  -> There are no more possible next steps with the current input. -> No possible next steps. -> There are no possible next steps with the given numbers. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 39."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 * 9 = 11.97 (left: 11.97) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 \u2248 1.5556 (left: 1.5556)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 \u2248 1.5556 (left: 1.5556) -> 1.5556 * 2 = 3.1112",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.5556 * 2 = 3.1112"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 \u2248 1.5556 (left: 1.5556) -> 1.5556 * 2 = 3.1112 -> 1.5556 - 2 = -0.4444 (left: -0.4444)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 39."
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> There are no possible next steps with the input 39. -> There are no possible next steps with the input 39.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> There are no possible next steps with the input 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 39."
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> There are no possible next steps with the input 39. -> There are no possible next steps with the input 39.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 * 6 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> There are no possible next steps with the input 39. -> There are no possible next steps with the input 39. -> There are no possible next steps with the input 39.",
                "Pruning": null
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 9 / 6 = 1.5 (left: 1.5 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 + 10 = 16 (left: 16 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 + 10 = 16 (left: 16 7) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 + 10 = 16 (left: 16 7) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856) -> 2.2857142857142856 + 2 = 4.2857142857142856",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-140 + 2 = -138"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138 -> -140 * 2 = -280",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138 -> -140 * 2 = -280 -> -280 + 2 = -278",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 120 13"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 120 13) -> 13 + 6 = 19 (left: 120 19) -> 120 * 19 = 2280 (left: 19 2280) -> 2280 / 19 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 * 7 = 42 (left: 10 42)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 * 7 = 42 (left: 10 42) -> 42 - 10 = 32 (left: 32 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 * 7 = 42 (left: 10 42) -> 42 - 10 = 32 (left: 32 2) -> 32 * 2 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.5 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-140 + 2 = -138"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138 -> -138 / 2 = -69 (left: -69 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138 -> -138 / 2 = -69 (left: -69 2) -> -69 - 2 = -71 (left: -71)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.5 36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 4": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 - 13 = -7 (left: -7 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 - 13 = -7 (left: -7 22) -> -7 / 22 = -0.3181818181818182 (left: -0.3181818181818182)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 - 13 = -7 (left: -7 22) -> -7 / 22 = -0.3181818181818182 (left: -0.3181818181818182) -> -0",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "-140 + 2 = -138"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.08571428571428572 - 2 = -1.9142857142857143"
                }
            },
            "Step 7": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 / 10 = 0.6 (left: 0.6 7) -> 0.6 / 7 = 0.08571428571428572 (left: 0.08571428571428572) -> 0.08571428571428572 - 2 = -1.9142857142857143 -> 2 / 0.08571428571428572 = 23.333333333333332 (left: 23.333333333333332)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.5 36"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 9 / 6 = 1.5 (left: 1.5 36) -> 1.5 * 36 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "-140 + 2 = -138"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16) -> 25 + 16 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) ->  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) ->  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 36"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 9 / 6 = 1.5 (left: 1.5 36) -> 1.5 * 36 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.5 36"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496) -> 9 / 6 = 1.5 (left: 1.5 36) -> 36 - 1.5 = 34.5 (left: 34.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1.5 36"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 13 22"
                }
            },
            "Step 1": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 + 13 = 19 (left: 19 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 + 13 = 19 (left: 19 22) -> 19 - 22 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 6 13 22) -> 6 + 13 = 19 (left: 19 22) -> 19 - 22 = -3 (left: -3) -> -3 - 2 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 13 22"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 10 7"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 / 10 = 0.6 (left: 0.6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 / 10 = 0.6 (left: 0.6 7) -> 0.6 / 7 = 0.08571428571428572 (left: 0.08571428571428572)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 10 7) -> 6 / 10 = 0.6 (left: 0.6 7) -> 0.6 / 7 = 0.08571428571428572 (left: 0.08571428571428572) -> 0.08571428571428572 - 2 = -1.9142857142857143",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-140 + 2 = -138"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 - 156 = -140 (left: -140) -> -140 + 2 = -138 -> -140 / 140 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "13 - 6 = 7 (left: 6 10 7) ->  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible -> 5. Possib + le = Possible -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 9 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-4 * 5 = -20"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 - 5 = -9 (left: -9 * 5 = -45)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 - 5 = -9 (left: -9 * 5 = -45) -> -9 - 5 = -14 (left: -14 * 5 = -70)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 - 5 = -9 (left: -9 * 5 = -45) -> -9 - 5 = -14 (left: -14 * 5 = -70) -> -5 * -14 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "-4 * 5 = -20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24 96 1.5"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 1.5 * 64 = 96 (left: 24 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 1.5 * 64 = 96 (left: 24 96) -> 24 + 96 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-4 * 5 = -20"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 * -5 = 20 (left: 20 = -20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 * -5 = 20 (left: 20 = -20) -> 20 + (-20) = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 6."
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24 96 1.5"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 96 / 24 = 4 (left: 4 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 96 / 24 = 4 (left: 4 1.5) -> 4 + 1.5 = 5.5 (left: 1.5 5.5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136) -> 1 + 3 + 6 = 10 (left: 10 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-4 * 5 = -20"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 - 5 = -9 (left: -9 * 5 = -45, -20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 - 5 = -9 (left: -9 * 5 = -45, -20) -> -9 - 5 = -14 (left: -14 -45, -20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 - 5 = -9 (left: -9 * 5 = -45, -20) -> -9 - 5 = -14 (left: -14 -45, -20) -> -14 - 45 = -59 (left: -59, -20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24 96 1.5"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 96 - 24 = 72 (left: 72 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 96 - 24 = 72 (left: 72 1.5) -> 72 / 1.5 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 4.5."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-4 * 5 = -20"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 * (-5) = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 6."
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24 96 1.5"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 1.5 * 24 = 36 (left: 36 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 1.5 * 24 = 36 (left: 36 96) -> 96 - 36 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "10 6"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-4 * 5 = -20"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 + 5 = 1 (left: 1 * 5 = 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 - 4 = 5 (left: 5 9 9) -> 9 * 5 = 45 -> 5 - 9 = -4 (left: -4 * 5 = -20) -> -4 + 5 = 1 (left: 1 * 5 = 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 4.5."
                }
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 - 1 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24 96 1.5"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 96 / 24 = 4 (left: 4 36 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> There are no possible next steps with the input 6. -> 6 * 2 = 12 (left: 8 12) -> 20 + 4 = 24 (left: 24 96 1.5) -> 96 / 24 = 4 (left: 4 36 1.5) -> 36 - 4 = 32 (left: 32 1.5)",
                "Pruning": null
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 - 10 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 - 10 ="
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 - 10 = -> 1 - 10 = -9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 - 10 = -> 1 - 10 = -9 -> 1 * -10 = -10 (left: -9 -10)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 11"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 - 5 = -",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 - 5 = - -> 4 - 5 = -1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "13.75"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 * 11 = 55 (left: 4 55) -> 55 / 4 = 13.75 (left: 13.75) -> 13.75 * 2 = 27.5 (left: 27.5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "12 12"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.4 * 2 = 2.8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1.4 * 2 = 2.8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8 -> 1.4 + 2 = 3.4 (left: 3.4 * 2 = 6.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8 -> 1.4 + 2 = 3.4 (left: 3.4 * 2 = 6.8) -> 3.4 / 2 = 1.7 (left: 1.7 * 2 = 3.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.7142857142857143"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 5 7) -> 5 / 7 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 * 2 = 1.4285714285714286",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 5 7) -> 5 / 7 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 * 2 = 1.4285714285714286 -> 0.7142857142857143 + 2 = 2.7142857142857144",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 11"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 5 7) -> 5 / 7 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.7 * 2 = 3.4"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8 -> 1.4 + 2 = 3.4 (left: 3.4 * 2 = 6.8) -> 3.4 / 2 = 1.7 (left: 1.7 * 2 = 3.4) -> 1.7 + 2 = 3.7 (left: 3.7 = 3.4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8 -> 1.4 + 2 = 3.4 (left: 3.4 * 2 = 6.8) -> 3.4 / 2 = 1.7 (left: 1.7 * 2 = 3.4) -> 1.7 + 2 = 3.7 (left: 3.7 = 3.4) -> 3.7 / 3.4 = 1.088235294117647 (left: 1.088235294117647)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "12 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16) -> 16 - ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 + 11 = 16 (left: 4 16) -> 16 -  -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 / 5 = 0.8 ( -> 3 + 9 = 12 (left: 5 7 12) -> 5 + 7 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 5 11"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 * 11 = 55 (left: 4 55)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 5 * 11 = 55 (left: 4 55) -> 55 / 4 = 13.75 (left: 13.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 - 5 = -1"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 4 - 5 = - -> 4 - 5 = -1 -> -5 / 4 = -1.25 (left: -1.25)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 5 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "33 + 2 = 35"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24) -> 9 + 24 = 33 (left: 33) -> 33 + 2 = 35 -> 33 / 2 = 16.5 (left: 16.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 "
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667) -> There are no possible next steps for the number 2.66667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 + 4 = 8"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the number 2.66667 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667) -> There are no possible next steps for the number 2.66667 as it is already a single number. -> There are no possible next steps for the number 2.66667 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667) -> There are no possible next steps for the number 2.66667 as it is already a single number. -> There are no possible next steps for the number 2.66667 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no more possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number. -> Possible next steps: N/A -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number. -> Possible next steps: N/A -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number. -> Possible next steps: N/A",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number. -> Possible next steps: N/A -> There are no more possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number. -> Possible next steps: N/A -> There are no more possible next steps with the given input. -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There are no possible next steps as the input is already a single number."
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 2.66667 + 8 = 10.66667 (left: 10.66667) -> There are no possible next steps as the input is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps."
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11) -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 21.36. This is already a complete number."
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36) -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number. -> There are no possible next steps for the input 21.36. This is already a complete number.",
                "Pruning": null
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 7 * 7 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 2 16"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 2 9.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 9.5"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 2 9.5) -> 2 * 9.5 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an equation or expression."
                }
            },
            "Step 8": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 1 + 2 = 3 (left: 3 16) -> 16 / 3 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number and not an equation or expression. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate on. The final result is 18."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 13 / 3 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 4": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 2 * 2 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 2 * 2 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 2 * 2 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "117 + 2 = 119"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 9.5"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 2 9.5) -> 9.5 - 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 9.5"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 2 9.5) -> 2 + 9.5 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 9.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 / 3 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 * 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 3 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> 20 - 8 = 12 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "117 + 2 = 119"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 9.5"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 2 9.5) -> 2 + 9.5 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "117 + 2 = 119"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119 -> 119 + 8 = 127 (left: 2 8 127)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 + 3 = 6 (left: 6 13) -> 13 - 6 = 7 (left: 7) -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 2 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 2 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 - 1 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 - 1 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 - 1 = 9 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate on. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 9.5"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 2 9.5) -> 2 * 9.5 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 9.5"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 2 9.5) -> 9.5 / 2 = 4.75 (left: 4.75)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13) -> 9 * 13 = 117 (left: 117) -> 117 + 2 = 119",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2 16"
                }
            },
            "Step 4": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 1 + 2 = 3 (left: 3 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 1 + 2 = 3 (left: 3 16) -> 16 / 3 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 1 + 2 = 3 (left: 3 16) -> 16 / 3 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 9.5"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 + 13 = 19 (left: 1 19) -> 19 / 1 = 19 (left: 19) -> 19 / 2 = 9.5 (left: 2 9.5) -> 2 + 9.5 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 5.33 as it is a single number and not an equation or expression."
                }
            },
            "Step 8": {
                "Step": "3 + 13 = 16 (left: 1 2 16) -> 1 + 2 = 3 (left: 3 16) -> 16 / 3 = 5.33 (left: 5.33) -> There are no possible next steps with the input 5.33 as it is a single number and not an equation or expression. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "117 + 2 = 119"
                }
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9 -> 4 + 3 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> Input: 3 4 9 -> 4 + 3 = 7 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 + 6 = 12 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 -> 6^6 = 46656 (left: 46656)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "46656"
                }
            },
            "Step 7": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 -> 6^6 = 46656 (left: 46656) -> 46656 / ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 -> 6^6 = 46656 (left: 46656) -> 46656 /  -> 46656 / 6 = 7776 (left: 7776)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no numbers provided in the input. Please provide a valid input with numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "46656"
                }
            },
            "Step 7": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 -> 6^6 = 46656 (left: 46656) -> 46656 + 2 = 46658",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 -> 6^6 = 46656 (left: 46656) -> 46656 + 2 = 46658 -> 46658 * 2 = 93316",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 8": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "-1 8"
                }
            },
            "Step 5": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> 8 - (-1) = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 0."
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> There are no possible next steps with the input of 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no numbers provided in the input. Please provide a valid input with numbers."
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Input: 1 2 6 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Input: 1 2 6 3 -> 1 + 2 = 3 (left: 3 6 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Input: 1 2 6 3 -> 1 + 2 = 3 (left: 3 6 3) -> 6 / 3 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to calculate the next steps. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There is only one number, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27) -> 2 * 27 = 54 (left: 54) -> There is only one number, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide more than one number in order to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> Input: 3 7 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 - 2 = 7 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 - 2 = 7 (left: -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 9 - 2 = 7 (left: -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps. -> Sorry, there are no possible next steps provided as the input did not contain at least two numbers. Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 3 9"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Input: 4 7 10",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Input: 4 7 10 -> 7 / 4 = 1.75 (left: 1.75 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> Input: 4 7 10 -> 7 / 4 = 1.75 (left: 1.75 10) -> 1.75 * 10 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Input: 3 7 7"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> Input: 3 7 7 -> 7 - 3 = 4 (left: 3 4 ",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27) -> 2 * 27 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27) -> 2 * 27 = 54 (left: 54) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10.5 10.5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 10.5 10.5) -> 10.5 - 10.5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 5 + 3 = 8 (left: 11 - 3 = 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 5 + 3 = 8 (left: 11 - 3 = 8) -> 11 / 3 = 3.6666667 (left: 3.6666667 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 1 6 8) -> 6 * 1 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 1 6 8) -> 6 * 1 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10.5 10.5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 10.5 10.5) -> 10.5 + 10.5 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3.6666667 8"
                }
            },
            "Step 8": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 11 - 3 = 8 (left: -> 5 + 3 = 8 (left: 11 - 3 = 8) -> 11 / 3 = 3.6666667 (left: 3.6666667 8) -> 3.6666667 * 8 = 29.3333336 (left: 29.3333336)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "21 / 2 = 10.5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 10.5 10.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10.5 10.5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 10.5 10.5) -> 10.5 + 10.5 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10.5 10.5"
                }
            },
            "Step 8": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 10.5 10.5) -> 10.5 / 10.5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11) -> 11 / 1.5 = 7.33333333333 (left: 7.33333333333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10.5 10.5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 10.5 10.5) -> 10.5 + 10.5 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "16 0"
                }
            },
            "Step 8": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3.6666667 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "10.5 10.5"
                }
            },
            "Step 7": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 / 2 = 10.5 (left: 10.5 10.5) -> 10.5 - 10.5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "16 0"
                }
            },
            "Step 8": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 16 0) -> 16 - 0 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13) -> 13 + 1.7 = 14.7 (left: 14.7 -> There are no possible next steps for the input 14.7 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 4 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 4 17) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 4 17) -> 3 + 9 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17) -> 130 - 17 = 113 (left: 113) -> 1 * 1 = 1 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 14"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10 -> 10 / 5 = 2 (left:  -> - Multiplying the first two numbers: 2 * 8 = 16 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 14.7 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40) -> 40 + 2 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 -> 1.7 * 8 = 13.6 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 -> 1.7 * 8 = 13.6 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17) -> 130 - 17 = 113 (left: 113) -> 1 * 1 = 1 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 8"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 4 17) -> 3 + 9 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30) -> 5 / 5 = 1 -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 13 17"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17 23) -> 17 * 23 = 391 (left: 391)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17 23) -> 17 * 23 = 391 (left: 391) -> 3 * 1 = 3 (left: 3 9 1)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17) -> 130 - 17 = 113 (left: 113) -> 1 * 1 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 17."
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769 (left: 0.769 17) -> 0.769 + 17 = 17.769 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10) -> 10 * 8 = 80 (left: 80) -> 80 / 2 = 40 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 12 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769 (left: 0.769 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769 (left: 0.769 17) -> 0.769 + 17 = 17.769 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 / 13 = 0.769 (left: 0.769 17) -> 0.769 + 17 = 17.769 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17) -> 130 - 17 = 113 (left: 113) -> 1 * 1 = 1 (left: 1 3) -> 5 + 2 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17) -> 130 - 17 = 113 (left: 113) -> 1 * 1 = 1 (left: 1 3) -> 5 + 2 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10 -> 10 / 5 = 2 (left: ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> Input: 5 6 8 10 -> 10 / 5 = 2 (left:  -> - Multiplying the first two numbers: 2 * 8 = 16 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17) -> 130 - 17 = 113 (left: 113)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17) -> 130 - 17 = 113 (left: 113) -> 1 * 1 = 1 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 130 17) -> 130 - 17 = 113 (left: 113) -> 1 * 1 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "4 8"
                }
            },
            "Step 8": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 4 17) -> 3 + 9 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 17."
                }
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 * 2 = 2.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 1."
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1. -> There are no possible next steps with the input of 1.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to find possible next steps. -> - Please provide a valid set of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> Input:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> Input: -> There is no specific input provided for the next steps. If you provide a set of numbers, I can help generate possible next steps for you.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> Input: -> There is no specific input provided for the next steps. If you provide a set of numbers, I can help generate possible next steps for you. -> Please provide a set of numbers for me to generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> None",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> Possible -> It seems like the input you provided is not clear. Can you please provide a clear set of numbers for me to calculate the next steps? Thank you.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> Possible -> It seems like the input you provided is not clear. Can you please provide a clear set of numbers for me to calculate the next steps? Thank you. -> I'm here to help with calculations. Please provide a set of numbers for me to work with. Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 4 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "None, as there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 / 3 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 / 3 = 2 (left: 2 4) -> 2 + 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 / 3 = 2 (left: 2 4) -> 2 + 4 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, as there is only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.33 * 2 = 2.66"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 * 2 = 2.66 -> 1.33 / 2 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 3 4 6) -> 6 - 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33) -> 1.33 * 2 = 2.66 -> 1.33 / 2 =  -> 0.665",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.33 * 2 = 2.66"
                }
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 *",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 5 * -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 12 17"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 11 / 6 = 1.83333 (left: 1.83333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 11 / 6 = 1.83333 (left: 1.83333) -> 1.83333 + 2 = 3.83333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps. -> No possible next steps. -> None",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "55 + 2 = 57"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 / 17 = 1.0588235294117647 (left: 1.0588235294117647) -> 1.0588235294117647 - 2 = -0.9411764705882353",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 * 12 = 120 (left: 42 120)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 * 12 = 120 (left: 42 120) -> 120 - 42 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 * 12 = 120 (left: 42 120) -> 120 - 42 = 78 (left: 78) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one number provided, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.83333 + 2 = 3.83333"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 11 / 6 = 1.83333 (left: 1.83333) -> 1.83333 + 2 = 3.83333 -> 2 - 1.83333 = 0.16667 (left: 0.16667 3.83333)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 22 - 42 = -20 (left: -20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 22 - 42 = -20 (left: -20) -> -20 + 2 = -18 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "55 + 2 = 57"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.5238095238095238 + 2 = 2.5238095238095237"
                }
            },
            "Step 7": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 22 / 42 = 0.5238095238095238 (left: 0.5238095238095238) -> 0.5238095238095238 + 2 = 2.5238095238095237 -> 2.5238095238095237 * 2 = 5.047619047619047",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 22 / 42 = 0.5238095238095238 (left: 0.5238095238095238) -> 0.5238095238095238 + 2 = 2.5238095238095237 -> 2.5238095238095237 * 2 = 5.047619047619047 -> 2.5238095238095237 - 2 = 0.5238095238095237 (left: 0.5238095238095237)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "55 + 2 = 57"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 + 17 = 89 (left: 89)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 + 17 = 89 (left: 89) -> 89 - 8 = 81 (left: 81) ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "55 + 2 = 57"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57 -> 55 - 2 = 53 (left: 53 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 * 12 = 72 (left: 72 17) -> 72 - 17 = 55 (left: 55) -> 55 + 2 = 57 -> 55 - 2 = 53 (left: 53 2) -> 53 / 2 = 26.5 (left: 26.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.83333 + 2 = 3.83333"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 - 6 = 6 (left: 6 17) -> 6 * 17 = 102 (left: 102) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 12 42"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 12 42"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 22 / 42 = 0.5238095238095238 (left: 0.5238095238095238)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 10 12 42) -> 10 + 12 = 22 (left: 22 42) -> 22 / 42 = 0.5238095238095238 (left: 0.5238095238095238) -> 0.5238095238095238 + 2 = 2.5238095238095237",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.83333 + 2 = 3.83333"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 11 / 6 = 1.83333 (left: 1.83333) -> 1.83333 + 2 = 3.83333 -> 3.83333 * 2 = 7.66666 (left: 7.66666)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 6 + 12 = 18 (left: 18 17) -> 18 - 17 = 1 (left: 1) -> There is only one number provided, so there are no possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 - 8 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 - 8 = 48 (left: 48 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 - 8 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 - 8 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60) -> There are no possible next steps with the input of 60 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "21.14285714288 * 2 = 42.28571428576"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 1.14285714286 * 8 = 9.14285714288 (left: 9.14285714288 12) -> 9.14285714288 + 12 = 21.14285714288 (left: 21.14285714288) -> 21.14285714288 * 2 = 42.28571428576 -> 21.14285714288 - 2 = 19.14285714288",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 1.14285714286 * 8 = 9.14285714288 (left: 9.14285714288 12) -> 9.14285714288 + 12 = 21.14285714288 (left: 21.14285714288) -> 21.14285714288 * 2 = 42.28571428576 -> 21.14285714288 - 2 = 19.14285714288 -> 21.14285714288 + 2 = 23.14285714288",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "56 8 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.14285714286 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 8 * 1.14285714286 = 9.14285714286 (left: 9.14285714286 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 8 * 1.14285714286 = 9.14285714286 (left: 9.14285714286 12) -> 12 / 9.14285714286 = 1.3125 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 8 * 1.14285714286 = 9.14285714286 (left: 9.14285714286 12) -> 12 / 9.14285714286 = 1.3125 ( -> 12 * 9.14285714286 = 109.71428571432 (left: 109.71428571432 1.3125)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 60 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 - 8 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60) -> There are no possible next steps with the input of 60 as it is a single number. -> There are no possible next steps with the input of 60 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 - 8 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60) -> There are no possible next steps with the input of 60 as it is a single number. -> There are no possible next steps with the input of 60 as it is a single number. -> There are no possible next steps with the input of 60 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 / 8 = 7 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 84 + 8 = 92 (left: 92)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1.14285714286 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.14285714286 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 1.14285714286 * 8 = 9.14285714288 (left: 9.14285714288 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 1.14285714286 * 8 = 9.14285714288 (left: 9.14285714288 12) -> 9.14285714288 + 12 = 21.14285714288 (left: 21.14285714288)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 1.14285714286 * 8 = 9.14285714288 (left: 9.14285714288 12) -> 9.14285714288 + 12 = 21.14285714288 (left: 21.14285714288) -> 21.14285714288 * 2 = 42.28571428576",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 60 as it is a single number."
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 - 8 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60) -> There are no possible next steps with the input of 60 as it is a single number. -> There are no possible next steps with the input of 60 as it is a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 - 8 = 48 (left: 48 12) -> 48 + 12 = 60 (left: 60) -> There are no possible next steps with the input of 60 as it is a single number. -> There are no possible next steps with the input of 60 as it is a single number. -> There are no possible next steps with the input of 60 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given, so there are no possible next steps to take.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.14285714286 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 12 - 8 = 4 (left: 1.14285714286 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 12 - 8 = 4 (left: 1.14285714286 4) -> 1.14285714286 + 4 = 5.14285714286 (left: 5.14285714286)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 12 - 8 = 4 (left: 1.14285714286 4) -> 1.14285714286 + 4 = 5.14285714286 (left: 5.14285714286) -> 5.14285714286 * 5 = 25.7142857143 (left: 25.7142857143)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to take."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "109.71428571432 1.3125"
                }
            },
            "Step 7": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 8 * 1.14285714286 = 9.14285714286 (left: 9.14285714286 12) -> 12 / 9.14285714286 = 1.3125 ( -> 12 * 9.14285714286 = 109.71428571432 (left: 109.71428571432 1.3125) -> 109.71428571432 * 1.3125 = 143.8553469388 (left: 1.3125",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to take."
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given, so there are no possible next steps to take. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 + 1.5 = 9.5 (left: 9.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = 1.5 (left: -> 8 + 1.5 = 9.5 (left: 9.5) -> There are no possible next steps for the input 9.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1.14285714286 8 12"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 1.14285714286 * 8 = 9.14285714288 (left: 9.14285714288 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 1.14285714286 * 8 = 9.14285714288 (left: 9.14285714288 12) -> 12 - 9.14285714288 = 2.85714285712 (left: 2.85714285712)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12) -> 1.14285714286 * 8 = 9.14285714288 (left: 9.14285714288 12) -> 12 - 9.14285714288 = 2.85714285712 (left: 2.85714285712) -> 2.85714285712 * 2 = 5.71428571424 (left: 5.71428571424)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to take."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to take."
                }
            },
            "Step 7": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given, so there are no possible next steps to take. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12) -> 64 / 12 = 5.33 (left: 5.33) -> There is only one number given, so there are no possible next steps to take. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29) -> There are no possible next steps with just the number 29.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 17"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 24) -> 24 / 2.66666666667 = 9 (left: 9) -> 9 + 8 = 17 (left: 8 17) -> 8 + 17 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2.625 / 2 = 1.3125"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 -> 2 / 2.625 = 0.7619",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 24) -> 24 / 2.66666666667 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 24) -> 24 / 2.66666666667 = 9 (left: 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2.625 / 2 = 1.3125"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125 -> 2.625 * 2 = 5.25 (left: 5.25)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 17"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 24) -> 24 / 2.66666666667 = 9 (left: 9) -> 9 + 8 = 17 (left: 8 17) -> 8 * 17 = 136 (left: 136)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 56"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 10 5"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Input: 10 5 -> 10 * 5 = 50 (left: 5 50)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Input: 10 5 -> 10 * 5 = 50 (left: 5 50) -> 5 + 50 = 55 (left: 50)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 17"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192) -> 1 * 9 + 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2.625 / 2 = 1.3125"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with just the number 29."
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29) -> There are no possible next steps with just the number 29. -> 29 + 2 = 31",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29) -> There are no possible next steps with just the number 29. -> 29 + 2 = 31 -> 2 * 29 = 58 (left: 58 31)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 21 / 8 = 2.625 (left: 2.625) -> 2.625 / 2 = 1.3125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.33 6 8"
                }
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8) -> 1.33 + 6 = 7.33 (left: 7.33 8) -> 7.33 * 8 = 58.64 (left: 58.64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 17"
                }
            },
            "Step 7": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 24) -> 24 / 2.66666666667 = 9 (left: 9) -> 9 + 8 = 17 (left: 8 17) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Input: 10 5"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> Input: 10 5 -> 10 / 5 = 2 (left: 2 5)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 3 - 5 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54 11) -> 20 - 5 = 15 (left: 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54 11) -> 20 - 5 = 15 (left: 15 -> 15 - 2 = 13 (left: 13 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54 11) -> 20 - 5 = 15 (left: 15 -> 15 - 2 = 13 (left: 13 15) -> 13 - 15 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 - 3 = 2 (left:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "15"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 54 11) -> 20 - 5 = 15 (left: 15 -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 11 + 54 = 65 (left: 65) -> There is only one number, so there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 - 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 - 2 = 5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 11"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 9 = 2 (left: 7 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 11 - 9 = 2 (left: 7 2) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 * 6 = 54 (left: 11 54) -> 11 * 54 = 594 (left: 594) -> 5 * 9 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 9 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 - 3 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17) -> Input: 3 9 5 -> 5 - 3 = 2 (left: -> 5 * 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 11"
                }
            },
            "Step 5": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 - 7 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 9 - 7 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 7": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 + 9 = 16 (left: 16 11) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 8 + 9 = 17 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 64"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> 66 / 2 = 33",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 12 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 64"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> 2 * 64 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 64"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> 64 - 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with just the number 66."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33) -> 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> 3 * 11 = 33 (left: 6 33) -> 10 -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 * 3 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 * 3 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 * 3 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432) -> 4 + 3 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 64"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> 3 * 9 = 27 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> 3 * 9 = 27 (left: -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "7 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 2 9 13) -> 13 + 2 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((6 + 3) + 2) + 15 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with just the number 66."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 1.33 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is already a single number. -> There are no possible next steps for the input 1.33 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is already a single number. -> There are no possible next steps for the input 1.33 as it is already a single number. -> There are no possible next steps for the input 1.33 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 / 1 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 66."
                }
            },
            "Step 7": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 2 = 11 (left: 6 11  -> 6 * 11 = 66 (left: 66) -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66. -> There are no possible next steps with just the number 66.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 20 - 4 = 16 (left: 16 = 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8) -> -5 * 8 = -40 (left: -40)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5) -> 5 / 3 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 12 / 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8) -> -5 + 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 10 12"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 2 10 12) -> 12 - 2 = 10 (left: 2 10) -> 2 + 10 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> There are no possible next steps with the input of 32.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16 = 20"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 20 - 4 = 16 (left: 16 = 20) -> 20 / 16 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "16 = 20"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 20 - 4 = 16 (left: 16 = 20) -> 16 * 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 20 - 4 = 16 (left: 16 = 20) -> 16 * 20 -> 16 - 20 = -4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> 32 / 2 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "-5 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: -> 12 / 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8) -> -5 / 8 = -0.625 (left: -0.625)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input -3. -> There are no possible next steps with the input -3.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> 12 / (-1) = -12 (left: -12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12) -> 12 / (-1) = -12 (left: -12) -> There are no possible next steps with the input -12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16 = 20"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 * 5 =  -> 4 * 5 = 20 -> 20 - 4 = 16 (left: 16 = 20) -> 20 / 16 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 32."
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> There are no possible next steps with the input of 32. -> There are no possible next steps with the input of 32.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 + 12 = 32 (left: 32) -> There are no possible next steps with the input of 32. -> There are no possible next steps with the input of 32. -> There are no possible next steps with the input of 32.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps from the current input."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps from the current input."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> None. The input does not have any possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> There are no possible next steps from the current input. -> None. The input does not have any possible next steps. -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform any operations."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24 13"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846153846153846 (left: 1.846153846153846)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 / 13 = 1.846153846153846 (left: 1.846153846153846) -> 1.846153846153846 - 1 = 0",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with only one number. -> - Try a different combination of numbers",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with only one number. -> - Try a different combination of numbers -> 4 * 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 8 13"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> No possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with only one number. -> Division: 8 / 8 = 1 (left: 2 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with only one number. -> Division: 8 / 8 = 1 (left: 2 1) -> 2 * 1 = 2 (left: 1 2) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with only one number. -> Division: 8 / 8 = 1 (left: 2 1) -> 2 * 1 = 2 (left: 1 2)  -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24 13"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "Input is already a single number."
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps since the input is already a single number.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number. -> There are no possible next steps since the input is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "12 80"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6.6666666666667 - 2 = "
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 - 2 =  -> 6.6666666666667 - 2 = 4.6666666666667",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 - 2 =  -> 6.6666666666667 - 2 = 4.6666666666667 -> 6.6666666666667 / 2 = 3.33333333333335",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.6666666666667 (left: 6.6666666666667) -> 6.6666666666667 + 2 = 8.6666666666667 -> 6.6666666666667 - 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6.66666666667 / 2 = 3.33333333334"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 + 2 = 8.66666666667",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 + 2 = 8.66666666667 -> 6.66666666667 / 2 = 3.333333333335 (left: 3.333333333335 8.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 + 2 = 8.66666666667 -> 6.66666666667 / 2 = 3.333333333335 (left: 3.333333333335 8. -> 8 / 3.333333333335 = 2.400000000",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18 96"
                }
            },
            "Step 7": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 96 - 18 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96) -> 96 - 18 = 78 (left: 78) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined. -> - Input new numbers to continue the calculation",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4.5 11"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 / 3.333333333335 = 2.400000000"
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 + 2 = 8.66666666667 -> 6.66666666667 / 2 = 3.333333333335 (left: 3.333333333335 8. -> 8 / 3.333333333335 = 2.400000000 -> 8 * 3.333333333335 = 26.66666666668 (left: 26.66666666668 3.333333333335 2.400000000)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 + 2 = 8.66666666667 -> 6.66666666667 / 2 = 3.333333333335 (left: 3.333333333335 8. -> 8 / 3.333333333335 = 2.400000000 -> 8 * 3.333333333335 = 26.66666666668 (left: 26.66666666668 3.333333333335 2.400000000) -> 26.66666666668 / 3.333333333335 = 8 (left: 8 2.400000000)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "- Input new numbers to continue the calculation"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined. -> - Input new numbers to continue the calculation -> - Input new numbers to continue the calculation",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 0 = undefined -> Division by zero is undefined. -> - Input new numbers to continue the calculation -> - Input new numbers to continue the calculation -> 8 - 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 18"
                }
            },
            "Step 6": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6.66666666667 / 2 = 3.33333333334"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 + 2 = 8.66666666667 (left: 8.66666666667)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "6.66666666667 / 2 = 3.33333333334"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 * 2 = 13.33333333334",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.66666666667 (left: 6.66666666667) -> 6.66666666667 - 2 = 4.66666666667 -> 6.66666666667 / 2 = 3.33333333334 -> 6.66666666667 * 2 = 13.33333333334 -> 6.66666666667 - 2 = 4.66666666667 (left: 4.666666666",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "6.6666666666667 - 2 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the given input."
                }
            },
            "Step 7": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 + 80 = 92 (left: 92) -> 9 + 2 = 11 -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> There are no possible next steps with the given input. -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13) -> 13 - 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 5 13"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of -2."
                }
            },
            "Step 7": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 / 10 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 5 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 13) ->  -> It looks like you did not provide an input. Please enter a set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible operations that can be done with -7 in this context."
                }
            },
            "Step 7": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible operations that can be done with -7 in this context. -> There are no possible next steps for the input -7.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible operations that can be done with -7 in this context. -> There are no possible next steps for the input -7. -> There are no possible next steps for the input -7.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible operations that can be done with -7 in this context."
                }
            },
            "Step 7": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible operations that can be done with -7 in this context. -> There are no possible operations that can be done with -7 in this context.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible operations that can be done with -7 in this context. -> There are no possible operations that can be done with -7 in this context. -> There are no possible next steps with the input given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8 -> 3 - 8 = -5 -> 3 + -8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 5 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 / 3 = 4.33",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 / 3 =  -> 13 / 3 = 4.33 -> 13 * 3 = 39 (left: 39)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of -2."
                }
            },
            "Step 7": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 / 12 = 0.4167 (left: 0.4167) -> 4 * 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 8 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 5 13"
                }
            },
            "Step 4": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible operations that can be done with -7 in this context.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible operations that can be done with -7 in this context."
                }
            },
            "Step 7": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible operations that can be done with -7 in this context. -> There are no possible operations that can be done with -7 in this context.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 3 = 5 (left: 1 5 13) -> 1 + 5 = 6 (left: 6 13) -> 6 - 13 = -7 (left: -7) -> There are no possible operations that can be done with -7 in this context. -> There are no possible operations that can be done with -7 in this context. -> There are no possible operations that can be done with -7 in this context.",
                "Pruning": null
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 - 1 = 0 (left: 0) -> There are no possible next steps with the input 0 as there are no numbers provided for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10) -> 10 - 1.14 = 8.86 (left: 8.86 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10) -> 10 - 1.14 = 8.86 (left: 8.86 10) -> 10 / 8.86 = 1.1268 (left: 1.1268 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the number 2.67 as it is a decimal value."
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "10 14.2857"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 1.42857 * 10 = 14.2857 (left: 10 14.2857) -> 10 + 14.2857 = 24.2857 (left: 14.2857 24.2857)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 - 7 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 7 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the number 2.67 as it is a decimal value."
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the number 2.67 as it is a decimal value."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 + 11 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the number 2.67 as it is a decimal value."
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 10"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 10 + 1 = 11 (left: 1 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 10 / 1 = 10 (left: -> 10 + 1 = 11 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "10 14.2857"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the number 2.67 as it is a decimal value."
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 7 / 1 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857 10) -> 1.42857 * 10 = 14.2857 (left: 10 14.2857)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "11 + 11 = 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the number 2.67 as it is a decimal value."
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67) -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value. -> There are no possible next steps with the number 2.67 as it is a decimal value.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14) -> 14 / 8 = 1.75 (left: 1.75)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 11 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 * 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 * 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 * 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3) -> 14 - 3 = 11 (left: 11)",
                "Pruning": "NA",
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Provide at least two numbers to perform an operation."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform an operation. -> 8 / 7 = 1.14285714286 (left: 2 1.14285714286 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform an operation. -> 8 / 7 = 1.14285714286 (left: 2 1.14285714286 8) -> 2 / 1.14285714286 = 1.75 (left: 1.75 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no more possible next steps with the input 5. -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> No possible next steps. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 ( -> 6 - 1 = 5 -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 10 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform an operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> No possible next steps. -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 11 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 * 6 = 6 (left: 6) -> There are no possible next steps with just one number. -> Please provide more than one number to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just one number given."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps with just one number given. -> Please provide more than one number to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps with just one number given. -> Please provide more than one number to find possible next steps. -> It seems like you only provided one number. Please provide more than one number to find the possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5 8) -> 3.5 + 8 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> No possible next steps. -> There are no possible next steps for the given numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> No possible next steps. -> There are no possible next steps for the given numbers. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Please provide more than one number to generate possible next steps."
                }
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 112 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 / 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 10 13"
                }
            },
            "Step 5": {
                "Step": "1 * 9 = 9 (left: 9 10 13) -> 13 - 10 = 3 (left: 9 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 9 = 9 (left: 9 10 13) -> 13 - 10 = 3 (left: 9 3) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6"
                }
            },
            "Step 7": {
                "Step": "1 * 9 = 9 (left: 9 10 13) -> 13 - 10 = 3 (left: 9 3) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 16"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "10 10 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 + 10 = 23 (left: 10 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 + 10 = 23 (left: 10 23) -> 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 + 10 = 23 (left: 10 23) -> 5 -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 + 10 = 23 (left: 10 23) -> 5 -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 + 10 = 23 (left: 10 23) -> 5 -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 2"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 / 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 4 "
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 + 10 = 23 (left: 10 23) -> 5 -> There is only one possible next step: -> 8 + 6 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 + 10 = 23 (left: 10 23) -> 5 -> There is only one possible next step: -> 8 + 6 = 14 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 /",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 / -> 13 / 2 = 6.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 / -> 13 / 2 = 6.5 -> None, as the equation has already been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> Input: 5 5 -> 5 - 5 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> Input: 5 5 -> 5 - 5 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 1 * 4 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> Input: 5 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> Input: 5 5 -> 5 - 5 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> Input: 5 5 -> 5 - 5 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110 as it only contains one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 4"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 3 + 7 = 10 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.43 7"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7 -> 3 / 7 = 0.43 (left: 0.43 7) -> 7 / 0.43 = 16.2791 (left: 16.2791)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "110 / 2 = 55"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 / 2 = 55 -> 110 - 2 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 110 as it only contains one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 / 2 = 55",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 =  -> 11 - 6 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.43 7"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7 -> 3 / 7 = 0.43 (left: 0.43 7) -> 7 - 0.43 = 6.57 (left: 6.57)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Input: 2 3 5 9"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> Input: 2 3 5 9 -> 2 + 3 = 5 (left: 5 5 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68) -> 6 + 8 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 4"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 4) -> 3 * 7 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.43 7"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7 -> 3 / 7 = 0.43 (left: 0.43 7) -> 0.43 * 7 = 3.01 (left: 3.01)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 110 as it only contains one number."
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps for the input 110 as it only contains one number. -> There are no possible next steps for the input 110 as it only contains one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 6 11"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> Input: 2 3 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.43 7"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7 -> 3 / 7 = 0.43 (left: 0.43 7) -> 7 - 0.43 = 6.57 (left: 6.57)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Input: 2 3 5 9"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> Input: 2 3 5 9 -> 2 + 3 = 5 (left: 5 5 9)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 * 6 = 24 (left: 24 11) -> 24 + 11 = 35 (left: 35) -> 35 * 8 = 280 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7 -> 3 / 7 = 0.43 (left: 0.43 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.43 7"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 * 4 = 24 (left: 24 11) -> Input: 5 3 7 -> 3 / 7 = 0.43 (left: 0.43 7) -> 7 - 0.43 = 6.57 (left: 6.57)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Input: 2 3 5 9"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> Input: 2 3 5 9 -> 5 * 2 = 10 (left: 10 3 9)",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 56 - 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 7 12"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 7 12) -> 12 - 7 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.9 + 2 = 6.9"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 4.9 / 2 = 2.45 (left: 2.45 + 2 = 4.45)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 4.9 / 2 = 2.45 (left: 2.45 + 2 = 4.45) -> 2.45 * 2 = 4.9 (left: 4.9 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 56 = 448 (left: 448)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on."
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9) -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on. -> N/A",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9.8 + 2 = 11.8"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.9 + 2 = 6.9"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 2 +",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 2 + -> 2 + 7 = 9",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 49 / 10 = 4.9 (left: 4.9) -> There are no possible next steps for the input 4.9 as it is a single number and not a series of numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                }
            },
            "Step 5": {
                "Step": "7 - 5 = 2 (left:  -> It seems that the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 5 = 2 (left:  -> It seems that the input is missing. Please provide the numbers to continue finding possible next steps. -> It seems that the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.9 + 2 = 6.9"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 4.9 - 2 = 2.9 (left: 2.9 + 2 = 4.9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 4.9 - 2 = 2.9 (left: 2.9 + 2 = 4.9) -> 2.9 * 2 = 5.8 (left: 5.8 + 2 = 7.8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 + 56 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 7 10"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49) -> 10 * 49 = 490 (left: 490)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.9 + 2 = 6.9"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 4.9 / 2 = 2.45 (left: 2.45 + 2 = 4.45)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 4.9 / 2 = 2.45 (left: 2.45 + 2 = 4.45) -> 2.45 / 2 = 1.225 (left: 1.225 2)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There is not enough information to determine possible next steps with just the number 11. Additional numbers or operations are needed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 56"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 10 - 7 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the number 9."
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the number 9. -> 9 + 9 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the number 9. -> 9 + 9 = 18 -> 18 - 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.9 + 2 = 6.9"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 4.9 - 2 = 2.9 (left: 2.9 + 2 = 4.9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7) -> 1.4 * 7 = 9.8 (left: 9.8) -> 9.8 + 2 = 11.8 -> 9.8 / 2 = 4.9 (left: 4.9 + 2 = 6.9) -> 4.9 - 2 = 2.9 (left: 2.9 + 2 = 4.9) -> 2.9 - 2 = 0.9 (left: 0.9 2)",
                "Pruning": null
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 3 = 10 (left: 10 13) -> 10 + 13 = 23 (left: 23) -> There are no possible next steps for the input 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13 13) -> 13 / 13 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1 = 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13 13) -> 13 / 13 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1 = 2) -> 1 + 2 = 3",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13 13) -> 13 / 13 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13 13) -> 13 / 13 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 23."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 10 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13) -> None",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13) -> None -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There is only one possible next step: -> 8 * 8 = 64 (left: 2 64) -> 64 / 2 = 32 (left: 32 64)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 8 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 13 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 - 3 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 23."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> -1 - 8 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "9 13 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 / 3 = 3.33 (left: 3.33 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 / 3 = 3.33 (left: 3.33 13) -> 3.33 * 13 = 43.29 (left: 43.29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 / 3 = 3.33 (left: 3.33 13) -> 3.33 * 13 = 43.29 (left: 43.29) -> 43 + 29 = 72.29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "43 + 29 = 72.29"
                }
            },
            "Step 7": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 / 3 = 3.33 (left: 3.33 13) -> 3.33 * 13 = 43.29 (left: 43.29) -> 43 + 29 = 72.29 -> 43 - 29 = 14.29",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 / 3 = 3.33 (left: 3.33 13) -> 3.33 * 13 = 43.29 (left: 43.29) -> 43 + 29 = 72.29 -> 43 - 29 = 14.29 -> 43 + 29 = 72.29 (left: 72.29)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 23."
                }
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> Input: -> Please provide a set of numbers to determine the possible next steps. -> It seems you haven't provided a set of numbers. Please input a set of numbers to determine the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 0.333333 * 7 = 2.333331 (left: 2.333331)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 / 3 = 0.333333 (left: 0.333333 7) -> 0.333333 * 7 = 2.333331 (left: 2.333331) -> There are no possible next steps with the input 2.333331.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no valid next steps for the input -4."
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2 (left: -> 3 - 7 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2 (left: -> 3 - 7 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> There are no possible next steps with the input 52.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 + 3 = 4 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 + 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 + 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "11 + 2 = 13"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 + 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 + 2 = 13 -> 11 / 2 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 + 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 + 2 = 13 -> 11 / 2 =  -> 11 / 2 = 5.5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 2 + 7 = 9 (left: 7 9) -> 7 - 9 = -2 (left: -2) -> There are no possible next steps as the input is not a valid operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no valid next steps for the input -4."
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2 (left: -> 3 - 7 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2 (left: -> 3 - 7 = -4 (left: -4) -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4. -> There are no valid next steps for the input -4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 8 / 5.5 = 1.45454545455 (left: 1.45454545455)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 7"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 3 + 7 = 10 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 3 + 7 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 3 + 7 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 3 + 7 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 100 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 3 + 7 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 100 20) -> 20 * 100 = 2000 (left: ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as the input is not a valid operation."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 / 6 =  -> 0.6666666666666666 -> There are no possible next steps for the input 0.6666666666666666 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2 (left: -> 3 - 7 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 7 / 3 = 2 (left: -> 3 - 7 = -4 (left: -4) -> There are no valid next steps for the input -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "11 + 2 = 13"
                }
            },
            "Step 7": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 + 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 + 2 = 13 -> 13 + 8 = 21 (left: 11 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 3 7) -> 1 + 3 = 4 (left: 4 7) -> 4 + 7 = 11 (left: 11) -> 11 + 2 = 13 -> 13 + 8 = 21 (left: 11 21) -> 11 + 21 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "It seems you haven't provided a set of numbers. Please input a set of numbers to determine the possible next steps."
                }
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32) -> -32 * 8 = -256 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 8 4"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4) -> 4 + 4 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4) -> 4 + 4 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4) -> 4 + 4 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4) -> 4 + 4 = 8 (left: 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "80 / 2 = 40"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 * 12 = 96 (left: 16 96) -> 96 - 16 = 80 (left: 80) -> 80 / 2 = 40",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 14"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 10 - 4 = 6 (left: 6 -> 6 + 8 = 14 (left: 8 14) -> 8 / 14 = 0.57142857143 (left: 0.57142857143)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "16 8 12"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 8 12 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 8 12 24) -> 12 / 8 = 1.5 (left: 1.5 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 4 = 16 (left: 16  -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 4 = 16 (left: 16  -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4) -> 4 * 4 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4) -> 4 * 4 = 16 (left: 4 16) -> 4 * 16 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 4 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 10 - 4 = 6 (left: 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 / 4 = 2 (left: 2 8 4) -> 10 - 4 = 6 (left: 6 -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 4 = 16 (left: 16 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 4 = 16 (left: 16  -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 4 = 16 (left: 16  -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 4 = 16 (left: 16  -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 4 = 16 (left: 16  -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4) -> 4 - 4 = 0 (left: 0 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 8 - 4 = 4 (left: 4 4 4) -> 4 - 4 = 0 (left: 0 4) -> 4 - 0 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.5 24"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 8 12 24) -> 12 / 8 = 1.5 (left: 1.5 24) -> 1.5 * 24 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "4 8"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "80 / 2 = 40"
                }
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 + 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, the result is already 1."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> No possible next steps. -> There are no possible next steps given the current numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "16 + 2 = 18"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16) -> 16 + 2 = 18 -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                }
            },
            "Step 6": {
                "Step": " -> There are no possible next steps as the input is empty.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 9"
                }
            },
            "Step 7": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9) -> 3 * 9 = 27 (left: 9 27) -> 27 - 9 =",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as the input is empty."
                }
            },
            "Step 7": {
                "Step": " -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty.",
                "Pruning": null
            },
            "Step 8": {
                "Step": " -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> -1 + 2 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps given the current numbers."
                }
            },
            "Step 7": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> No possible next steps. -> There are no possible next steps given the current numbers. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps given the current numbers."
                }
            },
            "Step 8": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1. -> No possible next steps. -> There are no possible next steps given the current numbers. -> There are no possible next steps given the current numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 / 8 = 1 -> None, the result is already 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 3 10"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as the input is empty."
                }
            },
            "Step 7": {
                "Step": " -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty.",
                "Pruning": null
            },
            "Step 8": {
                "Step": " -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty. -> No possible next steps as the input is empty.",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> None, since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 2 = 24",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> Input:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> Input: -> There seems to be a duplication in the input provided. Could you please provide a different set of numbers for me to generate possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5) -> 5 + 5 = 10",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 5"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5) -> 7 + 5 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 15"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59) -> 6 * 9 -> 6 + 9 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 60 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> 48 / 2 = 24",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 5) -> There is only one possible next step: 5 + 7 = 12 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17) -> 12 - 17 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 5 + 12 = 17 (left: 12 17) -> 12 - 17 = -5 (left: -5) -> -5 - 2 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720) -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "7 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 * 1 = 12 (left: -> 12 * 1 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 12 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "7 5"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5) -> 7 + 5 = 12",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61) -> 12 * 61 = 732 (left: 732) -> 3 + 2 = 5 (left: 7 5) -> 7 + 5 = 12 -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 60 12"
                }
            },
            "Step 6": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 * 60 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59) -> 59 + 2 = 61",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> There are no possible next steps for the input 5.5 as it is a single number and not a mathematical operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 / 5 = 1.2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 5 =  -> 6 / 5 = 1.2 -> 5 * 1 = 5 (left: 6 / 5 = 1.2) -> 5 - 6 = -1",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 5 =  -> 6 / 5 = 1.2 -> 5 * 1 = 5 (left: 6 / 5 = 1.2) -> 5 - 6 = -1 -> 5 / -6 = -0.8333333333333334 (left: -0.8333333333333334)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 5.5 as it is a single number and not a mathematical operation with multiple numbers."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 * 8 = 54.4 (left: 54.4) -> There are no possible next steps for the number 54.4 as it is a decimal number and cannot be combined with the other numbers using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 8 = 9.67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.67 + 8 = 9.67"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 8 = 9.67 -> 8 - 1.67 = 6.33 (left: 6.33 8 9.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 8 = 9.67 -> 8 - 1.67 = 6.33 (left: 6.33 8 9.67) -> 9.67 + 6.33 = 16 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 / 1.2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 6 2"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 5 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 5 =  -> 6 / 5 = 1.2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 5 =  -> 6 / 5 = 1.2 -> 5 * 1 = 5 (left: 6 / 5 = 1.2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6 / 5 = 1.2"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 5 =  -> 6 / 5 = 1.2 -> 5 * 1 = 5 (left: 6 / 5 = 1.2) -> 5 / 6 = 0.83333333",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 5 =  -> 6 / 5 = 1.2 -> 5 * 1 = 5 (left: 6 / 5 = 1.2) -> 5 / 6 = 0.83333333 -> 5 - 6 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "6 / 5 = 1.2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 * 6 = 30 (left: 2 30) -> 30 / 2 = 15 (left: 15) -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 - 2 = 3.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.67 + 8 = 9.67"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 8 = 9.67 -> 1.67 * 8 = 13.36 (left: 8 13.36 9.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 / 2 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 8 = 9.67 -> 1.67 * 8 = 13.36 (left: 8 13.36 9.67) -> 8 * 13.36 = 106.88 (left: 9.67 106.88)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 - 5 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 - 5 = 1 (left: 1 2) -> 1 + 2 = 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 - 5 = 1 (left: 1 2) -> 1 + 2 = 3 -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "11 + 2 = 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "5.5 - 2 = 3.5"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 - 2 = 3.5 -> 2 / 5.5 = 0.3636 (left: 0.3636)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "11 + 2 = 13"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 6 5) -> 6 + 5 = 11 (left: 11) -> 11 + 2 = 13 -> None, the equation is already solved.",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 11"
                }
            },
            "Step 1": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.818",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.818 -> 0.818 * 2 = 1.636",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 3 + 5 = 8 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 3 + 5 = 8 (left: -> 5 - 3 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 3 + 5 = 8 (left: -> 5 - 3 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.818 * 2 = 1.636"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0.818 * 2 = 1.636"
                }
            },
            "Step 7": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.818 -> 0.818 * 2 = 1.636 -> 0.818 / 2 = 0.409",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 7 = 1 (left: 1 8 11) -> 1 + 8 = 9 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.818 -> 0.818 * 2 = 1.636 -> 0.818 / 2 = 0.409 -> 0.818 + 2 = 2.818 (left: 2.818)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "6.2857 * 2 = 12.5714"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11) -> Possible next steps: -> No possible next steps as the input is incomplete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 11 - 8 = 3 (left: 3 11) -> 5 -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22) -> 11 / 22 = 0.5 (left: 0.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 + 3 = 8 (left: 8 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 22 11) -> 5 + 3 = 8 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 14 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 11 / 41 \u2248 0.2683 (left: 0.2683)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 11 / 41 \u2248 0.2683 (left: 0.2683) -> There are no possible next steps with the input 0.2683.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as the input is incomplete."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11) -> Possible next steps: -> No possible next steps as the input is incomplete. -> Please provide more numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11) -> Possible next steps: -> No possible next steps as the input is incomplete. -> Please provide more numbers to find possible next steps. -> It appears that you have not provided additional numbers to work with. Please input more numbers so that we can find more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11) -> 11 / 1.75 = 6.2857 (left: 6.2857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11) -> 11 / 1.75 = 6.2857 (left: 6.2857) -> 6.2857 * 2 = 12.5714",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 11 - 8 = 3 (left: 3 11) -> 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 11 - 8 = 3 (left: 3 11) -> 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 11 - 8 = 3 (left: 3 11) -> 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 11 - 8 = 3 (left: 3 11) -> 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 11 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 / 7 = 0.57 (left: 0.57 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 7 11 15) -> 15 - 11 = 4 (left: 7 4 15) -> 4 / 7 = 0.57 (left: 0.57 15) -> 0.57 + 15 = 15.57 (left: 15.57)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 11 49"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 11 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 / 11 = 4.4545 (left: 4.4545)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 / 11 = 4.4545 (left: 4.4545) -> There are no possible next steps for the input 4.4545 as it is a single number and not a combination of numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 / 11 = 4.4545 (left: 4.4545) -> There are no possible next steps for the input 4.4545 as it is a single number and not a combination of numbers. -> There are no possible next steps for the input 4.4545 as it is a single number and not a combination of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input 0.2683."
                }
            },
            "Step 7": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 11 / 41 \u2248 0.2683 (left: 0.2683) -> There are no possible next steps with the input 0.2683. -> There are no possible next steps with the input 0.2683.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 7 = 49 (left: 8 11 49) -> 49 - 8 = 41 (left: 11 41) -> 11 / 41 \u2248 0.2683 (left: 0.2683) -> There are no possible next steps with the input 0.2683. -> There are no possible next steps with the input 0.2683. -> There are no possible next steps with the input 0.2683.",
                "Pruning": null
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 4 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.67 (left: 1.67 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No input provided."
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps: -> No input provided. -> Please provide input in order to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps: -> No input provided. -> Please provide input in order to generate possible next steps. -> It appears that you have not provided any input. Please provide numbers in order to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3) -> 9 + 3 = 12 (left: 12) -> 12 - 6 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> Possible next steps: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input: 1 5 5 7"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 1 + 5 = 6 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 1 + 5 = 6 (left: 5 6 7) -> 5 - 6 = -1 (left: -1 7)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 + 8 = 10.25 (left: 10.25)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with just the number 4."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: -> 3 + 1 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 9"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 4 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input: 1 5 5 7"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 1 + 5 = 6 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 1 + 5 = 6 (left: 5 6 7) -> 6 * 7 = 42 (left: 5 42)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 / 3.33 = 0.3 (left: 0.3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33) -> 1 / 3.33 = 0.3 (left: 0.3) -> 0.3 * 2 = 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "Input: 1 5 5 7"
                }
            },
            "Step 7": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 7 - 1 = 6 (left: 5 5 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 1 + 4 = 5 (left: 5 10) -> Input: 3 9 -> Input: 1 5 5 7 -> 7 - 1 = 6 (left: 5 5 6) -> 5 / 5 = 1 (left: 1 6)",
                "Pruning": null
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 / 9 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 12 = 1 (left: 3 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 12 = 1 (left: 3 1) -> 5 + 2 = 7 (left: 7 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 12 = 1 (left: 3 1) -> 5 + 2 = 7 (left: 7 3) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 48."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform mathematical operations. -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "3 / 2 is not a valid operation."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 3 9) -> 9 / 3 = 3 (left: 3) -> 3 / 2 is not a valid operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps. -> It seems like you didn't provide any numbers. Please enter at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30) -> 30 / 12 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8 16) -> 1 * 8 = 8 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "3 / 2 is not a valid operation."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to continue the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to continue the calculations. -> 6 * 3 = 18 (left: 18 18)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 - 12 = -12 (left: -12) -> -12 / 7 = -1.7142857142857142 (left: -1.7142857142857142)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 6 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64) -> 64 / 16 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 48."
                }
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8.857142857142857 / 8 = 1.107142857142857"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 1.107142857142857 0.857142857142857)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 1.107142857142857 0.857142857142857) -> 1.107142857142857 * 0.857142857142857 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 1.107142857142857 0.857142857142857) -> 1.107142857142857 * 0.857142857142857 =  -> 1.107142857142857 * 0.857142857142857 = 0.9499999999999999",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the input is not in the correct format for mathematical operations."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please provide a list of numbers separated by spaces for mathematical operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please provide a list of numbers separated by spaces for mathematical operations. -> 1. Perform addition, subtraction, multiplication, or division operations on the given numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "66 + 2 = 68"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68 -> 66 - 2 = 64 (left: 64 68)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 + 56 = 66 (left: 66) -> 66 + 2 = 68 -> 66 - 2 = 64 (left: 64 68) -> 64 / 68 = 0.941176 (left: 0.941176)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "-5 30"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 25 - 30 = -5 (left: -5 30) -> -5 * 30 = -150 (left: -150)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as the input is not in the correct format for mathematical operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps as the input is not in the correct format for mathematical operations."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please enter a valid input consisting of numbers and mathematical operators.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please enter a valid input consisting of numbers and mathematical operators. -> Please enter a valid input consisting of numbers and mathematical operators.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 2 + 8 = 10 (left: 10 8 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 2 + 8 = 10 (left: 10 8 14) -> 14 + 10 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 2 + 8 = 10 (left: 10 8 14) -> 14 + 10 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps as the input is not in the correct format for mathematical operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.107142857142857 * 0.857142857142857 = 0.9499999999999999"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 1.107142857142857 0.857142857142857) -> 1.107142857142857 * 0.857142857142857 =  -> 1.107142857142857 * 0.857142857142857 = 0.9499999999999999 -> 1.107142857142857 / 0.857142857142857 = 1.2916666666666665",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 1.107142857142857 0.857142857142857) -> 1.107142857142857 * 0.857142857142857 =  -> 1.107142857142857 * 0.857142857142857 = 0.9499999999999999 -> 1.107142857142857 / 0.857142857142857 = 1.2916666666666665 -> 1.107142857142857 * 0.857142857142857 = 0.9464285714285714 (left: 0.9464285714285714 / 0.857142857142857 = 1.104",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15) -> Input: 25 30  -> 25 - 30 = -5 (left: -5 30)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps as the input is not in the correct format for mathematical operations."
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please input numbers separated by spaces to perform mathematical operations.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please input numbers separated by spaces to perform mathematical operations. -> Perform addition, subtraction, multiplication, or division on the input numbers to generate new combinations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please input numbers separated by spaces to perform mathematical operations. -> Perform addition, subtraction, multiplication, or division on the input numbers to generate new combinations. -> ",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as the input is not in the correct format for mathematical operations."
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please provide a list of numbers separated by spaces.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10) -> 10 - 1.14 = 8.86 (left: 8.86) -> There are no possible next steps as the input is not in the correct format for mathematical operations. -> Please provide a list of numbers separated by spaces. -> Please provide a list of numbers separated by spaces.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 10"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 5 + 10 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.107142857142857 * 0.857142857142857 = 0.9499999999999999"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 1.107142857142857 0.857142857142857) -> 1.107142857142857 * 0.857142857142857 =  -> 1.107142857142857 * 0.857142857142857 = 0.9499999999999999 -> 1.107142857142857 / 0.857142857142857 = 1.2916666666666665 (left: 1.2916666666666665 * 0.857142857142857 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 10) -> 10 - 1.1428571428571428 = 8.857142857142857 (left: 8.857142857142857) -> 8.857142857142857 / 8 = 1.107142857142857 -> 8.857142857142857 - 8 = 0.857142857142857 (left: 1.107142857142857 0.857142857142857) -> 1.107142857142857 * 0.857142857142857 =  -> 1.107142857142857 * 0.857142857142857 = 0.9499999999999999 -> 1.107142857142857 / 0.857142857142857 = 1.2916666666666665 (left: 1.2916666666666665 * 0.857142857142857 = -> 1.2916666666666665 * 0.857142857142857 = 1.107142857142857",
                "Pruning": null
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 * 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 * 1 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 12 13"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 / 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the number 13."
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the number 13. -> 13 + 1 = 14",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 - 1 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 - 1 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "12 13 40"
                }
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 12 13 40) -> 40 / 13 = 3.08 (left: 12 3.08)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 / 1 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the number 13."
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the number 13. -> There are no possible next steps with the number 13.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 12 - 2.5 = 9.5 (left: 9.5 13) -> 13 / 9.5 = 1.36842105263 (left: 1.36842105263) -> 1.36842105263 * 2 = 2.73684210526",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4) ",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 12 13"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 / 1 = 2 (left: 1 2) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 / 1 = 2 (left: 1 2) -> Input: 3 5 7 -> 3 * 5 = 15 (left: 7 15)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> There are no possible next steps for the input 1.1666666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 * 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 * 1 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the number 13."
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps with the number 13. -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the number 13."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 / 1 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 2 + 6 = 9"
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 1 + 2 + 6 = 9 -> 1 + 2 = 3 (left: 3 + 6 = 9)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 1 + 2 + 6 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 * 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 * 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 1"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 / 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 2"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 4 - 3 = 1 (left: 2 1) -> 2 / 1 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) ",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 2 + 6 = 9"
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12) -> 10.5 * 12 = 126 (left: 126) -> 1 + 2 + 6 = 9 -> 1 + 2 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.36842105263 * 2 = 2.73684210526"
                }
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 * 10 = 50 (left: 12 50)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 * 10 = 50 (left: 12 50) -> 12 * 50 = 600 (left: 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 * 10 = 50 (left: 12 50) -> 12 * 50 = 600 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10) -> Input: 3 9 27 -> 27 - 3 = 24 (left: 9 24) -> 24 / 9 = 2.6667 (left: 2.6667)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 ( -> 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667) -> There are no possible next steps for the input 0.4166666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 10 12 15) -> 12 / 10 = 1.2 (left: 1.2 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 5 + 10 = 15 (left: 10 12 15) -> 12 / 10 = 1.2 (left: 1.2 15) -> 1.2 * 15 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step for the input 70:"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 * 7 = 70 (left: 70) -> There is only one possible next step for the input 70: -> 70 / 2 = 35",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 * 7 = 70 (left: 70) -> There is only one possible next step for the input 70: -> 70 / 2 = 35 -> 35 + 8 = 43 (left: 8 43)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> There are no possible next steps with the input of 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one possible next step for the input 70:"
                }
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 * 7 = 70 (left: 70) -> There is only one possible next step for the input 70: -> 70 / 2 = 35",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 / 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "5 10 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 * 7 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 10 7) -> 10 * 7 = 70 (left: 70) -> There is only one possible next step for the input 70:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 10 / 5 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 7": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 10) -> Input: 3 9 27 -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with only one number provided. Please provide more numbers for calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.333333333333332 2"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 + 2 = 3.166666666666666 -> 2 * 1.166666666666666 = 2.333333333333332 (left: 2.333333333333332 2) -> 2.333333333333332 / 2 = 1.166666666666666 (left: 1.166666666666666)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667) -> 1.16666666667 - 8 = -6.83333333333 (left: 8) -> 8 + 8 = 16 -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only one number provided. Please provide more numbers for calculation."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> Possible next steps -> None, the input provided already covers all possible operations with the given numbers. -> There are no more possible next steps as all combinations of the given numbers have been considered.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no more possible next steps as all combinations of the given numbers have been considered."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.333333333333332 2"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 + 2 = 3.166666666666666 -> 2 * 1.166666666666666 = 2.333333333333332 (left: 2.333333333333332 2) -> 2.333333333",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667) -> 1.16666666667 - 8 = -6.83333333333 (left: 8) -> 8 + 8 = 16 -> 16 - 8 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 / 8 = 0.9375 (left: 0.9375)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 + 2 = 3.166666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 + 2 = 3.166666666666666 -> 2 * 1.166666666666666 = 2.333333333333332 (left: 2.333333333333332 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.333333333333332 2"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 + 2 = 3.166666666666666 -> 2 * 1.166666666666666 = 2.333333333333332 (left: 2.333333333333332 2) -> 2.333333333333332 + 2 = 4.333333333333332 (left: 4.333333333333332)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with only one number provided. Please provide more numbers for calculation."
                }
            },
            "Step 8": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 1 * 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with only one number provided. Please provide more numbers for calculation. -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667) -> 1.16666666667 - 8 = -6.83333333333 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667) -> 1.16666666667 - 8 = -6.83333333333 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.333333333333332 2"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 + 2 = 3.166666666666666 -> 2 * 1.166666666666666 = 2.333333333333332 (left: 2.333333333333332 2) -> 2.333333333",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the number 11."
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11. -> There are no possible next steps with the number 11.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 36) -> None",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 6"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.333333333333332 2"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 + 2 = 3.166666666666666 -> 2 * 1.166666666666666 = 2.333333333333332 (left: 2.333333333333332 2) -> 2.333333333333332 + 2 = 4.333333333333332 (left: 4.333333333333332)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667) -> 1.16666666667 - 8 = -6.83333333333 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8) -> 5.33333 + 8 = 13.33333 (left: 13.33333)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "8 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 / 5 = 1.6 (left"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left -> 8 / 5 = 1.6 (left: 1.6) -> There are no possible next steps for the input 1.6.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left -> 8 / 5 = 1.6 (left: 1.6) -> There are no possible next steps for the input 1.6. -> 1.6 - 2 = -0.4 (left: -0.4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for 2.6667 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365 -> 2 + 0.7272727272727273 = 2.7272727272727275 (left: 2.727272727272727",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365 -> 2 / 0.7272727272727273 = 2.7499999999999996 (left: 2.7499999999999996)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 / 1.6 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 / 1.6 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 8 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 / 1.6 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 8 40) -> 40 - 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for 2.6667 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365 -> 2 - 0.7272727272727273 = 1.2727272727272727 (left: 1.2727272727272727)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365 -> 0.7272727272727273 - 2 = -1.2727272727272727 (left: -1.2727272727272727)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 * 8 = 12.8 (left: 8 12.8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 * 8 = 12.8 (left: 8 12.8) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 * 8 = 12.8 (left: 8 12.8) -> 8 + 12 = 20 (left: 20) -> 20 - 2 = 18 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 3 + 9 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1.6 8 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 / 5 = 1.6 (left"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left -> 5 - 8 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left -> 5 - 8 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left -> 5 - 8 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.7272727272727273 / 2 = 0.36363636363636365"
                }
            },
            "Step 7": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 / 2 = 0.36363636363636365 -> 0.7272727272727273 / 0.36363636363636365 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for 2.6667 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667  -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number. -> There are no possible next steps for 2.6667 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 32 / 5 = 6.4 (left: 6.4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "8 / 5 = 1.6 (left"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.6 8 8"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 * 8 = 12.8 (left: 8 12.8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 * 8 = 12.8 (left: 8 12.8) -> 8 * 2 = 16 (left: 16 12.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 1.6 * 8 = 12.8 (left: 8 12.8) -> 8 * 2 = 16 (left: 16 12.8) -> 16 * 12.8 = 204.8 (left: 204.8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.7272727272727273 / 2 = 0.36363636363636365"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 7": {
                "Step": "8 / 5 = 1.6 (left -> 5 - 8 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 5 = 1.6 (left -> 5 - 8 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 40"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40) -> 40 - 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Only one number left. No more possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> No more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 40"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40) -> 21 / 7 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps with only one number provided."
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 / 1.3333 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided. -> - Input more numbers to perform operations on",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Only one number left. No more possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> No more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 ( -> 1.3333 / 8 = 0.1667 (left: 0.1667 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 1.3333 + 8 = 9.3333 ( -> 1.3333 / 8 = 0.1667 (left: 0.1667 8) -> 8 / 0.1667 = 48 (left: 48 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 40"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40) -> 40 / 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 40"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "None, as there is only one number left."
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Only one number left. No more possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> No more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.3333 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962) -> There are no possible next steps with the given input of 71.9962.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 40"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40) -> 4 + 40 = 44 (left: 40)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 * 12 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 * 12 =  -> 8 * 12 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Only one number left. No more possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> Input: Only one number left. No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> Input: Only one number left. No more possible next steps. -> Only one number left. No more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 40"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48) -> 48 - 4 = 44 (left: 44 4) -> 44 - 4 = 40 (left: 4 40) -> 40 / 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the given input of 71.9962."
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962) -> There are no possible next steps with the given input of 71.9962. -> There are no possible next steps with the given input of 71.9962.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12) -> 8 * 12 = 96 (left: 1.3333 96) -> 96 / 1.3333 = 71.9962 (left: 71.9962) -> There are no possible next steps with the given input of 71.9962. -> There are no possible next steps with the given input of 71.9962. -> There are no possible next steps with the given input of 71.9962.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "Only one number left. No more possible next steps."
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "Only one number left. No more possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 48 - 40 = 8 (left: 8) -> None, as there is only one number left. -> Only one number left. No more possible next steps. -> Only one number left. No more possible next steps.",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 2) * (9 / 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5) -> 2 + 4.5 = 6.5 (left: 6.5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11) -> 8 + 9 = 17 (left: 11) -> There are no possible next steps with the input \"11\"."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111 (left: 1.1111)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111 (left: 1.1111) -> 1.1111 + 1 = 2.1111"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 42 11"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 11 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 11 21) -> 11 + 21 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 42 11) -> 42 / 2 = 21 (left: 11 21) -> 11 + 21 = 32 (left: 32) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 8 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 ( -> Invalid input. Please provide a valid input in the format \"number operation number\".",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 ( -> Invalid input. Please provide a valid input in the format \"number operation number\". -> Please provide a valid input in the format \"number operation number\".",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 0.4615 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 8 - 2 = 6 (left: 6 13) -> 6 / 13 = 0.4615 (left: 0.4615) -> There are no possible next steps with the input 0.4615 as it is already a single number. -> There are no possible next steps with the input 0.4615 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 8 - 2 = 6 (left: 6 13) -> 6 / 13 = 0.4615 (left: 0.4615) -> There are no possible next steps with the input 0.4615 as it is already a single number. -> There are no possible next steps with the input 0.4615 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 0.4615 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 6 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23) -> 1.23 + 2 = 3.23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers provided to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible -> There are many possible next steps depending on the specific context or problem at hand. Without additional information, it is difficult to determine a specific next step.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible -> There are many possible next steps depending on the specific context or problem at hand. Without additional information, it is difficult to determine a specific next step. -> - Subtracting the third number from the fourth number",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.23 + 2 = 3.23"
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 * 8 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23) -> 1.23 + 2 = 3.23 -> 1.23 + 2 = 3.23 (left: 3.23)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "- Subtracting the third number from the fourth number"
                }
            },
            "Step 8": {
                "Step": "7 - 6 = 1 (left: 1 6 11) -> Possible -> There are many possible next steps depending on the specific context or problem at hand. Without additional information, it is difficult to determine a specific next step. -> - Subtracting the third number from the fourth number -> 14 - 8 = 6 (left: 2 8 6)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 12 - 7 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> 60 / 2 = 30 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 8 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 8 - 2 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 8 - 2 = 6 (left: 6 13) -> 6 / 13 = 0.4615 (left: 0.4615)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 8 - 2 = 6 (left: 6 13) -> 6 / 13 = 0.4615 (left: 0.4615) -> There are no possible next steps with the input 0.4615 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers provided to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "10 + 10 = 20"
                }
            },
            "Step 8": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 7 8 11) -> 8 - 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 (left: 6.5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 (left: 6.5 8) -> 6.5 + 8 = 14.5 (left: 14.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 (left: 6.5 8) -> 6.5 + 8 = 14.5 (left: 14.5) -> There are no possible next steps for the input 14.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers provided to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 - 2 = 11 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45) -> 144 - 45 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45) -> 144 - 45 = 99 (left: 99) -> There are no possible next steps for the number 99 as it is the only number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 + 9 = 15"
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)  -> 24 + 45 = 69 (left: 69) -> 6 + 9 = 15 -> 9 + 15 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)  -> 24 + 45 = 69 (left: 69) -> 6 + 9 = 15 -> 9 + 15 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "3.3333333333333335, 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 1 + 56 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 12 45"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 +",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 + -> 45 + 8 = 53",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 + -> 45 + 8 = 53 -> 45 * 8 = 360 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "45 * 8 = 360 "
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 + -> 45 + 8 = 53 -> 45 * 8 = 360  -> 8 - 45 = -37 (left: -37 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 + -> 45 + 8 = 53 -> 45 * 8 = 360  -> 8 - 45 = -37 (left: -37 8) -> -37 * 8 = -296 (left: -296)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no more possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3.3333333333333335, 8"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> 8 / 2.4 = 3.3333333333333335 (left: 3.3333333333333335, 8) -> 3.3333333333333335 + 8 = 11.333333333333334 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 12 45"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45) -> 144 * 45 = 6480 (left: 6480)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6 + 9 = 15"
                }
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)  -> 24 + 45 = 69 (left: 69) -> 6 + 9 = 15 -> 15 * 6 = 90 (left: 90 ",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45) ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)  -> 24 + 45 = 69 (left: 69)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 + 12 = 24 (left: 24 45)  -> 24 + 45 = 69 (left: 69) -> 6 + 9 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "45 * 8 = 360 "
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 + -> 45 + 8 = 53 -> 45 * 8 = 360  -> 45 / 8 = 5.625 (left: 5.625 * 8 = 45)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 45 + -> 45 + 8 = 53 -> 45 * 8 = 360  -> 45 / 8 = 5.625 (left: 5.625 * 8 = 45) -> 8 - 5.625 = 2.375 (left: 2.375 * 8",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8) -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "12 12 45"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 - 12 = 0 (left: 0 45)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 - 12 = 0 (left: 0 45) -> 45 - 0 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 - 12 = 0 (left: 0 45) -> 45 - 0 = 45 (left: 45) -> 45 - 8 = 37 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the number 99 as it is the only number provided."
                }
            },
            "Step 7": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45) -> 144 - 45 = 99 (left: 99) -> There are no possible next steps for the number 99 as it is the only number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 12 * 12 = 144 (left: 144 45) -> 144 - 45 = 99 (left: 99) -> There are no possible next steps for the number 99 as it is the only number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 7 = 5 (left: 3 5 12) -> 5 + 3 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 7 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 * 3 = 18"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 25"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25) -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step which is: 16 / 2 = 8"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There is only one possible next step which is: 16 / 2 = 8 -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 7 - 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There is only one possible next step which is: 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one possible next step: 1.625 + 1 = 2.625"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There is only one possible next step: 1.625 + 1 = 2.625 -> 1.625 + 1 = 2.625",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There is only one possible next step: 1.625 + 1 = 2.625 -> 1.625 + 1 = 2.625 -> 1 + 1 = 2 (left: 1 2 2.625)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There is only one possible next step: 1.625 + 1 = 2.625 -> 1.625 + 1 = 2.625 -> 1 + 1 = 2 (left: 1 2 2.625) -> 2.625 * 2 = 5.25 (left: 5.25)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is only one possible next step: 1.625 + 1 = 2.625"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 25"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25) -> 25 / 5 = 5 (left: 5 25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25) -> 25 / 5 = 5 (left: 5 25) -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one possible next step which is: 16 / 2 = 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 =  -> 5 - 1 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 1 2 5) -> 5 - 1 =  -> 5 - 1 = 4 -> 5 * 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 14 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 25"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25) -> 5 + 25 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 / 3 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 12 14"
                }
            },
            "Step 1": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There is only one possible next step: 1.625 + 1 = 2.625",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 9 - 7 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 * 3 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 25"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25) -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step: 1.625 + 1 = 2.625"
                }
            },
            "Step 8": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There is only one possible next step: 1.625 + 1 = 2.625 -> 1.625 + 1 = 2.625",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There is only one possible next step: 1.625 + 1 = 2.625"
                }
            },
            "Step 4": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There is only one possible next step: 1.625 + 1 = 2.625 -> 1.625 + 1 = 2.625",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There is only one possible next step: 1.625 + 1 = 2.625 -> 1.625 + 1 = 2.625 -> 1.625 - 1 = 0.625 (left: 0.625 1 2.625)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 2 = 14 (left: 1 12 14) -> 14 - 1 = 13 (left: 13 -> 13 / 8 = 1.625 (left: 1.625) -> There is only one possible next step: 1.625 + 1 = 2.625 -> 1.625 + 1 = 2.625 -> 1.625 - 1 = 0.625 (left: 0.625 1 2.625) -> 1 / 0.625 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 25"
                }
            },
            "Step 7": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25) -> Input: 10 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 2 = 3 (left: 3 7 12) -> 12 - 3 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 6 * 3 = 18 -> 3 * 6 = 18 (left: 6 18) -> Input: 5 10 15 -> 10 + 15 = 25 (left: 5 25) -> Input: 10 2 -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 6 + 9 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3 -> 10 - 3 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3 -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 7"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3 -> 10 - 3 = 7 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one possible next step: 0.3 * 0.3 = 0.09"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 - 4 =  -> 5 - 4 = 1",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 - 4 =  -> 5 - 4 = 1 -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24) -> 5 + 24 = 29 (left: 29) -> 29 + 2 = 31",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3 -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 7"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3 -> 10 - 3 = 7 (left: 3 7) -> Input: ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120) -> No input numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3 -> 10 - 3 = 7 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No input numbers provided."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120) -> No input numbers provided. -> No possible next steps since no input numbers were provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 6 / 20 = 0.3 (left: 0.3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 6 / 20 = 0.3 (left: 0.3) -> There is only one possible next step: 0.3 * 0.3 = 0.09",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3 -> 10 - 3 = 7 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "No input numbers provided."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120) -> No input numbers provided. -> No possible next steps as there are no input numbers provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 4 + 30 = 34 (left: 34) -> There are no possible next steps with the input of 34.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 7"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3 -> 10 - 3 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10 / 2 = 5"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 -> 5 / 2 = 2.5 (left: 2.5 8)",
                "Pruning": null
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 1.6 - 8 = -6.4 (left: -6.4) -> -6.4 / 2 = -3.2 (left: -3.2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8) -> 8 - 6.4 = 1.6 (left: 1.6 8) -> 1.6 * 8 = 12.8 (left: 12.8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3) -> 7 + 3 = 10 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "31 + 2 = 33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8) -> 8 - 6.4 = 1.6 (left: 1.6 8) -> 8 / 1.6 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> Input: 3 -> There is only one number provided, so there are no possible next steps to perform any operations. -> No possible next steps. -> There are no possible next steps as all combinations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8) -> 8 - 6.4 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8) -> 8 - 6.4 = 1.6 (left: 1.6 8) -> Input: 3 9 3",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8) -> 8 - 6.4 = 1.6 (left: 1.6 8) -> Input: 3 9 3 -> 3 + 3 = 6 (left: 6 9 3)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 - 5 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13) -> 13 + 8 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13) -> 13 + 8 =  -> 13 + 8 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8) -> 8 - 6.4 = 1.6 (left: 1.6 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8) -> 8 - 6.4 = 1.6 (left: 1.6 8) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.6 8"
                }
            },
            "Step 7": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 - 1.6 = 6.4 (left: 6.4 8 8) -> 8 - 6.4 = 1.6 (left: 1.6 8) -> 1.6 + 8 = 9.6 (left: 9.6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "31 + 2 = 33"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23) -> 8 + 23 = 31 (left: 31) -> 31 + 2 = 33 -> None, this is the final result.",
                "Pruning": null
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations. -> - Divide two numbers",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> Please provide more numbers to continue the calculations. -> - Divide two numbers -> - Multiply two numbers",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0.9090909090909091 - 2 = -1.0909090909090909"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 - 2 = -1.0909090909090909 -> 0.9090909090909091 / 2 = 0.45454545454545455 (left: 0.454545454",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "8 18"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8 18) -> 8 + 18 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you didn't provide any input for the next steps. Could you please provide some numbers for me to suggest possible calculations?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "It seems like you didn't provide any input for the next steps. Could you please provide some numbers for me to suggest possible calculations?"
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you didn't provide any input for the next steps. Could you please provide some numbers for me to suggest possible calculations? -> Please provide some numbers for me to suggest possible calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you didn't provide any input for the next steps. Could you please provide some numbers for me to suggest possible calculations? -> Please provide some numbers for me to suggest possible calculations. -> It appears you have not provided any numbers for me to suggest possible calculations. Please input some numbers for me to work with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 - 2 = -1.0909090909090909",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> Please provide at least two numbers to calculate the next steps. -> Please provide at least two numbers to calculate the next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> Please provide at least two numbers to calculate the next steps. -> Please provide at least two numbers to calculate the next steps. -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 18"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 10 / 18 = 0.5555555555555556 (left: 0.5555555555555556)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 10 / 18 = 0.5555555555555556 (left: 0.5555555555555556) -> 0.5555555555555556 / 2 = 0.2777777777777778 (left: ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "- Multiply two numbers"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 9 - 2 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 18"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8 18) -> 8 * 18 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": ""
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 18"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 10 - 18 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18) -> 10 - 18 = -8 (left: -8) -> -8 * 2 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "0.9090909090909091 - 2 = -1.0909090909090909"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "0.9090909090909091 - 2 = -1.0909090909090909"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 - 2 = -1.0909090909090909 -> 0.9090909090909091 / 2 = 0.45454545454545455",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 + 9 = 11 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091) -> 0.9090909090909091 - 2 = -1.0909090909090909 -> 0.9090909090909091 / 2 = 0.45454545454545455 -> 0.9090909090909091 - 2 = -1.0909090909090909 (left: -",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 9 10"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left:  -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps. -> It seems like you did not provide an input. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) ->  -> It seems like you haven't provided an input for me to work with. Could you please provide the numbers you would like me to find possible next steps for?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) ->  -> It seems like you haven't provided an input for me to work with. Could you please provide the numbers you would like me to find possible next steps for? -> It seems like you haven't provided an input for me to work with. Could you please provide the numbers you would like me to find possible next steps for?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6667 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 8 / 12 = 0.6667 (left: 0.6667 8) -> 0.6667 * 8 = 5.3336 (left: 5.3336 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 8 / 12 = 0.6667 (left: 0.6667 8) -> 0.6667 * 8 = 5.3336 (left: 5.3336 8) -> 5.3336 - 8 = -2.6664 (left: -2.6664)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "8 12 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 * 2 = 14 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "7 8 12"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6667 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 8 / 12 = 0.6667 (left: 0.6667 8) -> 8 - 0.6667 = 7.3333 (left: 7.3333)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 * 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273) -> There are no possible next steps with the input 0.7273 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 12 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 12 56) -> 12 - 56 = -44 (left: -44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 7 * 8 = 56 (left: 12 56) -> 12 - 56 = -44 (left: -44) -> -44 * 2 = -88 (left: -88)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the number 5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6667 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 8 / 12 = 0.6667 (left: 0.6667 8) -> 0.6667 + 8 = 8.6667 (left: 8.6667)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "7 * 2 = 14 (left:"
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> No possible next steps as the equation has been completed.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n3 + 10 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\nAnswer: (2 * (3 + 5)) + 5 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "7 8 12"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 8 / 12 = 0.6667 (left: 0.6667 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6667 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 8 / 12 = 0.6667 (left: 0.6667 8) -> 0.6667 * 8 = 5.3336 (left: 5.3336 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 8 / 12 = 0.6667 (left: 0.6667 8) -> 0.6667 * 8 = 5.3336 (left: 5.3336 8) -> 5.3336 + 8 = 13.3336 (left: 13.3336)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "It seems like you haven't provided an input for me to work with. Could you please provide the numbers you would like me to find possible next steps for?"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 * 2 = 14 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 12 - 5 = 7 (left: 7) -> 7 * 2 = 14 (left: -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 0.7273 as it is a single number."
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273) -> There are no possible next steps with the input 0.7273 as it is a single number. -> There are no possible next steps with the input 0.7273 as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273) -> There are no possible next steps with the input 0.7273 as it is a single number. -> There are no possible next steps with the input 0.7273 as it is a single number. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6667 8"
                }
            },
            "Step 7": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 8 - 7 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 8 / 12 = 0.6667 (left: 0.6667 8) -> 0.6667 * 8 = 5.3336 (left: 5.3336)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 8": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5  -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 10 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> Possible next steps: -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> Possible next steps: -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them. -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps as the numbers provided do not have any operations that can be performed on them."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> Possible next steps: -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them. -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them. -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> Possible next steps: -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them. -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them. -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them. -> There are no possible next steps as the numbers provided do not have any operations that can be performed on them.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 / 2 = 8 -> No possible next steps. -> There are no possible next steps with the given numbers. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 / 2 = 8 -> No possible next steps. -> There are no possible next steps with the given numbers. -> No possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12) -> 11 / 12 = 0.9167 (left: 0.9167)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 + 6 = 12 (left: 11 12) -> 11 / 12 = 0.9167 (left: 0.9167) -> 0.9167 * 2 = 1.8334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "16 / 2 = 8"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 / 2 = 8 -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 / 2 = 8 -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> Possible next steps: -> There are no possible next steps with the input provided. -> There are no possible next steps with the input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11) -> 0 + 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 / 2 = 8 -> No possible next steps. -> There are no possible next steps with the given numbers. -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 / 2 = 8 -> No possible next steps. -> There are no possible next steps with the given numbers. -> Possible next steps: -> There are no more possible next steps as all numbers are the same.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 4 + 4 = 8 ( -> 4 / 4 = 1 (left: 1 4 8) -> 8 - 4 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 "
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the given numbers."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 11 - 6 = 5 (left: 5 11) -> 11 + 5 = 16 (left: 16) -> 16 / 2 = 8 -> No possible next steps. -> There are no possible next steps with the given numbers. -> None",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0"
                }
            },
            "Step 8": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2) -> 2 - 2 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 8 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 8 5 9) -> 8 / 5 = 1.6 (left: 1.6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 8 5 9) -> 8 / 5 = 1.6 (left: 1.6 9) -> 9 - 1.6 = 7.4 (left: 7.4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Equation has been solved."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> Input: 3 5 7 10 -> 3 * 5 = 15 (left: 7 15 10) -> 15 - 7 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 0.615."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13) -> 8 / 13 \u2248 0.615 (left: 0.615) -> There are no possible next steps for the input 0.615. -> There are no possible next steps for the input 0.615.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 + 32 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 + 32 = 41 (left: 41) -> 41 / 2 = 20.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 8 / 5 = 1.6 (left: 1.6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 8 / 5 = 1.6 (left: 1.6 9) -> 9 / 1.6 = 5.625 (left: 5.625)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "41 / 2 = 20.5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> Input: 3 5 7 10 -> 3 * 5 = 15 (left: 7 15 10) -> 15 - 7 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 0.615."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13) -> 8 / 13 \u2248 0.615 (left: 0.615) -> There are no possible next steps for the input 0.615. -> There are no possible next steps for the input 0.615 as it is a decimal number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8) -> 2 + 9 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 12 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 12 9) -> 12 + 9 = 21 (left: 9 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 12 9) -> 12 + 9 = 21 (left: 9 21) -> 9 + 21 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Equation has been solved."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> Input: 3 5 7 10 -> 3 * 5 = 15 (left: 7 15 10) -> 15 - 7 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "41 / 2 = 20.5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 + 32 = 41 (left: 41) -> 41 / 2 = 20.5 -> 41 * 2 = 82",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32) -> 9 * 32 = 288 (left: 288) -> 8 * 8 * 2 = 128",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> Input: 3 5 7 10",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> Input: 3 5 7 10 -> 3 * 5 = 15 (left: 7 15 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> Input: 3 5 7 10 -> 3 * 5 = 15 (left: 7 15 10) -> 15 - 7 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> Input: 3 5 7 10 -> 3 * 5 = 15 (left: 7 15 10) -> 15 - 7 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Equation has been solved."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No possible next steps, the equation has been solved.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 * 1 = 4 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 8 = 1 (left: 4 1  -> 4 * 1 = 4 ( -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13) -> 8 / 13 \u2248 0.615 (left: 0.615)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 + 4 = 13 (left: 8 13) -> 8 / 13 \u2248 0.615 (left: 0.615) -> There are no possible next steps for the input 0.615.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> Input: 3 5 7 10 -> 3 * 5 = 15 (left: 7 15 10) -> 15 - 7 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Equation has been solved."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: -> No possible next steps as the equation has been solved. -> Equation has been solved. -> No further steps are needed as the equation has already been solved.",
                "Pruning": null
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> There are no possible next steps for the input 5.14285714286.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 "
                }
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps for the input 0.8333333333333334.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps for the input 0.8333333333333334. -> There are no possible next steps for the input 0.8333333333333334 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 5.14285714286."
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> There are no possible next steps for the input 5.14285714286. -> There are no possible next steps for the input 5.14285714286.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> There are no possible next steps for the input 5.14285714286. -> There are no possible next steps for the input 5.14285714286. -> There are no possible next steps for the input 5.14285714286.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 - 5 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> Input: 1 0 1",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 0 + 1 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> Input: 1 0 1 -> 0 + 1 = 1 (left: 1 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 5.14285714286."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252) -> 5 * 2 = 10 (left: 10 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "10 5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps for the input 5.14285714286."
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 36 / 7 = 5.14285714286 (left: 5.14285714286) -> There are no possible next steps for the input 5.14285714286. -> 5.14285714286 * 2 = 10.28571428572 (left: 10.28571428572)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "10 5"
                }
            },
            "Step 8": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252) -> 5 * 2 = 10 (left: 10 5) -> 27 - 9 =",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 5 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 5 7) -> 7 / 1 = 7 (left: -> 1 * 7 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 - 6 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps for the input 0.8333333333333334 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps for the input 0.8333333333333334. -> There are no possible next steps for the input 0.8333333333333334 as it is already a single number. -> There are no possible next steps for the input 0.8333333333333334 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps for the input 0.8333333333333334. -> There are no possible next steps for the input 0.8333333333333334 as it is already a single number. -> There are no possible next steps for the input 0.8333333333333334 as it is already a single number. -> There are no possible next steps for the input 0.8333333333333334 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 7 / 6 = 1.17 (left: 1.17) -> 1 + 17 = 18 -> 17 - 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 6 "
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "10 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 5"
                }
            },
            "Step 7": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36) -> 7 * 36 = 252 (left: 252) -> 5 * 2 = 10 (left: 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the input 0.8333333333333334 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "7 / 1 = 7 (left: 5 6  -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps for the input 0.8333333333333334. -> There are no possible next steps for the input 0.8333333333333334 as it is already a single number. -> There are no possible next steps for the input 0.8333333333333334 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -430."
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430. -> There are no possible next steps with the input of -430.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430. -> There are no possible next steps with the input of -430. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10) -> 10 - 1.33 = 8.67 (left: 8.67 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10) -> 10 - 1.33 = 8.67 (left: 8.67 10) -> 8.67 * 10 = 86.7 (left: 86.7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of -430."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -430."
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430. -> There are no possible next steps with the input of -430.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430. -> There are no possible next steps with the input of -430. -> There are no possible next steps with the input of -430.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 11 / 3 = 3.6666666666666665 (left: 3 11) -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 40 / 1 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of -430."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -430."
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430. -> There are no valid arithmetic operations that can be performed with the input of -430.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430. -> There are no valid arithmetic operations that can be performed with the input of -430. -> There are no valid arithmetic operations that can be performed with the input of -430.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48) -> 48 - 10 = 38 (left: 10 38) -> 10 * 38 = 380 (left: 380)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8) -> There are no possible next steps with the input of -8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of -4."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> Since the input is -4, there are no possible next steps because it is not possible to perform arithmetic operations on a negative number in this context.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> Since the input is -4, there are no possible next steps because it is not possible to perform arithmetic operations on a negative number in this context. -> N/A",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of -430."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10) -> 10 / 1.33 = 7.5188 (left: 7.5188)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10) -> 10 / 1.33 = 7.5188 (left: 7.5188) -> 7 * 5 = 35.5188 (left: 35.5188)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of -430."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -430."
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430. -> There are no possible next steps with the input of -430.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 11 * 40 = 440 (left: 10 440) -> 10 - 440 = -430 (left: -430) -> There are no possible next steps with the input of -430. -> There are no possible next steps with the input of -430. -> There are no possible next steps with the input of -430.",
                "Pruning": null
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 4 = 3.25 (left: 3.25 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 4 = 3.25 (left: 3.25 12) -> 3.25 + 12 = 15.25 (left: 15.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 / 4 = 3.25 (left: 3.25 12) -> 3.25 + 12 = 15.25 (left: 15.25) -> There are no possible next steps for the input 15.25 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform arithmetic operations on."
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps to perform arithmetic operations on. -> No possible next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps to perform arithmetic operations on. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps to perform arithmetic operations on. -> No possible next steps. -> There are no possible next steps with the given numbers. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 * 2"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12 -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "There is only one number provided, so there are no possible next steps to perform arithmetic operations on."
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps to perform arithmetic operations on. -> No possible next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps to perform arithmetic operations on. -> No possible next steps. -> There are no possible next steps with the numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps to perform arithmetic operations on. -> No possible next steps. -> There are no possible next steps with the numbers provided. -> - Multiplying two numbers",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 * 2"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12 -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one number provided, so there are no possible next steps to perform arithmetic operations on."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 1.6667."
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 * 2"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12 -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "- Multiplying two numbers"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps for the input 1.6667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points."
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 * 2"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12 -> 12 + 2 = 14 (left: 6 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 12 / 16 = 0 -> 16 / 12 = 1.33 (left: 1.33) -> There is only one number provided, so there are no possible next steps to perform arithmetic operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "There are no possible next steps for the input 1.6667."
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 * 4 = 20 (left: 20 12) -> 20 / 12 = 1.6667 (left: 1.6667) -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667. -> There are no possible next steps for the input 1.6667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6 * 2"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left: -> 4 * 12 = 48 (left: 48) -> There are no possible next steps for the number 48. It is a prime number and cannot be divided further without using decimal points. -> 48 = 2 * 2 * 2 * 2 * 3 (prime factorization) -> 48 / 4 = 12 (left: 12 = 2 * 2 * 3) -> 2 * 3 = 6 (left: 6 * 2) -> 6 * 2 = 12 -> 6 + 2 = 8 (left: 8 12)",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible -> It seems like there was a mistake in the input provided. Can you please provide the correct input so that I can suggest possible next steps? -> Please provide the correct input so that I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 0.875."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input 0.875."
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875. -> There are no possible next steps with the input 0.875.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875. -> There are no possible next steps with the input 0.875. -> There are no possible next steps with the input 0.875.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 * 6 = 54 ("
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 9 * 6 = 54 ( -> 54 / 9 = 6 (left: 6 6 54)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 9 * 6 = 54 ( -> 54 / 9 = 6 (left: 6 6 54) -> 6 / 6 = 1 (left: 1 54)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 6 6"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 * 6 = 9 (left: 6 9) -> 9 * 6 = 54 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Please provide more numbers to continue with the calculations."
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left:  -> There are no possible next steps as the input is not complete. -> Please provide more numbers to continue with the calculations. -> 14 - 8 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left:  -> There are no possible next steps as the input is not complete. -> Please provide more numbers to continue with the calculations. -> 14 - 8 = 6 (left: 2 6  -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 0.875."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 + 5 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 1.5 + 6 = 7.5 (left: 6 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 1.5 + 6 = 7.5 (left: 6 7.5) -> 7.5 - 6 = 1.5 (left: 1.5 7.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Please provide more numbers to continue with the calculations."
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left:  -> There are no possible next steps as the input is not complete. -> Please provide more numbers to continue with the calculations. -> - Divide one of the existing numbers by the new number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left:  -> There are no possible next steps as the input is not complete. -> Please provide more numbers to continue with the calculations. -> - Divide one of the existing numbers by the new number. -> 14 / 2 = 7 (left: 8 7 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left:  -> There are no possible next steps as the input is not complete.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left:  -> There are no possible next steps as the input is not complete. -> Please provide more numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Please provide more numbers to continue with the calculations."
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left:  -> There are no possible next steps as the input is not complete. -> Please provide more numbers to continue with the calculations. -> The next steps will depend on the additional numbers you provide. Please input more numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 6 = 0 (left:  -> There are no possible next steps as the input is not complete. -> Please provide more numbers to continue with the calculations. -> The next steps will depend on the additional numbers you provide. Please input more numbers to continue with the calculations. -> If you provide more numbers, I can continue with the calculations. Please input the additional numbers.",
                "Pruning": null
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for 1.25 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 + 5 = 10"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10 -> 5 - 5 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10 -> 5 - 5 = 0 (left: 0 10) -> 10 / 0 = undefined (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 3"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 3 = 3 (left: 6 3 12) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 + 5 = 10"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10 -> 5 - 5 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10 -> 5 - 5 = 0 (left: 0 10) -> 0 + 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 - 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 3",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 3 -> 3 / 2 = 1.5 (left: 1.5 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps. -> There are no possible next steps for the given numbers.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps. -> There are no possible next steps for the given numbers. -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1) -> No possible next steps. -> There are no possible next steps for the given numbers. -> No possible next steps. -> There are no more possible next steps for the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no more possible next steps for the given numbers."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 4 3"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps with the input 0.8.",
                "Pruning": null
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps. -> - Divide the two numbers",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps. -> - Divide the two numbers -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.733333333334 * 2 = 3.466666666"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334 -> 0.866666666667 + 2 = 2.866666666667 -> 0.866666666667 * 2 = 1.733333333334 (left: 1.733333333334 2) -> 1.733333333334 * 2 = 3.466666666 -> 1.733333333334 / 2 = 0.866666666667",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334 -> 0.866666666667 + 2 = 2.866666666667 -> 0.866666666667 * 2 = 1.733333333334 (left: 1.733333333334 2) -> 1.733333333334 * 2 = 3.466666666 -> 1.733333333334 / 2 = 0.866666666667 -> 1.733333333334 * 2 = 3.466666666668 (left: 0.866666666667 3.466666666668)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44) -> 13 * 44 = 572 (left: 572)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 13 44) -> 13 * 44 = 572 (left: 572) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.866666666667 * 2 = 1.733333333334"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334 -> 0.866666666667 + 2 = 2.866666666667",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334 -> 0.866666666667 + 2 = 2.866666666667 -> 0.866666666667 - 2 = -1.133333333333 (left: -1.133333333333 + 2 = 0.866666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334 -> 0.866666666667 + 2 = 2.866666666667 -> 0.866666666667 - 2 = -1.133333333333 (left: -1.133333333333 + 2 = 0.866666666667) -> -1.133333333333 / 2 = -0.5666666666665 (left: -0.5666666666665)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 15"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2) -> 5 + 10 = 15 (left: 2 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "2 15"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2) -> 5 + 10 = 15 (left: 2 15) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "0.866666666667 * 2 = 1.733333333334"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334 -> 0.866666666667 + 2 = 2.866666666667",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334 -> 0.866666666667 + 2 = 2.866666666667 -> 0.866666666667 * 2 = 1.733333333334 (left: 1.733333333334 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334 -> 0.866666666667 + 2 = 2.866666666667 -> 0.866666666667 * 2 = 1.733333333334 (left: 1.733333333334 2) -> 1.733333333334 * 2 = 3.466666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps. -> - Divide the two numbers -> There is only one possible next step: -> 8 + 6 = 14 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps. -> - Divide the two numbers -> There is only one possible next step: -> 8 + 6 = 14 (left: 2 14) -> Input: 16 12 28 7",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 11 13"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13) -> 13 * 13 = 169 (left: 169)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 11 13) -> 2 + 11 = 13 (left: 13 13) -> 13 * 13 = 169 (left: 169) -> 13 + 6 = 169",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Input: 3 7 5 2"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2) -> Possible next steps: -> There are no possible next steps as the input values do not allow for any operations to be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 15"
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2) -> 5 + 10 = 15 (left: 2 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 13 - 4 = 9 (left: 11 9) -> 11 - 9 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers for possible next steps. -> - Divide the two numbers -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 11 13"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 + 11 = 15 (left: 13 15) -> 13 / 15 = 0.866666666667 (left: 0.866666666667) -> 0.866666666667 * 2 = 1.733333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "Input: 3 7 5 2"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 5 - 2 = 3 (left: ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Input: 3 7 5 2"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2) -> 5 + 10 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps as the input values do not allow for any operations to be performed."
                }
            },
            "Step 7": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2) -> Possible next steps: -> There are no possible next steps as the input values do not allow for any operations to be performed. -> There are no possible next steps as the input values do not allow for any operations to be performed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 4 = 4 (left: 4 11 13) -> 4 * 11 = 44 (left: 44 13) -> 44 * 13 = 572 (left: 572) -> Input: 3 7 5 2 -> 3 + 7 = 10 (left: 5 10 2) -> Possible next steps: -> There are no possible next steps as the input values do not allow for any operations to be performed. -> There are no possible next steps as the input values do not allow for any operations to be performed. -> There are no possible next steps as the input values do not allow for any operations to be performed.",
                "Pruning": null
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 5 + 10 = 15 (left: 15 13) -> 13 * 15 = 195 (left: 195) -> 1 * 9 * 5 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2.25 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 13 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 + 36 = 49 (left: 10 49)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 + 36 = 49 (left: 10 49) -> Input: 11 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 + 36 = 49 (left: 10 49) -> Input: 11 3 -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 8 0"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 - 8 = 16 (left: 16 8 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 - 8 = 16 (left: 16 8 0) -> 8 * 0 = 0 (left: 16 0)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 - 5 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8) -> There are no possible next steps with the input of -8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 13 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 / 36 = 3.61111111111 (left: 3.61111111111)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 / 36 = 3.61111111111 (left: 3.61111111111) -> 3 + 6 = 9.61111111111 (left: 9.61111111111)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "Input: 4 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 8 0"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 - 8 = 16 (left: 16 8 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 - 8 = 16 (left: 16 8 0) -> 16 - 8 = 8 (left: 8 8 0)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> 39 + 2 = 41 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2.25 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 13 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 - 10 = 3 (left: 3 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 - 10 = 3 (left: 3 36) -> 3 * 3 = 9 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 - 10 = 3 (left: 3 36) -> 3 * 3 = 9 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "Input: 4 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 8 0"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 * 8 = 192 (left: 0 192)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 * 8 = 192 (left: 0 192) -> 192 / 0 is undefined (left: 0 192)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12 -> 9 / 3 = 3 (left: 3 9  -> Input: 4 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 13 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 36 - 10 = 26 (left: 26 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 36 - 10 = 26 (left: 26 13) -> 26 + 13 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 36 - 10 = 26 (left: 26 13) -> 26 + 13 = 39 (left: 39) -> 39 / 2 = 19.5 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "Input: 4 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 8 0"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 - 8 = 16 (left: 16 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 - 8 = 16 (left: 16 0) -> 16 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of -8."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "10 13 36"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 13 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24 8 0"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 - 8 = 16 (left: 16 8 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 13 * 10 = 130 (left: 130 36) -> 130 * 36 = 4680 (left: 4680) -> 4 * 6 = 24 (left: 24 8 0) -> 24 - 8 = 16 (left: 16 8 0) -> 16 + 8 = 24 (left: 8 0 24)",
                "Pruning": null
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 947781,
        "output_tokens": 381730.23412698356,
        "total_cost": 1.0464858511904753
    }
}