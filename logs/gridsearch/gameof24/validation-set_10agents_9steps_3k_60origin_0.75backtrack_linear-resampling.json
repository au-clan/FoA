{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 5 15 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 5 15  -> 15 / 5 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 5 15  -> 15 / 5 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9) -> Input: 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 9 15) -> 15 - 9 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 9 15) -> 15 - 9 = 6 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 9 30 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1. -> There are no possible next steps with just the input of 1.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1. -> There are no possible next steps with just the input of 1. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 9 30 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input \"1.3333\" as it is already a single number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 12 = 21 (left: 5 6 21)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 22."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 13 / 8 = 1.625 (left: 1.625)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 9 / 1 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)  -> 21 * 8 = 168 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 11 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 3 * 9 = 27 (left: 12 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 3 * 9 = 27 (left: 12 27) -> 12 * 27 = 324 (left: 324)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "45"
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 5 15  -> 15 / 5 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps with just the number 45.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 5 6 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 6 = 15 (left: 5 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 6 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 6 = 15 (left: 5 15) -> 5 * 15 = 75 (left: 75) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 * 13 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input \"1.3333\" as it is already a single number."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9 -> 12 / 9 = 1.3333 (left: 1.3333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 / 9 -> 12 / 9 = 1.3333 (left: 1.3333) -> There are no possible next steps with the input \"1.3333\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 7 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 5 = 7 (left: 7 6 9) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 5 = 7 (left: 7 6 9) -> 7 / 6 = 1.1666666666666667 (left: 1.166666666666666 -> 1.166666666666666 * 2 = 2.333333333333332 (left: 2.333333333333332)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 / 13 = 0.615 (left: 0.615)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input \"1.3333\" as it is already a single number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 9 12) -> 9 / 1.2 = 7.5 (left: 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 9 12) -> 9 / 1.2 = 7.5 (left: 7 -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 13"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 13"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 30 - 9 = 21 (left: 21) -> There is only one possible next step: 21 - 8 = 13 (left: 8 13) -> 13 - 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 110 + 54 = 164 (left: 164)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 4"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21) -> 54 / 21 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 4"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 2.3333333333333335 (left: 6 2.3333333333333335)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 2.3333333333333335 (left: 6 2.3333333333333335) -> 6 / 2.3333333333333335 = 2.5714285714285716 (left: 2.5714285714285716)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16) -> 16 / 7 = 2.285714285714286 (left: 2.285714285714286)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 4"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12 -> 3 + 6 = 9 (left:  9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 4"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54) -> 21 - 54 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 6 + 11 = 17 (left: 17 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 6 + 11 = 17 (left: 17 90) -> 17 * 90 = 1530 (left: 1530)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 + 9 = 15 (left: 15 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 + 9 = 15 (left: 15 21) -> 21 / 15 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165) -> 10 + 165 = 175 (left: 165)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44) -> 44 / 11 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 11 = 8 (left: 6 8 19) -> 8 - 6 = 2 (left: 2 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 4"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 4"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                }
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "9 4"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 / 11 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 11 = -> 10 / 11 = 0.9090909090909091",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 11 = -> 10 / 11 = 0.9090909090909091 -> There are no possible next steps for this input as it is already simplified.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 4"
                }
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 3 = 7 (left: 7 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 3 = 7 (left: 7 21) -> 21 - 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 4"
                }
            },
            "Step 7": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "9 4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940) -> 5 + 4 = 9 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "9 4"
                }
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - -> 16 - 8 = 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - -> 16 - 8 = 8 -> 16 / 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "18 / 3.5 = 5.142857142857143 ("
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with the input 22."
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 + 2 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22. -> None.",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "0.5 + 2 = 2.5"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5) -> 0.5 + 2 = 2.5 -> 2.5 / 2 = 1.25 (left: 1.25 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 2 = 9 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 2 = 9 (left: 4 5 9) -> 5 - 4 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18 / 3.5 = 5.142857142857143 ("
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> Input: 3.5 18 56 10 -> 18 / 3.5 = 5.142857142857143 ( -> 18 * 3.5 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 + 10 = 20"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 20 100)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 * 11 = 17.6 (left: 17.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 * 11 = 17.6 (left: 17.6) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "11 - 5 = 6"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6 -> 11 + 5 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6 -> 11 + 5 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "0.5 + 2 = 2.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 2 = 8 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 16"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> Possible -> It seems like there might have been a mistake in the input provided. Can you please clarify or provide a new set of numbers for me to generate possible next steps for you?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> Possible -> It seems like there might have been a mistake in the input provided. Can you please clarify or provide a new set of numbers for me to generate possible next steps for you? -> I'm sorry, I am unable to generate possible next steps without a set of numbers to work with. Please provide a new set of numbers for me to analyze.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18 / 3.5 = 5.142857142857143 ("
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> Input: 3.5 18 56 10 -> 18 / 3.5 = 5.142857142857143 ( -> 18 / 3.5 = 5.142857142857143",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> Input: 3.5 18 56 10 -> 18 / 3.5 = 5.142857142857143 ( -> 18 / 3.5 = 5.142857142857143 -> Input: 5 7 9 11",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2 -> 7 - 3 = 4 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "11 - 5 = 6"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 =  -> 11 - 5 = 6 -> 11 * 5 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided to perform operations with."
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 * 11 = 17.6 (left: 17.6) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) ->  -> No input provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) ->  -> No input provided. -> It seems like there is no input provided, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers provided to perform operations with."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 * 11 = 17.6 (left: 17.6) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 1.6 * 11 = 17.6 (left: 17.6) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> There are no possible next steps as there are no other numbers provided to perform operations with. -> None",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10 + 10 = 20"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 / 2 = 5.5 (left: 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5) -> 0.5 + 2 = 2.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 16 = 64 (left: 2 64)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 16 = 64 (left: 2 64) -> 64 - 64 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 16 = 64 (left: 2 64) -> 64 - 64 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps as there is no input given."
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 16 = 64 (left: 2 64) -> 64 - 64 = 0 (left: 0) -> There are no possible next steps as there is no input given. -> There are no possible next steps as there is no input given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 16 = 64 (left: 2 64) -> 64 - 64 = 0 (left: 0) -> There are no possible next steps as there is no input given. -> There are no possible next steps as there is no input given. -> No input provided. Please provide a list of numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> Input: 3.5 18 56 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> Input: 3.5 18 56 10 -> 18 / 3.5 = 5.142857142857143 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128) -> 1 * 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 - 5 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 14 = 30 (left: 8 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16 -> 16 + 14 = 30 (left: 8 30) -> 8 + 30 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps as there is no input given."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 + 2 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 + 2 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 + 2 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "It seems like there is no input provided, so there are no possible next steps to calculate."
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 5 8 11) ->  -> No input provided. -> It seems like there is no input provided, so there are no possible next steps to calculate. -> No input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) ->  -> No input provided. -> It seems like there is no input provided, so there are no possible next steps to calculate. -> No input provided. -> Without input, there are no possible next steps to provide.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. If you provide more numbers, I can suggest possible calculations to reach a target number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 4 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 - 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 + 1 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 - 10 = 0 (left: 0) -> No possible next steps with just the number 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 10 - 9 = 1 (left: 9 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 10 - 9 = 1 (left: 9 1) -> 9 - 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 3.33 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 3.33 1) -> 3.33 / 1 = 3.33 (left: 3.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 7.5 13"
                }
            },
            "Step 7": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 2 + 7.5 = 9.5 (left: 9.5 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13) -> 2 + 7.5 = 9.5 (left: 9.5 13) -> 9.5 - 13 = -3.5 (left: -3.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 / 2 = 7.5 (left: -> 15 - 2 = 13 (left: 2 7.5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20) -> 20 / 10 = 2 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 - 0 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 - 0 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72) -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18) -> 8 / 18 = 0.444 (left: 0.444)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 0 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 10 - 9 = 1 (left: 9 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 10 - 9 = 1 (left: 9 1) -> 9 + 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 4 2 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 * 8 = 80 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 0 10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 10 - 9 = 1 (left: 1 10",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 10 - 9 = 1 (left: 1 10 -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 / 1 = 2 (left: 2 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 / 1 = 2 (left: 2 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 2 / 1 = 2 (left: 2 15) -> 15 - 2 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 2 8 6.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 0 10"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 0 + 10 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 0 + 10 = 10 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 + 0 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 + 0 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 * 0 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 * 0 = 0 (left: 0 10) -> 10 / 0 = Undefined (division by zero is undefined)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 * 0 = 0 (left: 0 10) -> 10 / 0 = Undefined (division by zero is undefined) -> 10 + 0 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 + 0 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 + 0 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 2 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 * 0 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 * 0 = 0 (left: 0 10) -> 0 + 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 - 0 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 - 0 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 7": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 - 0 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 - 0 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 8 6.5"
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 2 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 14 / 2 = 7 (left: 2 7)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 8 = 1 (left: 2 1 14) -> 14 / 1 = 14 (left:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 3 = 6 (left: 3 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 3 = 6 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no more possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 - 2 = 0 (left: 0 3) -> 0 + 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 - 2 = 6 (left: 6 8 14) -> 6 + 8 = 14 (left: 14 14)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2  -> 4 / 2 = 2 (left: 2) -> 5 - 7 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "5 - 7 ="
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 2 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 9 / 6 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 9 / 6 = -> 9 / 6 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 * 5 = 20 (left: 20) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 3 - 5 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 3 3) -> 2 + 3 = 5 (left: 3 5) -> 3 - 5 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 2 = 4 (left: 2 4 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 2 = 4 (left: 2 4 14) -> 14 / 4 = 3.5 (left: 2 3.5)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> 28 - 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 2 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 + 2 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "1.6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156) -> 19 / 156 \u2248 0.122 (left: 0.122)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13  -> 13 / 7 = 1.857 (left: 1.857)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13  -> 13 / 7 = 1.857 (left: 1.857) -> 1.857 - 2 = -0.143",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> There are no possible next steps with the input of 18. -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you. -> Without additional input, I cannot generate possible next steps. Please provide the numbers you would like me to work with.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156) -> 19 / 156 = 0.12179487179 (left: 0.12179487179)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 * 8 = 200 (left: 8)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 13 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 13  -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 13  -> Possible next steps: -> There are no more possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 * 8 = 200 (left: 8)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.83333333333 (left: 10.83333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 * 2 = 26 (left: 13 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 * 2 = 26 (left: 13 26) -> 13 * 26 = 338 (left: 338)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> There are no possible next steps with only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> There are no possible next steps with only one number given. -> Please provide more numbers to continue.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13) -> -5 * 13 = -65 (left: -65)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 2 = 27 -> 2 + 25 = 27 (left: 27 27)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 7  -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 7  -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571) -> 0.8571428571428571 / 2 = 0.42857142857142855",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 13 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> There is only one possible next step: 18/2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "25"
                }
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59) -> 13 / 59 \u2248 0.22 (left: 0.22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 50 = -25 (left: -25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 / 13 = 5 (left: 13 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 / 13 = 5 (left: 13 5) -> 13 - 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 / 7 = 1.857 (left: 1.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "25"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25) -> 25 + 25 = 50 (left: )",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 - 8 = 10 (left: 8) ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 13 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1 (left: -> 18 / 13 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 78 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 78 13) -> 78 / 13 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> None, as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> None, as there is only one number left. -> No possible next steps, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 4": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 13 = 6 (left: 6 19) -> 6 + 19 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "18"
                }
            },
            "Step 8": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 - 13 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> None - 18 is the final result.",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33 6) -> 2.33 * 6 = 13.98 (left: 13.98)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33 6) -> 2.33 * 6 = 13.98 (left: 13.98) -> There are no operations that can be performed on the number 13.98 with the numbers given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 / 1.2 = 8.333333333333334 (left: 8.333333333333334)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 "
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30 -> 15 / 2 = 7.5 (left: 7.5 * 2 = 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 7 / 3 = 2 (left: 2) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 * 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 / 1.2 = 8.333333333333334 (left: 8.333333333333334)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 6 7"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 * 10 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 10"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 10 + 36 = 46 (left: 46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 + 10 = 11.2 (left: 11.2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> There are no possible next steps for the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 + 10 = 11.2 (left: 11.2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6) -> 1.67 * 6 = 10.02 (left: 10.02)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6) -> 1.67 * 6 = 10.02 (left: 10.02) -> 10 + 2 = 12.02",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 / 1.2 = 8.333333333333334 (left: 8.333333333333334)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 / 1.2 = 8.333333333333334 (left: 8.333333333333334)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0 -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 7"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 * 2 = 2.5714285714285716",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 + 10 = 11.2 (left: 11.2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 * 4 = 16 (left: 4 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 + 10 = 11.2 (left: 11.2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 3 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 10) -> 10 - 3 = 7 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 / 2 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 / 2 = 5 (left: 5 10) -> 5 / 10 = 0.5 (left: 0.5 10) -> 0.5 * 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.2 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 - 1.2 = 8.8 (left: 8.8)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 + 10 = 11.2 (left: 11.2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 10 / 1.2 = 8.33333 (left: 8.33333)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> Input: 4 5 9 -> 4 * 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.2 10"
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 / 10 = 0.12 (left: 0.12)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.2 10"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10) -> 12 / 10 = 1.2 (left: 1.2 10) -> 1.2 + 10 = 11.2 (left: 11.2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 8 16"
                }
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((11 - 8) * 4) * 2 = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the input 32 since there are no other numbers provided to perform operations with."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((11 - 8) * 4) * 2 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 10 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 10 8) -> 10 + 8 = 18 (left: 8 18) -> 8 + 18 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12) -> 16 / 12 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((11 - 8) * 4) * 2 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 + 8 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 + 8 = 19 (left: 12 19) -> 12 * 19 = 228 (left: 228)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * 4 * 2 = 24",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (4 * 2) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11) -> 1.14 * 11 = 12.54 (left: 12.54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4) -> There are no possible next steps for the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((11 - 8) * 4) * 2 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * 4 * 2 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the input 32 since there are no other numbers provided to perform operations with."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 8 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 8 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 8 40) -> 40 - 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: 3 * 4 * 2 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((11 - 8) * 4) * 2 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the input 32 since there are no other numbers provided to perform operations with."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 8 + 12 = 20 (left: 11 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 8 + 12 = 20 (left: 11 20) -> 11 + 20 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 32"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 32 = 256 (left: 256)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((11 - 8) * 4) * 2 = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 / 4 = 2.75 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the input 32 since there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: ((11 - 8) * 4) * 2 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the input 32 since there are no other numbers provided to perform operations with."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: 3 * 4 * 2 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 24) -> Answer: (11 - 8) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the input 32 since there are no other numbers provided to perform operations with."
                }
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 1.33 - 13 = -11.67 (left: -11.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> There are no more possible next steps as the equation has been solved.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 / 8 = 2.125 (left: 2.125 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 / 8 = 2.125 (left: 2.125 14) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5) -> 5 / 8 = 0.625 (left: 0.625)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "27"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 8 * 17 = 136 (left: 14 136)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 8 * 17 = 136 (left: 14 136) -> 136 / 14 = 9.71 (left: 9.71)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 16 9)\n16 - 9 = 7 (left: 7)\n7 + 7 = 14 (left: 14)\n14 + 8 = 22 (left: 22",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to perform calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14) -> 14 / 9 = 1.5555555555556 (left: 1.5555555555556)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 + 2 = 3.07692307692 (left: 3.07692307692)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 16 13"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 / 16 = 0.375 (left: 0.375 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 / 16 = 0.375 (left: 0.375 13) -> 0.375 / 13 = 0.028846 (left: 0.028846)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 13) -> 6 / 16 = 0.375 (left: 0.375 13) -> 0.375 / 13 = 0.028846 (left: 0.028846) -> There are no possible next steps with the input 0.028846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14) -> 14 - 9 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 3 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\nAnswer: (3 * 4) * (7 + 3) = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "0.1875 * 2 = 0.375"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 / 8 = 2.125 (left: 2.125 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 / 8 = 2.125 (left: 2.125 14) -> 2.125 * 14 = 29.75 (left: 29.75)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 / 10 = 1 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5) -> There are no possible next steps for the input 10.5 because it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 14 - 8 = 6 (left: 6 14) -> 6 - 14 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 + 4 = 17 (left: 10 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 + 4 = 17 (left: 10 17) -> 10 + 17 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 -> 20 + 10 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14) -> 14 / 9 = 1.55556 (left: 1.55556)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27) -> 6 + 27 = 33 (left: 27)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (5 - 3) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "Please provide at least two numbers to continue with the calculations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 8 + 17 = 25 (left: 14 25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 8 + 17 = 25 (left: 14 25) -> 14 + 25 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> 0.1875 * 2 = 0.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4.5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 17 14"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 17 14) -> 17 - 8 = 9 (left: 9 14) -> 14 - 9 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 17 14"
                }
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 - 2 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.85714285714 (left: 2.85714285714) -> 2.85714285714 - 2 = 0.85714285714 (left: 0.85714285714)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There is only one number provided in the input (1.5), so there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> Possible next steps: -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8.57 17.14"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 9 18)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 - 7 = -5 (left: -5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 - 7 = -5 (left: -5 10) -> -5 - 10 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0 70) ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0 70)  -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900) ",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8.57 17.14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 / 6 = 1.1667 (left: 1.1667 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 / 6 = 1.1667 (left: 1.1667 10) -> 1.1667 + 10 = 11.1667 (left: 11.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19) -> 19 + 2 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 -> 70 / 70 = 1 (left: 1 70 140)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 + 10 = 17 (left: 6 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 + 10 = 17 (left: 6 17) -> 6 * 17 = 102 (left: 102)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)  -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168) -> 168 - 1 = 167 (left: 167)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 / 70 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> 17 / 2 = 8.5 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "70 70"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8.57 17.14"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> 8.57 * 17.14 = 146.6038 (left: 146.6038)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "70 70"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "70 70"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "70 70"
                }
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = Undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 12 / 5 = 2.4 (left: 2.4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 12 / 5 = 2.4 (left: 2.4 12) -> 12 - 2.4 = 9.6 (left: 9.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "153.9996"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> 153.9996 / 2 = 76.9998",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> 153.9996 / 2 = 76.9998 -> 76.9998 + 2 = 78.9998",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121) -> 1 + 2 + 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 - 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12.83333 = 0.93587 (left: 0.93587)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "153.9996"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> 153.9996 * 2 = 307.9992",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> 153.9996 * 2 = 307.9992 -> 153.9996 / 2 = 76.9998 (left: 76.9998 2 307.9992)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12) -> 12 / 9.17 = 1.31 (left: 1.31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 7",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 * 10 = 250 (left: 250)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "153.9996"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> 153.9996 * 2 = 307.9992 ",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333) -> There are no possible next steps with the input of -2.8333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 / 10 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663) -> 20.1663 - 12 = 8.1663 (left: 8.1663 20.1663)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 * 10 = 250 (left: 250)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "153.9996"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> 153.9996 - 2 = 151.9996",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12) -> 12 + 1.83 = 13.83 (left: 11",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83 (approximately) (left: 1.83 11 12) -> 12 + 1.83 = 13.83 (left: 11 -> 11 / 2 = 5.5 (left: 2 8 5.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663) -> 20.1663 - 12 = 8.1663 (left: 8.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20.1663 (left: 12 20.1663) -> 20.1663 - 12 = 8.1663 (left: 8. -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "25 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 18"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 18 = 0 (left: 0 18) -> 0 + 18 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0 18"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 18 = 0 (left: 0 18) -> 18 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "25 10"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 / 10 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12.83333 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12.83333 12) -> 12.83333 * 12 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 18"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 18 = 0 (left: 0 18) -> 0 * 18 = 0 (left: 18)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0 18"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 18 = 0 (left: 0 18) -> 0 + 18 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0 18"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12 = 1 (left: 1 12.83333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12 = 1 (left: 1 12.83333) -> 1 / 12.83333 = 0.07788 (left: 0.07788 12.83333)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 18 = 0 (left: 0 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0 18"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 18 = 0 (left: 0 18) -> 18 - 18 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0 18"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1.8333 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> 18 - 18 = 0 (left: 0 18) -> 18 - 0 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0 18"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 12 - 5 = 7 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: -> 1.83333 * 11 = 20.16663 (left: 20.16663)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: -> 1.83333 * 11 = 20.16663 (left: 20.16663) -> 20 / 2 = 10.083315",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "153.9996"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> There are no valid operations that can be performed on the number 153.9996.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> There are no valid operations that can be performed on the number 153.9996. -> There are no valid operations that can be performed on the number 153.9996.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 11 = 1 (left: 1.83333 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 11 = 1 (left: 1.83333 1) -> 1.83333 + 1 = 2.83333 (left: 2.83333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 11 = 1 (left: 1.83333 1) -> 1.83333 + 1 = 2.83333 (left: 2.83333) -> 2.83333 - 8 = -5.16667 (left: -5.16667)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.8333 11 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 / 12.8333 = 0.9358 (left: 0.9358)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 / 12.8333 = 0.9358 (left: 0.9358) -> There are no possible next steps for the input 0.9358 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "25 10"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 + 10 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "25 10"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10) -> 25 - 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0 18"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 / 6 = 1.83 (rounded to 2) (left: 2 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> Possible -> - s - s = 0 (left: P o sible)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> Possible -> - s - s = 0 (left: P o sible) -> No valid operations can be performed on the input \"P o sible\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 + 1.83333 = 12.83333 (left: 12.83333 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 + 1.83333 = 12.83333 (left: 12.83333 12) -> 12.83333 * 12 = 154 (left: 154)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 + 1.83333 = 12.83333 (left: 12.83333 12) -> 12.83333 * 12 = 154 (left: 154) -> 3 + 3 + 4 = 10 (left: 10",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "25 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "153.9996"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> 153.9996 + 2 = 155.9996",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 + 11 = 12.8333 (left: 12 12.8333) -> 12 * 12.8333 = 153.9996 (left: 153.9996) -> 153.9996 + 2 = 155.9996 -> 153.9996 / 2 = 76.9998",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59) -> None - there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the provided input."
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the provided input. -> There are no possible next steps with the provided input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 * 2 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 * 2 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 * 2 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the provided input."
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the provided input. -> There are no possible next steps with the provided input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the provided input. -> There are no possible next steps with the provided input. -> None",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1)  -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 6 9 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 6 9 8) -> 6 + 9 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 6 9 8) -> 6 + 9 = 15 (left: 8 15) -> 8 / 15 = 0.5333333333333333 (left: 0.5333333333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = 1 (left: 1) -> 1 + 1 = 2 -> 2 * 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = 1 (left: 1) -> 1 + 1 = 2 -> 2 * 1 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1) -> There is only one number inputted, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> 9 / 9 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the provided input."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 11 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 11 1) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 * 2 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29) -> There is only one number given, so there are no possible next steps to perform any operations. -> Input: 5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 * 2 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29) -> There is only one number given, so there are no possible next steps to perform any operations. -> Input: 5 -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 1.57 + 2 = 3.57",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 + 2 = 4 -> 2 ^ 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "9"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the provided input."
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the provided input. -> There are no possible next steps with the provided input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the provided input. -> There are no possible next steps with the provided input. -> There are no possible next steps with the provided input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2 = 4.5 (left: 4.5 11) -> Possible next steps: -> There are no possible next steps with the provided input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 / 2 = 2.75 (left: 2.75)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the provided input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None - there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59) -> None - there is only one number provided. -> There are no possible next steps since there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59) -> None - there is only one number provided. -> There are no possible next steps since there is only one number provided. -> N/A - There is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 9  -> 12 - 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 9  -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.57 + 2 = 3.57"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 1.57 + 2 = 3.57 -> 1.57 * 2 = 3.14",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57) -> 1.57 + 2 = 3.57 -> 1.57 * 2 = 3.14 -> 2 * 1.57 = 3.14 (left: 3.14 3.14)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> There are no possible next steps for the input of 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 11 - 9 = 2 (left: 9 2) -> 9 * 2 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None - there is only one number provided."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59) -> None - there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59) -> None - there is only one number provided. -> There are no possible next steps as there is only one number provided. -> None - as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 16 13"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 16 13) -> 16 - 13 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 16 13) -> 16 - 13 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 16 13) -> 16 - 13 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39) -> 39 - 2 = 37"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> - Add two numbers together",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 - 9 = 47 (left: 47)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 - 8 = -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 - 8 = - -> 7 - 8 = -1",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 - 8 = - -> 7 - 8 = -1 -> 7 * 8 = 56 (left: -1 56)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 - 9 = -7.875 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "3 12"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 - 12 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "3 12"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (7 + (13 - 5)) + 9 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 12 + 9 =  -> 12 + 9 = 21",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 7 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 7 =  -> 1. 9 / 7 = 1.2857",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 7 =  -> 1. 9 / 7 = 1.2857 -> 9 * 7 = 63 (left: 63 1.2857)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 5 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 - 15 = -6 (left: -6)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284) -> 2.4285714285714284 + 8 = 10.428571428571428",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 + 72 = 140",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the number 120 as it is already a single number and cannot be combined with other numbers using the basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0.8333 * 2 = 1.6666"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333) -> 0.8333 * 2 = 1.6666 -> 0.8333 - 2 = -1.1667",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333) -> 0.8333 * 2 = 1.6666 -> 0.8333 - 2 = -1.1667 -> 0.8333 + 2 = 2.8333 (left: 2.8333 -1.1667)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 14 20"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 8 = 20 (left: 2 14 20) -> 20 - 2 = 18 (left: 18 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 8 = 20 (left: 2 14 20) -> 20 - 2 = 18 (left: 18 20) -> 20 / 18 =",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: )",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: ) -> It seems like you forgot to input a sequence of numbers. Please provide the numbers so we can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333) -> 0.8333 * 2 = 1.6666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "14 / 2 = 7"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> 14 / 2 = 7 -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "14 / 2 = 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288) -> 8 + 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 14 20"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 8 = 20 (left: 2 14 20) -> 14 / 2 = 7 (left: 7 14 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 8 = 20 (left: 2 14 20) -> 14 / 2 = 7 (left: 7 14 20) -> 20 / 7 = 2 (left: 2 14",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6) -> 8 + 6 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "0.6666666666666666 / 0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 0.6666666666666666 -> 0.6666666666666666 * 0.6666666666666666 = 0.4444444444444444",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 0.6666666666666666 -> 0.6666666666666666 * 0.6666666666666666 = 0.4444444444444444 -> 0.6666666666666666 / 0.6666666666666666 = 1 (left: 1 0.4444444444444444)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 / 3 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 2 3 12) -> 12 / 3 = 4 (left: 2 4) -> 4 - 2 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "120"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There is only one number, so no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There is only one number, so no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 -> 12 + 8 = 20 (left: 2 14 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "It seems like you forgot to input a sequence of numbers. Please provide the numbers so we can generate possible next steps for you."
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: ) -> It seems like you forgot to input a sequence of numbers. Please provide the numbers so we can generate possible next steps for you. -> Unfortunately, without a sequence of numbers to work with, I am unable to generate possible next steps. Please provide the numbers so I can assist you further.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: ) -> It seems like you forgot to input a sequence of numbers. Please provide the numbers so we can generate possible next steps for you. -> Unfortunately, without a sequence of numbers to work with, I am unable to generate possible next steps. Please provide the numbers so I can assist you further. -> Unfortunately, without a sequence of numbers to work with, I am unable to generate possible next steps. Please provide the numbers so I can assist you further.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 72) -> 7 * 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 72) -> 7 * 2 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 + 16 = 18 (left: 18) ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps for the number 120 as it is already a single number and cannot be combined with other numbers using the basic arithmetic operations."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 6 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 6 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 6 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "14 / 2 = 7"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 72) -> 7 * 2 = 14 (left: 14) -> 14 / 2 = 7 -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 / 2 = 5"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 6 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "10 / 2 = 5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 0.6666666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "10 + 10 = 20"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 20 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 20 100) -> 100 / 5 = 20 (left: 20 100)",
                "Pruning": null
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 + 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 + 3 -> 12 + 3 = 15",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 11 12) -> 12 + 3 -> 12 + 3 = 15 -> 15 - 3 = 12 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 9 + 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48) -> 11 + 48 = 59 (left: 59) -> None - there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 1.09 * 13 = 14.17 (left: 14.17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13) -> 1.09 * 13 = 14.17 (left: 14.17) -> 14 + 17 = 31",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 8 1"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left:  -> There are no possible next steps with the given input. -> 6 + 2 = 8 (left: 3 8 1) -> 8 - 3 = 5 (left: 5 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left:  -> There are no possible next steps with the given input. -> 6 + 2 = 8 (left: 3 8 1) -> 8 - 3 = 5 (left: 5 1) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105) -> 105 * 2 = 210 (left: 210)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 132 / 13 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25 36) -> 25 - 12 = 13 (left: 13 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25 36) -> 25 - 12 = 13 (left: 13 36) -> 36 / 13 = 2.769230769230769 (left: 2.769230769230769)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2.25 11 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 8 9 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 * 11 = 99 (left: 4 12 99)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 11 = 99 (left: 4 12 99) -> 99 - 4 = 95 (left: 12 95)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 11 = 99 (left: 4 12 99) -> 99 - 4 = 95 (left: 12 95) -> 12 * 95 = 1140 (left: 1140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 * 11 = 132 (left: 132 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 * 11 = 132 (left: 132 36) -> 132 + 36 = 168",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 9 / 1 = 9 (left",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25) -> 12 * 25 = 300 (left: 300)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25) -> 12 * 25 = 300 (left: 300) -> 300 * 2 = 600",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left:  -> There are no possible next steps with the given input. -> 6 + 2 = 8 (left: 3 8 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "3 1.4"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7 -> 7 / 5 = 1.4 (left: 3 1.4) -> 3 * 1.4 = 4.2 (left: 4.2)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "3 1.4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7 -> 7 / 5 = 1.4 (left: 3 1.4)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 - 23 = -10 (left: -10) -> -10 * 2 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 1.4"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps since 72 is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 * 23 = 299 (left: 299)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 * 23 = 299 (left: 299) -> 2 * 9 * 9 = 162 (left: 162)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "3 1.4"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "3 1.4"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7 -> 7 / 5 = 1.4 (left: 3 1.4) -> 3 + 1.4 = 4.4 (left: 4.4)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "3 1.4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 + 36 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 + 12 = 23 (left: 23 36) -> 23 + 36 = 59 (left: 59) -> 59 * 2 = 118 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 13"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 4": {
                "Step": "12 - 11 = 1 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 11 = 1 (left:  -> It seems like you did not provide an input. Could you please provide the numbers for which you would like to find possible next steps?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 11 = 1 (left:  -> It seems like you did not provide an input. Could you please provide the numbers for which you would like to find possible next steps? -> It seems like you did not provide an input. Could you please provide the numbers for which you would like to find possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "3 8 1"
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left:  -> There are no possible next steps with the given input. -> 6 + 2 = 8 (left: 3 8 1) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left:  -> There are no possible next steps with the given input. -> 6 + 2 = 8 (left: 3 8 1) -> 8 - 1 = 7 (left: 3 7) -> 7 - 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 / 11 = 1.09 (left: 1.09 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 / 11 = 1.09 (left: 1.09 36) -> 1.09 * 36 = 39.24 (left: 39.24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 9"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 4 + 5 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "3 1.4"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7 -> 7 / 5 = 1.4 (left: 3 1.4) -> 3 - 1.4 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 9"
                }
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4) -> 0.875 + 4 = 4.875 (left: 4.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 7 = 1 (left: 1 8 9) -> 8 - 1 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 7 = 1 (left: 1 8 9) -> 8 - 1 = 7 (left: 7 9) -> 5 * 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 6.3077 8.3077)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 6.3077 8.3077) -> 6.3077 - 8.3077 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 -> 8.3077 - 2 = 6.3077 (left: 6.3077 8.3077)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 -> 8.3077 - 2 = 6.3077 (left: 6.3077 8.3077) -> Input",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 6.3077"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 * 6.3077 = 12.6154 (left: 6.3077 12.6154)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 * 6.3077 = 12.6154 (left: 6.3077 12.6154) -> 6.3077 / 12.6154 = 0.5 (left: 0",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8.857 * 8 = 70.856"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56) -> 117 + 56 = 173 (left: 173)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 / 7 = 1.857 (left: 1.857 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 / 7 = 1.857 (left: 1.857 7) -> 1.857 + 7 = 8.857 (left: 8.857)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 / 7 = 1.857 (left: 1.857 7) -> 1.857 + 7 = 8.857 (left: 8.857) -> 8.857 * 8 = 70.856",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 - 6.3077 = -4.3077 (left: -4.3077)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 * 6.3077 = 12.6154",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8) -> 0.5 * 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1.14 (left: 1.14 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 7 = 1.14 (left: 1.14 9 13) -> 1.14 + 9 = 10.14 (left: 10.14 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1.14 (left: 1.14 9 13) -> 1.14 + 9 = 10.14 (left: 10.14 13) -> 10.14 - 13 = -2.86 (left: -2.86)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 8.3077)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 * 6.3077 = 12.6154 (left: 6.3077 12.6154)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077 ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "8 / 7 = 1 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 7 = 1 (left: 1 9 13) -> 9 / 1 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 7 = 1 (left: 1 9 13) -> 9 / 1 = 9 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 -> 6.3077 + 8 = 14.3077 (left: 8.3077 14.3077)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 + 1 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 + 1 = 8 (left: 8 13) -> 8 + 13 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 + 1 = 8 (left: 8 13) -> 8 + 13 = 21 (left: 21) -> 21 * 2 = 42",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 * 6.3077 = 12.6154 (left: 12.6154)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 + 13 = 22 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 + 13 = 22 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 * 1 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 * 1 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 7 * 1 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> 9 - 1 = 8 (left: 81) ",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 6.3077"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 6.3077 / 2 = 3.15385 (left: 2 3.15385)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 6.3077 / 2 = 3.15385 (left: 2 3.15385) -> 2 - 3.15385 = -1.15385 (left: -1.15385)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "21 * 2 = 42"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 / 9 = 1.444 (left: 1.444 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 / 9 = 1.444 (left: 1.444 15) -> 15 - 1.444 = 13.556 (left: 13.556)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 - 6.3077 = -4.3077 (left: -4.3077)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 8 13 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 8 13 63) -> 8 + 13 = 21 (left: 21 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 8 13 63) -> 8 + 13 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 / 6.3077 = 0.3178 (left: 0.3178)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 + 6.3077 = 8.3077 (left: 8.3077)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 7 8 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22) -> 22 / 1 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 6.3077"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 - 6.3077 = -4.3077 (left: -4.",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 6.3077"
                }
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077  -> 4.3077 + 2 = 6.3077 (left: 2 6.3077) -> 2 / 6.3077 = 0.3175 (left: 0.3175)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8.857 * 8 = 70.856"
                }
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18) -> 12 + 18 = 30 (left: 30) -> There are no possible next steps with the input of 30."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is a single number and cannot be combined with any other numbers. -> None"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 + 2 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24) -> 12 * 24 = 288 (left: 288)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 + 12 = 18 (left: 2 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 + 12 = 18 (left: 2 18) -> 18 - 2 = 16 (left: 16)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> No possible next steps as there are no numbers provided."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0) -> There are no possible next steps for the input 0."
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1) -> 1 / 1 = 1 (left: 1) -> There are no possible next steps with just one number."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 8 * 20 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 5 5"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 9 / 3 = 3 (left: 3",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "0 5 5"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 5 5"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 / 5 = 1 (left: 0 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 / 5 = 1 (left: 0 1) -> 1 - 0 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "0 5 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 + 8 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 5 5"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 + 5 = 10 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 + 5 = 10 (left: 0 10) -> 10 / 0 = undefined (cannot divide by zero)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 - 3 = 8 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 10 + 3 = 13 (left: 7 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 10 + 3 = 13 (left: 7 13) -> 13 + 7 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 5 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 6.67 * 13.33 = 88.975 (left: 88.975)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8) -> 8 / -1 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 5 5"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 / 0 = undefined (cannot divide by zero)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 / 0 = undefined (cannot divide by zero) -> There are no possible next steps for the input \"5 / 0\" because division by zero is undefined in mathematics.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given (1.33), so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given (1.33), so there are no possible next steps to perform any operations. -> 1.33 * 2 = 2.66",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 + 5 = 10 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 + 5 = 10 (left: 0 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0 5 5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 5 5"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 / 5 = 1 (left: 0 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 5 / 5 = 1 (left: 0 5) -> 5 + 0 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "0 5 5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 * 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 * 1 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 3 * 1 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 9 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 9 = 45 (left: 45) -> There are no possible next steps with the input 45.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 9 = 45 (left: 45) -> There are no possible next steps with the input 45. -> There are no possible next steps with the input 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 0 + 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 0 + 5 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "0 5 5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0 5 5"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 0 + 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> 0 + 5 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "0 5 5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 3 6"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "0 5 5"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> 5 - 5 = 0 (left: 0 5 5) -> Possible next steps: -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 * 12 = 336 (left: 336)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 * 12 = 336 (left: 336) -> 3 * 3 * 6 = 54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There are no possible next steps for the input 2.33 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left -> 24 - 2 = 22 (left: 22 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left -> 24 - 2 = 22 (left: 22 1) -> 22 / 1 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> Input: 3 6 9 -> 6 * 9 = 54 (left: 3 54)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "12 16 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 + 1 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "23 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 16 12"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 2.33 as it is already a single number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 + 16 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 + 1 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 * 3 * 6 = 54"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 3 * 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 3 * 9 = 27 (left: 27) -> 27 + 2 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 12 1.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 12 1.33) -> 12 * 1.33 = 15.96 (left: 1.33 15.96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 12 1.33) -> 12 * 1.33 = 15.96 (left: 1.33 15.96) -> 1.33 * 15.96 = 21.29 (left: 21.29)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 2.33 as it is already a single number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 + 12 = 24 (left: 16 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 + 12 = 24 (left: 16 24) -> Input: 40 384 1.5 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "12 16 12"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "192 12"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 / 12 = 16 (left: 12 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 / 12 = 16 (left: 12 16) -> 12 * 16 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 + 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 + 4 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 24"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 + 1 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "23 24"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 - 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 - 12 = 180 (left: 180) -> 180 / 6 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 24"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 24"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 * 3 * 6 = 54"
                }
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8) -> There are no possible next steps for the input 3.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 9 - 5 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 - 10 = -2 (left: -2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 - 10 = -2 (left: -2 14) -> -2 + 14 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 / 8 = 1.25 (left: 1.25 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 10 / 8 = 1.25 (left: 1.25 14) -> 1.25 + 14 = 15.25 (left: 15.25)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777 -> 2.777777777777777 + 2 = 4.777777777777777 (left: 2 4.777777777777777)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 4.777777777777777"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 14"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "4 14"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5 14)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input: 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 1 = 9 (left: 9 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 / 1 = 9 (left: 9 5) -> 9 * 5 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 14"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 4.777777777777777"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 25 5 9) -> 25 / 9 = 2.7777777777777777 (left: 2.777777777777777 -> 2.777777777777777 + 2 = 4.777777777777777 (left: 2 4.777777777777777) -> 2 + 4.777777777777777 = 6.777777777777777 (left: 4.777777777777777 6.777777777777777)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 50 / 9 = 5.55555555556 (left: 5.55555555556)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 50 / 9 = 5.55555555556 (left: 5.55555555556) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 + 4 = 8"
                }
            },
            "Step 7": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 / 4 = 1 (left: 1 4 8) -> 1 * 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with only one number input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with only one number input. -> Please enter at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 + 10 = 18 (left: 18 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 8 + 10 = 18 (left: 18 14) -> 18 - 14 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 4": {
                "Step": "9 / 5 = 1.8 (left: 5 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 5 = 1.8 (left: 5  -> There are no more possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 5 = 1.8 (left: 5  -> There are no more possible next steps with the input of 5. -> None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 14"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "8 10 14"
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 14 - 8 = 6 (left: 10 6)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 14"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5 14) -> 14 - 3.5 = 10.5 (left: 10.5 14)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50) -> 50 - 9 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> There are no possible next steps with the input 20. -> There are no possible next steps with the input 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "4 14"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14) -> Input: 18 10 56 3.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14) -> Input: 18 10 56 3.5 -> 18 - 10 = 8 (left: 8 56 3",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75) -> -0.75 + 2 = 1.25 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 5 9"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 10 14"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 14 - 10 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 - 5 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation using the numbers provided. -> 2 + 8 = 10 (left: 8 10 14) -> 14 - 10 = 4 (left: 8 4) -> 8 + 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "4 14"
                }
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545) -> 0.4545 + 2 = 2.4545 (left: 2.4545)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 6 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 9.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 15 - 9 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 15 - 9 = 6 (left: 6 27) -> 4.5 + 21 = 25.5 (left: 25.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 15 27"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps for the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps for the input 11. -> There are no possible next steps for the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the number 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 9 + 15 = 24 (left: 24 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 9 + 15 = 24 (left: 24 27) -> 27 + 24 = 51 (left: 51)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 15 27"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11) -> 1.67 + 11 = 12.67 (left: 12.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps with the input 2.2 as it is a single number and not a mathematical operation with multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 27 - 9 = 18 (left: 15 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 27 - 9 = 18 (left: 15 18) -> 15 - 18 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 15 27"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> None",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 6 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 27 -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 15 / 9 = 1.66666666667 (left: 1.66666666667 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 15 / 9 = 1.66666666667 (left: 1.66666666667 27) -> 27 - 1.66666666667 = 25.3333333333 (left: 1.66666666667 25.3333333333)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3 -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 11 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps as there are no other numbers to operate with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 9 * 15 = 135 (left: 135 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 9 * 15 = 135 (left: 135 27) -> 135 / 27 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "6 11 0"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 * 5 = 30 (left: 11 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 5 = 30 (left: 11 30) -> 30 / 11 = 2.727272727272727 (left: 2.727272727272727)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 5 = 30 (left: 11 30) -> 30 / 11 = 2.727272727272727 (left: 2.727272727272727) -> 2.727272727272727 / 2 = 1.3636363636363635 (left: 1.3636363636363635)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 27 - 15 = 12 (left: 9 12 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 27 - 15 = 12 (left: 9 12 27) -> 12 / 9 = 1.3333 (left: 1.3333 27)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60) -> 11 * 60 = 660 (left: 660)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60) -> 11 * 60 = 660 (left: 660) -> 660 - 6 = 654 (left: 654)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 11 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11 11) -> 11 - 11 = 0 (left: 6 11 0)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 9 + 15 = 24 (left: 24 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 9 + 15 = 24 (left: 24 27) -> 24 + 27 = 51 (left: 51)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 15 27"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> 11 - 1.2 = 9.8 (left: 9.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> 11 - 1.2 = 9.8 (left: 9.8) -> There are no possible next steps with the input 9.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 15 - 9 = 6 (left: 6 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 15 - 9 = 6 (left: 6 27) -> 27 - 6 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 15 27"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps for the number 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 -> 1 / 11 = 0.0909 (left: 0.0909 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 9 + 15 = 24 (left: 24 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 9 + 15 = 24 (left: 24 27) -> 27 - 24 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 15 27"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 + 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 11 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 11 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 11 17) -> 11 - 11 = 0 (left: 0 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 6 + 11 = 17 (left: 11 11 17) -> 11 - 11 = 0 (left: 0 17) -> 0 + 17 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input 9.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 15 27"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 27 - 9 = 18 (left: 15 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 6 11 11) -> Input: 3 9 9 15 -> 3 * 9 = 27 (left: 9 15 27) -> 27 - 9 = 18 (left: 15 18) -> 18 * 15 = 270 (left: 270)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 15 27"
                }
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81) -> 48 - 81 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left:  -> It seems like there is no input provided. Please enter a set of numbers to continue.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left:  -> It seems like there is no input provided. Please enter a set of numbers to continue. -> It seems like there is no input provided. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81) -> 81 - 14 = 67 (left: 67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 9 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 9 17) -> 17 - 9 = 8 (left: 6 8 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 9 = 17 (left: 6 9 17) -> 17 - 9 = 8 (left: 6 8 17) -> 17 / 6 = 2.83 (rounded to 3) (left: 3 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 8 3 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9) -> 11 * 9 = 99 (left: 99)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 / 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)  ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 4 + 8 = 12 (left: 12 14 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 4 + 8 = 12 (left: 12 14 16) -> 12 / 14 = 0.857 (left: 0.857 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 + 3 = 12 (left: 8 9 12) -> 8 * 9 = 72 (left: 72 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1 -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.3333 (left: 1 -> There is only one number, so there are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 =  -> 15 - 8 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 =  -> 15 - 8 = 7 -> 15 * 8 = 120 (left: 120 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Input: 4 8 14",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Input: 4 8 14 -> 14 + 4 = 18 (left: 8 18)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 + 9 = 18 (left: 14 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 + 9 = 18 (left: 14 18) -> 14 + 18 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 1 9"
                }
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 + 1 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 10"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> Input: 2 6 4",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 - 9 = 0 (left: 0 48) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 + 9 = 18 (left: 18 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 + 9 = 18 (left: 18 48) -> 18 - 48 = -30 (left: -30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with just the input \"1.\" Please provide additional numbers to continue the calculations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with just the input \"1.\" Please provide additional numbers to continue the calculations. -> 1 / 2 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10 -> 10 - 2 = 8 (left: 8 10) -> 4 + 8 = 12 (left: 12 14 16) -> 12 / 14 = 0.857 (left: 0.857 16) -> 16 - 0.857 = 15.143 (left: 15.143)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.857 16"
                }
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 1 * 95 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 6 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 -> 8 * 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22) -> 22 / 6 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3) -> 3 + 8 = 11 (left: 11) -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15) -> 1.15 - 2 = -0.85 (left: -2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 14) -> 14 + 8 = 22 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 14) -> 14 + 8 = 22 ( -> 8 + 8 = 16 (left: 14 16 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 14 = 112 (left: 2 112)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 14 = 112 (left: 2 112) -> 2 + 112 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 13 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 +  -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 +  -> 6 + 8 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 5 5 6 7\nSteps:\n5 * 6 = 30 (left: 5 7 30)\n30 - 7 = 23 (left: 5 23)\n23 - 5 = 18 (left: 18)\nAnswer: (5 * 6) - (7 - 5) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "- Multiply two numbers"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "- Multiply two numbers"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 13 15) -> 13 * 15 = 195 (left: 195)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 13 15) -> 13 * 15 = 195 (left: 195) -> 19 + 5 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> Possible next steps: -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "- Multiply two numbers"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> -2 * 14 = -28 (left: -28 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> -2 * 14 = -28 (left: -28 8 14) -> -28 + 8 = -20 (left: -20 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (3 * 13) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (3 * 13) = 24 -> Input: 3 5 7 9\nSteps:\n5 + 7 = 12 (left: 3 9 12)\n12 * 3 = 36 (left: 9 36)\n36 / 9 = 4 (left: 4 36)\n4 * 9 = 36 (left: 36)\nAnswer: ((3 + 5) * 7) - 9 = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 * 8 = 80 (left: 80) -> 80 + 2 = 82 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 13 18"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 11 6)\n11 * 6 = 66 (left: 66)\n66 / 3 = 22 (left: 22)\n22 - 6 = 16 (left: 16)\n16 - 2 = 14 (left: 14)\n14 + ",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (3 * 6) + (13 - 3) = 24 -> Input: 7 2 3 9\nSteps:\n7 * 3 = 21 (left: 2 9 21)\n21 - 9 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 * 3) - 9) * 4 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 8"
                }
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 9 / 11 = 0.818181818 (left: 0.818181818 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 9 / 11 = 0.818181818 (left: 0.818181818 14) -> 14 - 0.818181818 = 13.181818182 (left: 13.181818182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> Input: 5 10",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 -> 48 / 9 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 / 6 = 1.83 (left: 1.83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 / 6 = 1.83 (left: 1.83) -> 1.83 + 2 = 3.83",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 12.7778."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11) -> 11 / -2 = -5.5 (left: -5.5)  ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 12.7778."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5) -> 5 / 1.8333 = 2.7273 (left: 2.7273)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 8 = 3 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 = 54"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99) -> 99 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 6 * 9 = 54",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 6 * 9 = 54 -> 6 + 9 = 15 (left: 15 = 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 12.7778."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 -> Input: 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 -> Input: 5 7 -> Input: 3 9 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 - 8 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 12.7778."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 8 = 17 (left: 6 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 6 11 17) -> 11 * 6 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 8 = 17 (left: 6 11 17) -> 11 * 6 = 66 (left: 66) -> 6 + 6 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 11 14"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.2222 (left: 1.2222 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.2222 (left: 1.2222 14) -> 14 - 1.2222 = 12.7778 (left: 12.7778)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 11 14) -> 11 / 9 = 1.2222 (left: 1.2222 14) -> 14 - 1.2222 = 12.7778 (left: 12.7778) -> There are no possible next steps for the input 12.7778.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 = 54"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 + 11 = 17 (left: 17 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 + 11 = 17 (left: 17 17) -> 17 / 17 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 = 54"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = -> 9 - 6 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 11 17"
                }
            },
            "Step 5": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 / 11 =",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 / 11 = -> 6 / 11 = 0.5454545454545454",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 = 54"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 11 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 11 48) -> 11 * 2 = 22 (left: 22 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "3 3"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = -> 9 - 6 = 3 -> 9 - 6 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "15 = 54"
                }
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23) -> 23 + 8 = 31 (left: 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> -1 is not a valid input. Please enter a valid input consisting of three numbers separated by spaces."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> None. The input \"23\" does not have any possible next steps for calculations as it is a single number."
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3  -> 3 / 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3  -> 3 / 1 = 3 (left: 3) -> 3 - 3 = 0 (left: 0)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps: -> No input provided."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (11 - 3)) * 1 = 24"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 11 / 6 = 1.83 ( -> 11 + 6 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation has been completed. -> The calculation has been completed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13) -> 29 - 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 143 / 14 = 10.214285714285714 (left: 14 10.214285714285714)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 143 / 14 = 10.214285714285714 (left: 14 10.214285714285714) -> 14 / 10.214285714285714 = 1.36986301369863 (left: 1.36986301369863 10.214285714285714)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> N/A",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 - 11 = 3 (left: 3 1.272727272)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> The calculation is already completed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> The calculation is already completed. -> The calculation is already completed.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 13 - 2.5 = 10.5 (left: 10.5 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 13 - 2.5 = 10.5 (left: 10.5 13) -> 13 - 10.5 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 11 13"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 3 + 11 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 3 + 11 = 14 (left: 14 13) -> 14 + 13 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 3 + 11 = 14 (left: 14 13) -> 14 + 13 = 27 (left: 27) -> 27 - 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.1818181818181819 38.81818181818182"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation is completed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation is completed. -> There are no possible next steps as the calculation is already completed.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.181818181818181",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.181818181818181 -> 1.181818181818181 / 2 = 0.5909090909090905 (left: 0.5909090909090905)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818181818181819 (left: 1.181818181818181 -> 1.181818181818181 / 2 = 0.5909090909090905 (left: 0.5909090909090905) -> 0.5909090909090905 * 2 = 1.181818181818181 (left: 1.181818181818181)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.1818181818181819 38.81818181818182"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> None",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 1.272727272"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 - 11 = 3 (left: 3 1.272727272) -> 3 / 1.272727272 = 2.357142857 (left: 2.357142857)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no more possible next steps as the calculation has been completed."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation is complete.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation is complete. -> Calculation is complete.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3^2 + 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 - 3 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 - 3 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation has been completed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation has been completed. -> No possible next steps. Calculation has been completed.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 * 1.272727272 = 1.619834711 (left: 1.619834711 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.619834711 11"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation completed. No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation completed. No more possible next steps. -> Calculation completed. No more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 11 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40) -> 40 - 1.1818181818181819 = 38.81818181818182 (left: 1.1818181818181819 38.81818181818182)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24) -> 14 / 24 = 0.5833333333333334 (left: 0.5833333333333334)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24) -> 14 / 24 = 0.5833333333333334 (left: 0.5833333333333334) -> There are no possible next steps for the input 0.5833333333333334.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation completed. No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation completed. No more possible next steps. -> Calculation completed. No more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846153 (left: 10.153846153846153)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1.619834711 11"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 * 1.272727272 = 1.619834711 (left: 1.619834711 11) -> 11 - 1.619834711 = 9.380165289 (left: 9.380165289)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24) -> 24 - 14 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no more possible next steps as the calculation has been completed."
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation is already completed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) ->  -> - Multiply the numbers: 2 * 8 * 8 * 14 = 1792 -> There are no more possible next steps as the calculation has been completed. -> Calculation is already completed. -> No further steps are needed as the calculation has already been completed.",
                "Pruning": null
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 + 2 = 72"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 * 8 = 26"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with just one number provided. More numbers are needed to perform operations."
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30) -> 36 - 30 = 6 (left: 6)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> No possible next steps with the input of 5."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)"
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140) -> 40 / 1 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 1 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 * 8 = 176 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you. -> Without numbers provided, I cannot generate possible next steps. Please input the numbers so I can provide you with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 12 / ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 12 /  -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 -> 6 * 2 = 12 (left: 2 6)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857. -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 10 =",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 10 = -> 12 - 10 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = -> 12 - 10 = 2 -> 10 - 12 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 -> 12 / 2 = 6 (left: 6 4)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) ->  -> - Subtract the second number from the third number: 8 - 8 = 0 (left: 2 0 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) ->  -> - Subtract the second number from the third number: 8 - 8 = 0 (left: 2 0 14) -> 2 - 0 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 12 + 10 = 22 (left: 5 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 12 + 10 = 22 (left: 5 22) -> 3 + 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 7 = 17",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 7 = 17 -> 17 * 7 = 119 (left: 119)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 7 = 17 -> 17 * 7 = 119 (left: 119) -> 1 * 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 10 12 70)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 10 12 70) -> 70 / 10 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 10 12 70) -> 70 / 10 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 2 = 10 (left: 10) ",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "72 36"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 7 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 72 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 10 12 70)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 10 12 70) -> 70 - 10 = 60 (left: 12 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 10 12 70) -> 70 - 10 = 60 (left: 12 60) -> 12 * 60 = 720 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20) -> 20 / 8 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "72 36"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12) -> 10.5714285714 / 12 = 0.88095238095 (left: 0.88095238095 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 - 1.42857142857 = 10.5714285714 (left: 10.5714285714 12) -> 10.5714285714 / 12 = 0.88095238095 (left: 0.88095238095 12) -> 12 + 0.88095238095 = 12.8809523809 (left: 12.8809523809)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 10 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 7 10 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 - 7 = 3 (left: 3 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 10 = 2 (left: 7 10 2) -> 10 - 7 = 3 (left: 3 2) -> 3 + 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 8 = 20 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 8 = 20  -> 8 + 12 = 20 (left: 20 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 10 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 10 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 14"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 7 3 12) -> 12 + 7 = 19 (left: 3 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 7 3 12) -> 12 + 7 = 19 (left: 3 19) -> 3 * 19 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 + 10 = 22 (left: 10 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 + 10 = 22 (left: 10 22) -> 22 - 10 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 + 10 = 22 (left: 10 22) -> 22 - 10 = 12 (left: 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input 1.42857142857."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "12"
                }
            },
            "Step 7": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 10 = 1 (left: 1 10 12) -> 12 - 1 = 11 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 14"
                }
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 4": {
                "Step": "7 * 11 = 77 (left: 2 5 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 9 / 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 11 = 77 (left: 2 5  -> 9 / 3 = 3 (left: 3) -> 3 * 3 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18) -> 7 - 18 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 - 17 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 - 17 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 + 7 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 + 7 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 + 7 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 1 + 5 + 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 12 11"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 24 10 119 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 24 10 119 2 -> 24 + 10 = 34 (left: 34 119 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24) -> 24 / 11 = 2.1818181818181817 (left: 2.1818181818181817)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24) -> 24 / 11 = 2.1818181818181817 (left: 2.1818181818181817) -> 2.1818181818181817 - 2 = 0.181818181",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 * 2 = 220 (left: )",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 12 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the input of 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1.57 (left: 1.57 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1.57 (left: 1.57 11) -> 1.57 * 11 = 17.27 (left: 17.27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 (left: 2)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 * 17 = 119 (left: 119)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with? -> - Provide the numbers or operations you would like to work with.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> -3 + 2 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 2 35 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 * 35 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 * 35 = 70 (left: 70) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 * 35 = 70 (left: 70) -> There is only one number given, so there are no possible next steps to perform any operations. -> N/A",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.428571428571429 (left: 2.428571428571429)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.43 (left: 2.43)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10 -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "7 17"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "7 17"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "7 17"
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.42857 (left: 2.42857)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "7 17"
                }
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "24 6 9"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30) -> 9 + 30 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30) -> 9 + 30 = 39 (left: 39) -> There are no possible next steps with the input 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 0.57 + 7 = 7.57 (left: 7.57)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 0.57 / 7 = 0.08142857142857143 (left: 0.08142857142857143)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 6  -> 10 * 5 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 6  -> 10 * 5 = 50 (left: 50) -> There is only one possible next step: 50 + 2 = 52",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 - 0.57 = 6.43 (left: 6.43)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 0.57 + 7 = 7.57 (left: 7.57)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 36"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.33 (left: 5.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 * 0.57 = 3.99 (left: 3.99)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 - 0.57 = 6.43 (left: 6.43)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> 10 / 5 = 2 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 / 0.57 = 12.28 (left: 12.28)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 0.57 + 7 = 7.57 (left: 7.57)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input 39."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 =  -> 9 / 6 = 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 / 0.57 = 12.28 (left: 12.28)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 - 0.57 = 6.43 (left: 6.43)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4 36"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> 6 / 2.67 = 2.24 (left: 2.24 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6) -> 6 / 2.67 = 2.24 (left: 2.24 6) -> 2.24 * 6 = 13.44 (left: 13.44)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 2.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 - 0.57 = 6.43 (left: 6.43)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "10 / 4 = 2.5"
                }
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 10 / 4 =  -> 10 / 4 = 2.5 -> There are no further steps to take as the expression has been simplified to its final result of 2.5.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 is a prime number, so there are no possible next steps in terms of basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 0.57 * 7 = 3.99 (left: 3.99)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 0.57 + 7 = 7.57 (left: 7.57)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input 39."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 4 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 10 / 4 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 10 / 4 =  -> 10 / 4 = 2.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 9 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 / 0.57 = 12.28 (left: 12.28)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 0.57 * 7 = 3.99 (left: 3.99)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 6.5."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78) -> 78 / 8 = 9.75 (left: 9.75)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "24 6 9"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30) -> 9 + 30 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30) -> 9 + 30 = 39 (left: 39) -> There are no possible next steps with the input 39.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.57 7"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> 7 / 0.57 = 12.28 (left: 12.28)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0.57 7"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7) -> 4 / 7 = 0.57 (left: 0.57 7) -> Input: 3 5 7",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7 -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 + 8 = 11",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 + 8 = 11 -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 - 12 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 - 12 = 7 (left: 6 7) -> 6 * 7 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 - 12 = 7 (left: 6 7) -> 6 * 7 = 42 (left: 42) -> There are no possible next steps with the input 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37) -> 37 - 8 = 29 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 22"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9  -> 5 - 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9  -> 5 - 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 - 15.25 = -3.25 (left: -3.25)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "9 12 16"
                }
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 / 9 = 1.33 (left: 1.33 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 4": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 + 19 = 30.33 (left: 19 30.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 + 19 = 30.33 (left: 19 30.33) -> 19 / 30.33 = 0.6266 (left: 0.6266)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 9 10"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 9 10) -> 9 - 6 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "11.33 19"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33) -> 9 + 10 = 19 (left: 11.33 19) -> 11.33 - 19 = -7.67 (left: -7.67)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9) -> 1.5 + 9 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 120 15) -> 15 * 120 = 1800 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 / 19 = 3.789 (left: 3.789)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 6 + 12 = 18 (left: 18 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 6 + 12 = 18 (left: 18 90) -> 18 + 90 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22) -> 15 - 22 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3. -> 19 / 3 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 9 = 2.44 (left: 6 2.44)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 9 = 2.44 (left: 6 2.44) -> 6 - 2.44 = 3.56 (left: 3.56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 9 = 2.44 (left: 6 2.44) -> 6 - 2.44 = 3.56 (left: 3.56) -> There are no possible next steps for the input 3.56 as it is a single value and not a set of numbers like the previous input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19) -> 72 + 19 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 12 - 10 = 2 (left: 2 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 12 - 10 = 2 (left: 2 15) -> 2 * 15 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 * 19 = 1368 (left: 1368) -> 1 * 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 * 9 = 81 (left: 12 81) -> 12 + 81 = 93 (left: 93) -> 93 + 2 = 95",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 - 0 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 * 30 = 0 (left: 0 30)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 * 6 = 72 (left: 18 72)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 * 6 = 72 (left: 18 72) -> 18 * 72 = 1296 (left: 1296)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 12 * 6 = 72 (left: 18 72) -> 18 * 72 = 1296 (left: 1296) -> 12 * 96 = 1152 (left: 1152)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 / 0 = undefined",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 / 0 = undefined -> Dividing by zero is undefined in mathematics.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45) -> 45 / 12 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9  -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9  -> Possible next steps: -> None. Please provide a new input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 + 30 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 * 30 = 0 (left: 0 30)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 27 - 1.33 = 25.67 (left: 25.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 27 - 1.33 = 25.67 (left: 25.67) -> 25.67 / 2 = 12.835 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "9 9 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 + 30 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 + 30 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180) -> There are no possible next steps for the input 180.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 - 12 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12) -> 54 - 12 = 42 (left: 42) -> There are no possible next steps with the input 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 * 30 = 0 (left: 0 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 * 30 = 0 (left: 0 30) -> 30 - 0 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 12 / 2 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 - 9 = 3 (left: 9 3) -> 9 * 3 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 / 0 = undefined",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 =  -> 27 - 12 = 15",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 =  -> 27 - 12 = 15 -> 27 + 12 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 12 27"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 = 108 (left: 9 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 = 108 (left: 9 108) -> 108 / 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 - 0 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 + 30 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48) -> There are no possible next steps with the input of 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 18 * 6 = 108 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 9 * 12 = 108 (left: 6 108) -> 18 * 6 = 108 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 / 0 = undefined",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 / 0 = undefined -> Error: Division by zero is undefined. No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: -> 9 + 12 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 -> 12 * 9 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 12 * 9 -> 12 * 9 = 108 (left: 108) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 / 0 = undefined (left: 0 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 30 / 0 = undefined (left: 0 30) -> 0 + 30 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> None, as there is only one number given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 30"
                }
            },
            "Step 7": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 + 30 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            },
            "Step 8": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 30 30 -> 30 - 30 = 0 (left: 0 30) -> 0 * 30 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "0 30"
                }
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 / 6 = 4 (left: 4 144)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 / 6 = 4 (left: 4 144) -> 144 / 4 = 36 (left: 4 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 / 6 = 4 (left: 4 144) -> 144 / 4 = 36 (left: 4 36) -> 36 - 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 - 24 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 / 144 = 0.16666666666667 (left: 0.16666666666667)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24 144"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 6 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 18 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There are no possible next steps as there are no more numbers to operate on. The final result is 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 6 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12) -> 30 * 12 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 6"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6 144)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There is only one number given (1.33) so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 6"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 3 * 3 = 9 (left: 9 9 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 3 * 3 = 9 (left: 9 9 27) -> 9 + 9 = 18 (left: 18 27)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 * 2 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 * 2 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number given. -> No more possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 / 5 = 1.2 (left: 1.2 12) -> 12 - 1.2 = 10.8 (left: 10.8) -> Not enough numbers provided for any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, since there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, since there is only one number left. -> There are no possible next steps since there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 - 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24 144"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> No possible next steps, the input is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24 144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 - 24 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24 144"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24 144"
                }
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 4 - 12 = -8 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 4 - 12 = -8 (left: -> 4 + 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 3 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 3 2) -> 7 - 4 = 3 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 3 2) -> 7 - 4 = 3 (left: -> 7 * 4 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There is only one number given, so no possible next steps can be determined."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 + 1 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2 + 2 / 2 = 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 + 2 = 7 (left: 4 7) -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 + 2 = 7 (left: 4 7) -> 3 + 9 = 12 (left: 12 5) -> 12 + 5 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 5 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "No possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 - 1.5 =  0.5 (left: 0.5 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 8 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 = 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> There is only one possible next step: 16 - 5 = 11 (left: 5)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "8 + 8 = 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with the input of 1.5."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 * 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 * 8 = 64 (left: 16 64)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps as there is no input provided."
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> There is only one number given, so no possible next steps can be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 / 2 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 + 8 = 16"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16 -> 8 / 8 = 1 (left: 1 16) -> 16 - 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> - 100 * 2 = 200",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10) -> 10 - 1.5 = 8.5 (left: 8.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10) -> 10 - 1.5 = 8.5 (left: 8.5) -> There are no possible next steps with the input 8.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5) -> 2.5 * 5 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240) -> 10 * 240 = 2400 (left: 2400)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "20"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 4 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 4 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: -> 10 + 6 = 16 (left: 4 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 6 = 4 (left: -> 10 + 6 = 16 (left: 4 16) -> 16 / 4 = 4 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 4 6"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 6 - 2 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. More numbers are needed to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 + 10 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 + 10 = 16 -> 10 / 6 = 1.6666666666666667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - -> 10 + 2 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - -> 10 + 2 = 12 -> 2 * 10 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 4 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8) -> 4 * 8 = 32 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> Possible -> It seems like there might have been an error in the input. Could you provide the numbers or operation you would like to consider next?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> Possible -> It seems like there might have been an error in the input. Could you provide the numbers or operation you would like to consider next? -> - Multiply two numbers",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)  -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18) -> 7 + 3 = 10 (left: 10 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 + 49 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 49 - 1 = 48 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 - 3 = 1 (left: 1 4) -> 10 + 5 = 15 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 49 - 8 = 41 (left: 41)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 49 * 8 = 392 (left: 392)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 9 4"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 3 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 3 4) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 3 4) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 3 4) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 7 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 + 49 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 + 49 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps since there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 14 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "12.99 + 2 = 14.99"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 49 - 8 = 41 (left: 41)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 + 49 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18) -> 18 - 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 3 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "0 3 4"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 4 =",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 4 = -> 9 / 4 = 2.25",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 4 = -> 9 / 4 = 2.25 -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input 3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 3 * 12 = 36 (left: 36",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 49 + 8 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * (3 - 3)) * 4 = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "0 3 4"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 / 7 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 * 49 = 392 (left: 392)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 - 49 = -41 (left: -41)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left -> 3 - 9 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 3 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 3 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 3 3 12) -> 3 + 12 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 * 49 = 392 (left: 392)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 49 / 8 = 6.125 (left: 6.125)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33) -> 3 * 4.33 = 12.99 (left: 12.99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 1.33 + 3 = 4.33 (left: 3 4.33) -> 3 * 4.33 = 12.99 (left: 12.99) -> 12.99 + 2 = 14.99",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 * 49 = 392 (left: 392)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 3 9 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 3 1"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 3 3 1) -> 3 + 3 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 3 3 1) -> 3 + 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 3 3 1) -> 3 + 3 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 9 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "14"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 49"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 * 49 = 392 (left: 392)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 - 3 =  -> 7 (left: 7) -> 7 ^ 2 = 49 (left: 8 49) -> 8 + 49 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 49"
                }
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 3 2) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 5 = 10 (left: 10 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 5 = 10 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 5 = 10 (left: 10 2) -> 10 / 2 = 5 (left: 5) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 4 3.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 4 3.5) -> 4 - 3.5 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 10 - 5 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0.5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 / 2 = 3.5 (left: 4 3.5) -> 4 - 3.5 = 0.5 (left: 0.5) -> 0.5 * 0.5 = 0.25 (left: 0.25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 48 / 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 =  -> 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 3 6 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 3 6 9 -> 9 / 3 = 3 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 + 48 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> Input: 3 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> Input: 3 5 -> 3 / 5 = 0.6 (left: 0.6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 4 4 10",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 4 4 10 -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 4 4 10 -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 5) -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 5 5) -> 2 + 5 = 7 (left: 5 7) -> 7 + 5 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 5 = 10 (left: 10 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 5 = 10 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 5 = 10 (left: 10 2) -> 10 / 2 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 48 / 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2  -> 4 + 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2  -> 4 + 2 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 4 = 7 (left: 7 5) -> 7 - 5 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 4 = 7 (left: 7 5) -> 7 - 5 = 2 (left: 2) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 + 48 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 2 5"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2 2.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2 2.5) -> 2 / 2.5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2 2.5) -> 2 / 2.5 = 0.8 (left: 0.8) -> 0.8 / 2 = 0.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 48 / 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 48 / 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 + 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 + 2 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 + 2 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> Input: 5 10",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> Input: 5 10 -> 5 + 10 = 15 (left: 10)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 48"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 6 48) -> 6 * 8 = 48 -> 48 + 6 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "6 48"
                }
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9) -> There are no possible next steps with the input of 9. -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 20 3"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3) -> 20 - 3 = 17 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3) -> 20 - 3 = 17 (left: -> 20 * 3 = 60 (left: 60 - 3 = 57)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4) -> 4 + 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "4 8 14"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 / 4 = 3.5 (",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 / 10 = 1.3 ( -> 13 * 10 = 130 (left: 130) -> 130 + 2 = 132",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 - 36 = -27 (left: -27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 - 36 = -27 (left: -27) -> -27 + 2 = -25 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "5 20 3"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 4 10) -> 6 + 12 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 8 14"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 / 4 = 3.5 (",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45) -> There are no possible next steps with just the number 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is already a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 8 14) -> 14 - 8 = 6 (left: 6 6)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form. -> N/A",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 8 14"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 20 3"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3) -> 3 * 20 = 60 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> Input: 5 25 3 -> 25 - 5 = 20 (left: 5 20 3) -> 3 * 20 = 60 (left: -> 3 + 20 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "4 10"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 * 110 = 1430 (left: 1430)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 13 * 110 = 1430 (left: 1430) -> 1 * 4 * 3 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 9 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 + 9 = 13 (left: 13) -> 13 - 2 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 8 14"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 / 4 = 3.5 (left: 3.5 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 - 36 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 4 + 8 = 12 (left: 12 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 4 + 8 = 12 (left: 12 14) -> 12 + 14 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 8 14"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "4 8 14"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 / 4 = 3.5 (",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 =  -> 5 - 3 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 8 / 4 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "4 9 "
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 * 4 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 / 4 = 3.5 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 / 4 = 3.5 ( -> 3.5 + 4 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "4 10"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216) -> 216 / 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 9 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 7 / 3 = 2.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 7 / 3 = 2. -> Input: 10 + 5 = 15.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 7 / 3 = 2. -> Input: 10 + 5 = 15. -> 15 - 5 = 10 (left: 10 + 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "4 10"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "4 10"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 14 - 4 = 10 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 9 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 9 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> Possible next steps: -> There are no possible next steps given the input provided. -> There are no possible next steps given the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 8 14"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 4 * 8 = 32 (left: 32 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> 8 / 2 = 4 (left: 4 8 14) -> 4 * 8 = 32 (left: 32 14) -> 32 * 14 = 448 (left: 448)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "4 10"
                }
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "45 3"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 - 3 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 9 1"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "45 3"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11) -> 12.857 + 11 = 23.857 (left: 11 23.857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "45 3"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 - 3 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 + 3 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 3 / 45 = 0.06666666666666667 (left: 0.06666666666666667)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 * 3 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "45 3"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 * 3 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 + 3 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19) -> 18 + 19 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "167"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167) -> 1 * 6 * 7 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 3 * 45 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                }
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "45 3"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 * 3 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 - 3 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "45 3"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90) -> 77 + 90 = 167 (left: 167)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 / 7 = 1.57 (left: 1.57 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 / 7 = 1.57 (left: 1.57 90) -> 1.57 + 90 = 91.57 (left: 91.57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 3 - 45 = -42 (left: -42)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 * 3 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "45 3"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 7 = 17 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182) -> 0.8181818181818182 * 2 = 1.6363636363636364",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778) -> 0.7777777777777778 + 0.7777777777777778 = 1.5555555555555556",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 - 3 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "45 3"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 - 7 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 3 + 45 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 3 15)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 21 + 31 = 52 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 21 + 31 = 52 (left: -> 31 - 21 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "9 / 7 = 1.28571 (left: 1",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 7 = 1.28571 (left: 1 -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 7 = 1.28571 (left: 1 -> There are no possible next steps as there is only one number provided. -> None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 + 3 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 + 3 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "45 3"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 * 9 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 45 / 3 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "45 3"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 7 9 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.72727272727 (left: 5.72727272727)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.72727272727 (left: 5.72727272727) -> 5.72727272727 + 2 = 7.72727272727",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5.72727272727 (left: 5.72727272727) -> 5.72727272727 + 2 = 7.72727272727 -> 5.72727272727 - 2 = 3.72727272727",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> Input: 21 3 7 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> Input: 21 3 7 5 -> 21 - 5 = 16 (left: 3 7 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "45 3"
                }
            },
            "Step 7": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 3 * 45 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "45 3"
                }
            },
            "Step 8": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3 -> 5 * 9 = 45 (left: 45 3) -> 3 + 45 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "45 3"
                }
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There is only one possible next step with the input 9: -> 9 - 9 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: 2 2.857142",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: 2 2.857142 -> 2 / 2.857142 = 0.699999994 (left: 0.699999994)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 6 / 3 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 6 / 3 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps for the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: 2 2.85714285714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: 2 2.85714285714) -> 2 - 2.85714285714 = -0.857142857",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 =  -> 4 / 1 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 =  -> 4 / 1 = 4 -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2.0 (left: 2.0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 27",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 27 -> 27 * 3 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 27 -> 27 * 3 = 81 (left: 81) -> 8 + 1 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 - 1.42857142857 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 - 1.42857142857 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one number given, so there are no possible operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4.08163265306 (left: 2.85714285714 4.08163265306)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4.08163265306 (left: 2.85714285714 4.08163265306) -> 2.85714285714 + 4.08163265306 = 6.9387755102 (left: 6.9387755102)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps for the input 0.6666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 6 + 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 6 + 3 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 6 + 3 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4.08163265306 (left: 4.08163265306)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 - 2.85714285714 = -1.42857142857 (left: -1",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 + 4 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 + 4 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4.08163265306 (left: 4.08163265306)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 4": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 2 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 7 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 2 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 7 28) -> 28 - 7 = 21 (left: 7 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 * 2.85714285714 = 4.08163265306 (left: 2.85714285714 4.08163265306)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> Input: 3 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> Input: 3 6 -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 1 9 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 1 9 7) -> 9 / 1 = 9 (left: 9 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 1 9 7) -> 9 / 1 = 9 (left: 9 7) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 \u2248 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 + 5 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 + 5 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 7": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 2.85714285714 / 1.42857142857 = 2 (left: -> 2 + 1 = 3 (left: 1.85714285714 / 1.42857142857 = 3)",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9) -> 10 * 9 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888) -> 0.8888888888888888 - 2 = -1.111111111111111",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 30 - 9 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 8.666666666666666"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333) -> 1.0833333333333333 * 8 = 8.666666666666666 (left: 8 8.666666666666666) -> 8 * 8.666666666666666 = 69.33333333333333 (left: 69.33333333333333)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 3 * 14 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 3 * 14 = 42 (left: 42) -> There are no possible next steps with the input 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 * 3 = 27 (left: 27 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 * 3 = 27 (left: 27 30) -> 27 - 30 = -3 (left: -3 30)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333) -> 1.0833333333333333 * 8 = 8.666666666666666 (left: 8 8.666666666666666)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 + 30 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 - 30 = -21 (left: -21)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There is only one number given, so there are no possible next steps to perform any operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 30"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 + 30 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 9"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 30 - 9 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 * 30 = 270 (left: 270)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 9 9 12) -> 12 / 9 = 1.33 (",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 9 9 12) -> 12 / 9 = 1.33 ( -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54) -> 4 * 54 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 * 30 = 270 (left: 270)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8 8.666666666666666"
                }
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333) -> 1.0833333333333333 * 8 = 8.666666666666666 (left: 8 8.666666666666666) -> 8 * 8.666666666666666 = 69.333333333333328 (left: 69.333333333333328)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 4 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27 / 4 = 6.75 (left: 6.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 4 / 3 = 1.33333 (left: 1.33333 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 4 / 3 = 1.33333 (left: 1.33333 9) -> 9 / 1.33333 = 6.75 (left: 6.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 4 / 3 = 1.33333 (left: 1.33333 9) -> 9 / 1.33333 = 6.75 (left: 6.75) -> 6.75 + 2 = 8.75 (left: 8.75)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 30"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 30 - 9 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 30"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 + 30 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16) -> Input: 6 12 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 * 9 = 63 (left: 9 9 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 * 9 = 63 (left: 9 9 63) -> 9 - 9 = 0 (left: 0 9 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 8.666666666666666"
                }
            },
            "Step 7": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333) -> 1.0833333333333333 * 8 = 8.666666666666666 (left: 8 8.666666666666666) -> 8 - 8.666666666666666 = -0.666666666666666",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333) -> 1.0833333333333333 * 8 = 8.666666666666666 (left: 8 8.666666666666666) -> 8 - 8.666666666666666 = -0.666666666666666 -> 8 + 8.666666666666666 = 16.666666666666666",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 3  -> 3 + 14 = 17 (left: 8 8 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 3  -> 3 + 14 = 17 (left: 8 8 17) -> 17 / 8 = 2.125 (left: 8 2.125)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 / 4 = 2.25 (left: 2.25 12) -> 2.25 * 12 = 27 (left: 27) -> 27 + 2 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "8 2.125"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 - 30 = -21 (left: -21)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 30 / 9 = 3.3333333333333335 (left: 3.3333333333333335)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 9 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 9 16) -> 16 / 9 = 1.777777",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 5) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 - 30 = -21 (left: -21)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 30 / 9 = 3.33 (left: 3.33)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 9 - 3 = 6 (left: 6 5) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 30"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 9 + 30 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 9 30) -> 30 / 9 = 3.33 (left: 3.33)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "9 30"
                }
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6 8) -> 8 / 6 = 1.33333 (left: 1.33333)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 2 = 4 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 2 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 - 2 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> There is only one number, so no next steps are possible.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 - 8 = 46 (left: 46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 - 8 = 46 (left: 46) -> 46 is already a single number, no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 ^ 2 = 64 (left: 48 64)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> There are no possible next steps for the input 8.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> There are no possible next steps for the input 8. -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 120 as it is a single number and cannot be combined with any other numbers using basic arithmetic operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 - 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 - 8 = 40 (left: 8 40)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120) -> There are no possible next steps for the input 120 as it is a single number and cannot be combined with any other numbers using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with just the number 2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 6 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 ( -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 ( -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with just the number 2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 5",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 - 40 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 18 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 + 40 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 18 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 - 0 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 - 0 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 4": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> Possible next steps: -> There are no possible next steps as the input does not have any numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36) -> 8 / 36 = 0.22222 (left: 0.22222)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36) -> 8 / 36 = 0.22222 (left: 0.22222) -> 0.22222 * 2 = 0.44444 (left: 0.44444)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with just the number 2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 48"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 3 = 2 (left: 2 2 2) -> 2 + 2 = 4 (left: 2 4) -> 2 * 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57) -> 5 + 7 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 0.1875."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 20 / 7 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 20 / 7 = 2 -> 20 + 7 = 27 (left: 27 2)",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11) -> 32 + 11 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps as the input is invalid."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72) -> There are no possible next steps for the input 72 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 -> 7 * 1 = 7 (left: 7 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> There are no possible next steps as the input is already at its final state. -> None",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left -> 7 + 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Input is already at its final state."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15) -> There are no more possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Input is already at its final state."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 - 8 = -1 (left: -1 8) -> 8 / -1 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 - 8 = -1 (left: -1 8) -> 8 / -1 = -8 (left: -8) -> There are no possible next steps as the input is invalid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Input is already at its final state."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> N/A",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 72 as it is a single number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 7  -> 7 - 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 7  -> 7 - 2 = 5 (left: 5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no next steps as the input is already at its final state."
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps: -> There are no next steps as the input is already at its final state. -> Input is already at its final state. -> Input is already at its final state. -> Input is already at its final state.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Input is already at its final state."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 * 8 = 64 (left: 64) -> No possible next steps with the input \"64\" as it is a single number and cannot be combined with other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 4 7 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 / 4 = 2 (left: 4 7  -> 7 - 4 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 4 = 2 (left: 4 7  -> 7 - 4 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no more possible next steps as there is only one number left."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 3 + 9 = 12 (left: 12 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 3 + 9 = 12 (left: 12 5) -> 12 - 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 7"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 7"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 7"
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 / 7 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 72 as it is a single number."
                }
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67) -> 6.67 * 2 = 13.34 (left: 13.34)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 25 = 50"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 12 13) -> 12 * 13 = 156 (left: 156)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12) -> 19 + 12 = 31 (left: 31)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 12 - 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 12 - 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421) -> 0.631578947368421 / 2 = 0.3157894736842105 (left: 0.3157894736842105)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 - 12 = -1 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 - 12 = -1 (left:  -> It seems like you might have missed providing an input. Please enter a set of numbers for me to calculate possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 - 12 = -1 (left:  -> It seems like you might have missed providing an input. Please enter a set of numbers for me to calculate possible next steps. -> It seems like you might have missed providing an input. Please enter a set of numbers for me to calculate possible next steps."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 * 3 = 33 (left: 5 33 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 12) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 2 = 24 (left: 24)"
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 * 10 = 60 (left: 10 10 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 * 10 = 60 (left: 10 10 60) -> 10 / 10 = 1 (left: 1 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 =  -> 10 * 4 = 40",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 =  -> 10 * 4 = 40 -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 + 3 = 12 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 8 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 5 25"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 3 9",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9) -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 4) + 6) + 10 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 10 16) -> 10 + 6 = 16 (left: 6 16 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 10 16) -> 10 + 6 = 16 (left: 6 16 16) -> 16 / 16 = 1 (left: 1 16 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 + 10 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 + 10 = 26 (left: 26) -> There are no possible next steps with the input 26 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "9 + 3 = 12 (left:"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 3 + 9 = 12 (left: 12 "
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 / 6 = 1.33 (left: 1.33 10) -> 1.33 + 10 = 11.33 (left: 11.33)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 16 10"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 10) -> 10 - 6 = 4 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 6 16 10) -> 10 - 6 = 4 (left:  -> There are no more possible next steps for the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 6 16 10) -> 10 - 6 = 4 (left:  -> There are no more possible next steps for the given input. -> There are no more possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 4) + (6 + 8)) + 10 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "4 4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 5 + 20 = 25 (left: 20)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left: -> 10 - 4 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left: -> 10 - 4 = 6 (left: 6 14) -> 14 - 6 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 3 + 5 = 8 ( -> 5 - 3 = 2 (left: 3 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 3 + 5 = 8 ( -> 5 - 3 = 2 (left: 3 2 8) -> 2 + 8 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 = 40 (left: 40) -> There are no possible next steps with the number 40.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 * 4 = 40 (left: 40) -> There are no possible next steps with the number 40. -> There are no possible next steps with the numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 4 10 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37 -> 35 / 2 = 17.5 (left: 17.5 37)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: -3 15"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (9 + 13)) = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 4 2) -> 4 / 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 24) -> 20 + 24 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13 -> 6 * 13 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 ( -> 6 / 4 = 1.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 / 4 = 1.5 ( -> 6 / 4 = 1.5 -> 6 * 4 = 24 (left: 24 = 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 8 14 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 8 14 20) -> 8 + 14 = 22 (left: 22 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 + 9 = 19 (left: 13 19) -> 13 - 19 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 9 + 10 = 19 (left: 19) -> 19 - 8 = 11 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "78"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> No possible next steps as the equation is already simplified.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps. -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11 2 14) -> 11 + 2 = 13 (left: 13 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.66666666667 (left: 0.66666666667 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.66666666667 (left: 0.66666666667 4) -> 0.66666666667 / 4 = 0.16666666667 (left: 0.166666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.66666666667 (left: 0.66666666667 4) -> 0.66666666667 / 4 = 0.16666666667 (left: 0.166666666 -> 0.166666666 + 2 = 2.166666666 (left: 2.166666666)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is no input provided. Please provide an input sequence to generate possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input \"0.6667\" as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667) -> There are no possible next steps with the input \"0.6667\" as it is already a single number. -> There are no possible next steps with the input \"0.6667\" as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8 22 32)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 + 8 = 32 (left: 8 22 32) -> ",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> 30 - 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left:  -> Please provide a set of numbers to continue with the sequence.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left:  -> Please provide a set of numbers to continue with the sequence. -> - Add two numbers together",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 20 + 2 = 22 (left: 22 24)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666 -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666 -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 + 4 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 + 4 = 10 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 / 2 = 12 (left: 2 12 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 / 2 = 12 (left: 2 12 22) -> 22 - 2 = 20 (left: 12 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24) -> 3.25 * 24 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left:  -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left:  -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "22 + 2 = 24"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 24 - 2 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "22 + 2 = 24"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "22 + 2 = 24"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 3 + 6 = 9 (left: 9 13) -> 9 + 13 = 22 (left: 22) -> 22 + 2 = 24 -> 22 - 2 = 20 (left: 20 2 24) -> 24 - 20 = 4 (left: 4 24)",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 + 17 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps for this input."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> Possible next steps: -> There are no possible next steps for this input. -> There are no possible next steps for this input. -> Input needed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99) -> No next steps as there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 3",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 -> 6 + 3 = 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 -> 6 + 3 = 9 -> 6 * 3 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 5 + 15 = 20 (left: 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "9 18"
                }
            },
            "Step 8": {
                "Step": "6 + 3 -> 6 + 3 = 9 -> 6 * 3 = 18 (left: 9 18) -> Input: 5 10 15",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 - 3 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps as the input is empty."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) ->  -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) ->  -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty. -> There are no possible next steps as the input is empty.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 - 3 = 2 (left: 2 6 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 3 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 3 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "5 + 1 = 6"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17) -> 17 * 3 = 51 (left: 51) -> 5 + 1 = 6 -> 5 + 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> Possible next steps: -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 5 + 15 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) ->  -> There are no possible next steps as the input is empty.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "5 - 3 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 3 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30) -> 30 - 8 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 - 3 = 8 (left: 8 30) -> 30 - 8 = 22 (left: 22) -> 22 * 2 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17) -> 17 * 3 = 51 (left: 51)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17) -> 17 * 3 = 51 (left: 51) -> 5 + 1 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> No possible next steps. -> No possible next steps. -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 + 3 = 14 (left: 14 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 + 3 = 14 (left: 14 30) -> 14 * 30 = 420 (left: 420)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 5 9 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 5 9  -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 5 9  -> 9 / 5 = 1.8 (left: 1.8) -> 1.8 - 8 = -6.2 (left: -6.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps as the input is empty."
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) ->  -> There are no possible next steps as the input is empty. -> No possible next steps as the input is empty.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) ->  -> There are no possible next steps as the input is empty. -> No possible next steps as the input is empty. -> Since the input is empty, there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "420"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 + 3 = 14 (left: 14 30) -> 14 * 30 = 420 (left: 420) -> 56",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as the input is empty."
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) ->  -> There are no possible next steps as the input is empty. -> Input is empty, please provide a valid input.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> Possible next steps: -> There are no possible next steps for this input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11  -> Input: 5 7 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11  -> Input: 5 7 9 -> 9 + 5 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "20"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 5 + 15 = 20 (left: 20) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 5 + 15 = 20 (left: 20) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 8 - 1 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 8 - 1 = 7 (left: 7 13) -> 7 / 13 = 0.53846153846 (left: 0.53846153846)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 5 "
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 / 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 / 5 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "5 10 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 8 / 1 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 8 / 1 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 8 / 1 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 5 "
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 / 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 / 5 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps for the input 25 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 53"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 5 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 8 15"
                }
            },
            "Step 7": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15) -> 8 / 8 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15) -> 8 / 8 = 1 (left: 1 15) -> 15 / 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "5 10 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 + 2 = 22 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 8 15"
                }
            },
            "Step 7": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15) -> 8 * 8 = 64 (left: 64 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15) -> 8 * 8 = 64 (left: 64 15) -> 64 * 15 = 960 (left: 960)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "5 10 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53) ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 53"
                }
            },
            "Step 7": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53) -> 53 - 2 = 51 (left: 2 53)  -> 2 * 53 = 106 (left: 106) ",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "5 10 20"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> Input: 5 10 20 -> 10 - 5 = 5 (left: 5 10 20) -> 20 - 10 = 10 (left: 5 10)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 / 4 = 2 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 / 4 = 2 (left: 2 8 13) -> 8 - 2 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 5 "
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 * 5 = 25 (left: 25) -> There are no possible next steps with the input 25.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 / 13 = 3.076923076923077 (left: 3.076923076923077)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 / 13 = 3.076923076923077 (left: 3.076923076923077) -> 3.076923076923077 - 3 = 0.07692307692307694",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 5 "
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 * 5 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13) -> 40 - 13 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13) -> 40 - 13 = 27 (left: 27) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 8 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 5 "
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 + 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 - 6 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 - 6 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 - 6 = 2 (left: 2 13) -> 2 * 13 = 26 (left: 26) -> 26 + 2 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "5 5 "
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5  -> 5 + 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> Input: 5 10 20",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> Input: 5 10 20 -> 10 - 5 = 5 (left: 5 10 20)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 8 15"
                }
            },
            "Step 7": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3) -> There is only one possible next step: 12 + 3 = 15 (left: 8 8 15) -> 15 - 8 = 7 (left: 8 7) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 53"
                }
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: )",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: -> 9 - 9 = 0 (left: ) -> There are no possible next steps as the input is incomplete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 96 = 768 (left: 768)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96) -> 64 + 96 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13) -> 81 / 13 = 6.23 (left: 6.23) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 14 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0.75 = 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 / 22 = 0.27 (left: 0.27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 / 22 = 0.27 (left: 0.27) -> 0.27 * 2 = 0.54",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 10 - 4 = 6 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 10 - 4 = 6 (left: -> 4 + 10 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 96"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96) -> 64 + 96 = 160 (left: 160)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)  -> There are no possible next steps with the input 14, as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "8 96"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 96"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 12 = 96 (left: 12)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 96"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 + 8 = 104 (left: 8 104)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 + 7 = 16 (left: 7 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 + 7 = 16 (left: 7 16) -> 7 * 16 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 3 4"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 88 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 96"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33333 (left: 4.33333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33333 (left: 4.33333) -> 4.33333 + 2 = 6.33333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 - 7 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "8 96"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 96 = 768 (left: 768)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 - 9 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 - 9 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12 -> 3 / 4 = 0.75 (left: 0.75 = 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 + 9 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 + 9 = 12 (left: 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "8 96"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96) -> 96 / 64 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 / 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 9"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 + 9 = 13 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 + 9 = 13 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 8 = 64 (left: 64 96) -> 64 - 96 = -32 (left: -32)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.75 = 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 + 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 3  -> 3 + 3 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 * 12 = 36 (left: 36 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 13) -> 3 * 12 = 36 (left: 36 13) -> 36 + 13 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 * 96 = 768 (left: 768)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "8 96"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 8 = 16 (left: 16 96)",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps as there are not enough numbers provided."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 2 * 18 = 36 (left: 36 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 10 / 7 = 1.43 (left: 1.43 10) -> 10 / 1.43 = 6.993 (left: 6.993)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 10 10"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10) -> -3 * 10 = -30 (left: -30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 10) -> 7 - 10 = -3 (left: -3 10) -> -3 * 10 = -30 (left: -30) -> There are no possible next steps as there are no numbers provided to operate with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4) -> 1.4 / 2 = 0.7 (left: 0.7)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 / 9 = 1.11 (left: 1.11 49)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 / 9 = 1.11 (left: 1.11 49) -> 49 / 1.11 = 44.14 (left: 44.14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 / 9 = 1.11 (left: 1.11 49) -> 49 / 1.11 = 44.14 (left: 44.14) -> There are no possible next steps for the input 44.14 as it is a single number and not an equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 10 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> Input:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> Input: -> There is no input provided. Can you please provide the numbers for the next step calculation?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> Input: -> There is no input provided. Can you please provide the numbers for the next step calculation? -> Without specific input provided, I cannot provide the numbers for the next step calculation. Please provide the numbers you would like to use for the next step."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 - 9 = 1 (left: 1 49)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 - 9 = 1 (left: 1 49) -> 1 + 49 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 10 - 9 = 1 (left: 1 49) -> 1 + 49 = 50 (left: 50) -> 50 / 8 = 6.25 (left: 8)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 14 / 5 = 2.8 (left: 2.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 2 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 2 7 8) -> 2 + 7 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 2 7 8) -> 2 + 7 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10) -> 10 - (-1) = 11 (left: 11) ",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: -> 7 - 8 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical expression."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 10 = 4.9 (left: 9 4.9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 / 10 = 4.9 (left: 9 4.9) -> 9 / 4.9 = 1.83673 (left: 1.83673)"
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 816380,
        "output_tokens": 394234.95119047625,
        "total_cost": 0.9995424267857145
    }
}