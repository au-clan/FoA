{
    "0": {
        "puzzle": "1 1 4 6",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "6 - 1 = 5 (left: 1 4 5)",
                "6 - 4 = 2 (left: 1 2 6)",
                "4 * 1 = 4 (left: ",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 / 4 = 1.5 (left: 1 1.5 6)",
                "1 + 1 = 2 (left: 2 4 6)",
                "6 / 4 = 1.5 (left: 1 1.5 6)",
                "1 * 4 = 4 (left: 4 1 6)",
                "1 + 1 = 2 (left: 2 4 6)",
                "1 + 1 = 2 (left: 2 4 6)",
                "1 + 1 = 2 (left: 2 4 6)",
                "1 + 1 = 2 (left: 2 4 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "4 + 1 = 5 (left: 1 5 ",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "1 + 1 = 2 (left: 2 4 6)",
                "4 + 1 = 5 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 4 6)"
            ],
            "Pruning": [],
            "Evaluation": [
                41.0,
                21.0,
                0.002,
                1.002,
                1.002,
                1.002,
                0.003,
                0.0,
                1.002,
                1.002,
                0.003,
                21.001,
                0.003,
                1.001,
                22.0,
                1.002,
                0.003,
                0.003,
                0.003,
                60.0,
                1.002,
                0.002,
                41.0,
                1.002,
                60.0,
                60.0,
                60.0,
                1.002,
                22.0,
                60.0
            ],
            "Resampling": [
                "0 <- 0.24",
                "1 <- 0.25",
                "2 <- 0.24",
                "3 <- 0.24",
                "4 <- 0.22",
                "5 <- 0.25",
                "6 <- 0.22",
                "7 <- 0.29",
                "8 <- 0.29",
                "9 <- 0.19",
                "10 <- 0.26",
                "11 <- 0.24",
                "12 <- 0.24",
                "13 <- 0.29",
                "14 <- 0.0",
                "15 <- 0.0",
                "16 <- INIT",
                "17 <- 0.26",
                "18 <- 0.26",
                "19 <- 0.28",
                "20 <- 0.29",
                "21 <- 0.26",
                "22 <- 0.22",
                "23 <- 0.26",
                "24 <- 0.0",
                "25 <- 0.25",
                "26 <- 0.0",
                "27 <- 0.29",
                "28 <- 0.24",
                "29 <- 0.22"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6)",
                "4 + 1 = 5 (left: 1 5 6) || 1 * 5 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = 6 (left: 4 6)",
                "4 + 1 = 5 (left: 1 5 6) || 1 + 5 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = ",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || 27 / 3 = 9 (left: 9",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = ",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = 6 (",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = ",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || Input: 3 5 7 9",
                "4 + 1 = 5 (left: 1 5 6) || 1 + 5 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "4 + 1 = 5 (left: 1 5 6) || 5 / 1 = 5 (left:",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left:",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "4 + 1 = 5 (left: 1 5 6) || 1 * 5 = 5 (left: 5 6)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.002,
                1.002,
                40.0,
                60.0,
                0.003,
                41.0,
                0.003,
                0.003,
                60.0,
                0.001,
                0.003,
                0.002,
                1.001,
                0.003,
                0.003,
                40.0,
                60.0,
                1.002,
                0.003,
                20.002,
                60.0,
                0.003,
                0.0,
                60.0,
                21.0,
                0.002,
                3.0,
                2.001,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 0.24",
                "1 <- 1.16",
                "2 <- 1.2",
                "3 <- 0.23",
                "4 <- 1.2",
                "5 <- 1.20",
                "6 <- 1.8",
                "7 <- 1.24",
                "8 <- 1.5",
                "9 <- 0.26",
                "10 <- INIT",
                "11 <- 1.28",
                "12 <- 1.8",
                "13 <- 1.2",
                "14 <- 1.23",
                "15 <- 0.29",
                "16 <- 1.3",
                "17 <- 0.24",
                "18 <- 0.19",
                "19 <- 0.29",
                "20 <- 1.16",
                "21 <- 0.19",
                "22 <- 1.1",
                "23 <- 1.5",
                "24 <- 1.3",
                "25 <- 1.2",
                "26 <- 1.2",
                "27 <- 1.28",
                "28 <- 1.28",
                "29 <- 0.19"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "6 - 4 = 2 (left: 1 2 6) || 6 / 2 = 3 (left: 1 3)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: || 6 + 4 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 1 + 6 = 7 (left: 4 7)",
                "6 - 4 = 2 (left: 1 2 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || Input: 3 9 12",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = 6 (left: 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2) || 1 / 2 =",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.002,
                40.0,
                0.003,
                21.0,
                60.0,
                60.0,
                0.002,
                0.003,
                60.0,
                1.0,
                1.002,
                60.0,
                40.0,
                40.001,
                0.003,
                0.002,
                0.003,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                0.003,
                0.003,
                60.0,
                0.002,
                0.003,
                20.002,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 1.23",
                "1 <- 1.16",
                "2 <- 2.19",
                "3 <- 1.16",
                "4 <- 1.5",
                "5 <- 1.26",
                "6 <- 0.22",
                "7 <- 2.13",
                "8 <- 2.19",
                "9 <- 2.20",
                "10 <- 2.4",
                "11 <- 2.11",
                "12 <- 2.29",
                "13 <- 2.4",
                "14 <- 0.22",
                "15 <- 2.19",
                "16 <- 1.15",
                "17 <- 2.8",
                "18 <- 2.24",
                "19 <- 1.8",
                "20 <- 2.17",
                "21 <- 2.20",
                "22 <- 2.8",
                "23 <- 2.12",
                "24 <- 2.17",
                "25 <- 2.3",
                "26 <- 2.3",
                "27 <- 1.24",
                "28 <- 1.16",
                "29 <- 1.3"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 4 6) || Possible next steps:",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5) || 4 + 5 = 9 (left: 9)",
                "4 + 1 = 5 (left: 1 5 6) || 1 + 5 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25) || 25 + 8 = 33 (left: 8)",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: (1 * 4 * 6) / 1 = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: 1 * (4 * 6) = 24",
                "4 + 1 = 5 (left: 1 5 6) || 1 * 5 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25) || 25 / 2 = 12.5 (left: 2)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "6 - 4 = 2 (left: 1 2 6) || 6 / 2 = 3 (left: 1 3) || 1 * 3 = 3 (left: 3)",
                "6 - 4 = 2 (left: 1 2 6) || 6 / 2 = 3 (left: 1 3) || 1 * 3 = 3 (left: 3)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: || 6 + 4 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)"
            ]
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1": {
        "puzzle": "1 1 11 11",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 / 1 = 11 (left: 1 11 ",
                "11 - 1 = 10 (left: 1 11 10)",
                "11 * 1 = 11 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 - 1 = 10 (left: 1 11 10)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 + 1 = 12 (left: 1 11 12)",
                "11 - 1 = 10 (left: 1 10 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "11 + 1 = 12 (left: 1 11 12)",
                "11 + 1 = 12 (left: 1 11 12)",
                "1 * 1 = 1 (left: 11 11 1)",
                "11 - 1 = 10 (left: 1 10 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "11 + 1 = 12 (left: 1 11 12)",
                "11 / 1 = 11 (left: 1 11 ",
                "11 * 1 = 11 (left: 11 11 11)",
                "1 * 1 = 1 (left: 1 11 11)"
            ],
            "Pruning": [],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.001,
                0.003,
                0.002,
                0.003,
                1.002,
                0.003,
                20.002,
                1.002,
                0.003,
                21.001,
                41.0,
                0.003,
                1.002,
                0.003,
                20.002,
                20.002,
                0.003,
                0.003,
                20.002,
                1.002,
                0.002,
                0.003,
                20.002,
                21.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.13",
                "1 <- 0.18",
                "2 <- INIT",
                "3 <- 0.12",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 0.9",
                "7 <- 0.12",
                "8 <- 0.13",
                "9 <- 0.13",
                "10 <- 0.13",
                "11 <- 0.18",
                "12 <- 0.9",
                "13 <- 0.25",
                "14 <- INIT",
                "15 <- 0.18",
                "16 <- 0.13",
                "17 <- 0.17",
                "18 <- INIT",
                "19 <- 0.9",
                "20 <- 0.21",
                "21 <- 0.26",
                "22 <- 0.12",
                "23 <- 0.18",
                "24 <- 0.25",
                "25 <- 0.25",
                "26 <- INIT",
                "27 <- INIT",
                "28 <- 0.9",
                "29 <- 0.25"
            ]
        },
        "Step 1": {
            "steps": [
                "11 + 1 = 12 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "1 + 1 = 2 (left: 2 11 11) || 11 - 2 = 9 (left: 9 11)",
                "11 * 1 = 11 (left: 1 11 11)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 + 1 = 12 (left: 1 11 12) || 11 / 1 = 11 (left: 11 12)",
                "11 + 1 = 12 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "11 + 1 = 12 (left: 1 11 12) || Input: 5 5 10",
                "11 + 1 = 12 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "11 + 1 = 12 (left: 1 11 12) || 12 - 1 = 11 (left: 11 11)",
                "1 + 1 = 2 (left: 2 11 11) || 11 - 11 = 0 (left: 2 11 0)",
                "11 + 1 = 12 (left: 1 11 12) || 1 * 11 = 11 (left: 11 12)",
                "1 + 1 = 2 (left: 2 11 11) || 11 / 2 = 5.5 (left: ",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13)",
                "11 + 1 = 12 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "11 - 1 = 10 (left: 1 10 11) || 11 / 1 = 11 (left:",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 + 1 = 12 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "1 * 1 = 1 (left: 1 11 11) || 1 + 11 = 12 (left: 11 11 12)",
                "11 + 1 = 12 (left: 1 11 12) || 11 / 1 = 11 (left: 11 12)",
                "11 + 1 = 12 (left: 1 11 12) || 11 / 1 = 11 (left: 11 12)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11) || 11 * 2 = 22 (left: 11 22)",
                "1 + 1 = 2 (left: 2 11 11) || Possible next steps:",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 - 1 = 0 (left: 0 11 11)",
                "11 + 1 = 12 (left: 1 11 12) || 12 * 1 = 12 (left:",
                "1 + 1 = 2 (left: 2 11 11) || 11 * 2 = 22 (left: 11 22)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.002,
                2.0,
                0.003,
                20.002,
                1.002,
                0.003,
                0.002,
                0.0,
                0.003,
                0.002,
                0.003,
                2.001,
                0.003,
                0.0,
                20.002,
                60.0,
                1.002,
                20.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                60.0,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.9",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.14",
                "5 <- 1.23",
                "6 <- 1.17",
                "7 <- 1.15",
                "8 <- 1.23",
                "9 <- 1.3",
                "10 <- INIT",
                "11 <- 1.14",
                "12 <- 0.12",
                "13 <- 1.3",
                "14 <- 1.3",
                "15 <- 0.13",
                "16 <- 1.15",
                "17 <- 1.23",
                "18 <- 1.17",
                "19 <- 0.21",
                "20 <- 1.23",
                "21 <- INIT",
                "22 <- 1.23",
                "23 <- 0.13",
                "24 <- 0.25",
                "25 <- 1.15",
                "26 <- 1.23",
                "27 <- 1.23",
                "28 <- 0.9",
                "29 <- 1.15"
            ]
        },
        "Step 2": {
            "steps": [
                "11 + 1 = 12 (left: 1 11 12) || 1 * 11 = 11 (left: 11 12)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "11 - 1 = 10 (left: 1 10 11) || 11 / 1 = 11 (left: || 5 + 3 = 8 (left:",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 13 - 11 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 13 / 11 = 1.18 (left: 1.18)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24",
                "11 / 1 = 11 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11) || 11 - 2 = 9 (left: 9 11 11)",
                "11 + 1 = 12 (left: 1 11 12) || 11 * 1 = 11 (left: 11 12)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 1 11 12) || 12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 / 13 = 0.846153846 (left: 0.846153846)",
                "11 - 1 = 10 (left: 1 10 11) || 11 / 1 = 11 (left: || 1 + 11 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "11 + 1 = 12 (left: 1 11 12) || 11 / 1 = 11 (left: 11 12)",
                "1 + 1 = 2 (left: 2 11 11) || 3 + 5 = 8 (left: 7 8)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "11 + 1 = 12 (left: 1 11 12) || 12 - 1 = 11 (left: 11 11)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                0.0,
                0.0,
                0.0,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                60.0,
                60.0,
                0.002,
                0.003,
                0.0,
                0.003,
                60.0,
                2.0,
                0.003,
                60.0,
                0.003,
                21.001,
                0.0,
                0.001,
                0.0,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 1.15",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 1.3",
                "4 <- 2.22",
                "5 <- 2.14",
                "6 <- 2.4",
                "7 <- 2.14",
                "8 <- 0.13",
                "9 <- 2.22",
                "10 <- 0.21",
                "11 <- 2.14",
                "12 <- 2.4",
                "13 <- 2.22",
                "14 <- 1.23",
                "15 <- 2.13",
                "16 <- 0.17",
                "17 <- 0.17",
                "18 <- 2.14",
                "19 <- 2.19",
                "20 <- 2.22",
                "21 <- 2.22",
                "22 <- 0.17",
                "23 <- 2.14",
                "24 <- 0.17",
                "25 <- 2.24",
                "26 <- 1.15",
                "27 <- 2.14",
                "28 <- 1.17",
                "29 <- 2.13"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 1) + 11) + 11 = 24",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((11 + 1) + 1) + 11 = 24",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((11 + 1) + 1) + 11 = 24",
                "11 + 1 = 12 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 1) + 11) + 11 = 24",
                "1 * 1 = 1 (left: 1 11 11) || 1 + 11 = 12 (left: 11 11 12)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((11 + 1) + 11) + 1 = 24",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 1) + 11) + 11 = 24",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 * 13 = 143 (left: 143)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((11 + 1) + 1) + 11 = 24",
                "11 - 1 = 10 (left: 1 10 11) || 10 - 1 = 9 (left: 9 11)",
                "11 - 1 = 10 (left: 1 10 11) || 10 - 1 = 9 (left: 9 11)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((11 + 1) + 1) + 11 = 24",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 1) + 11) + 11 = 24",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 1) + 11) + 11 = 24",
                "11 - 1 = 10 (left: 1 10 11) || 10 - 1 = 9 (left: 9 11)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((11 + 1) + 11) + 1 = 24",
                "11 - 1 = 10 (left: 1 10 11) || 1 + 10 = 11 (left: 11 11)",
                "1 + 1 = 2 (left: 2 11 11) || 3 + 5 = 8 (left: 7 8) || 7 * 8 = 56 (left: 56)",
                "1 + 1 = 2 (left: 2 11 11) || 2 + 11 = 13 (left: 11 13) || 13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((11 + 1) + 1) + 11 = 24",
                "11 - 1 = 10 (left: 1 10 11) || 11 / 1 = 11 (left: || 11 - 1 = 10 (left: 10)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (11 + 1) + (1 + 11) = 24"
            ]
        },
        "Input": "1 1 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "2": {
        "puzzle": "1 1 3 8",
        "Step 0": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 8)",
                "8 - 3 = 5 (left: 1 1 5)",
                "8 - 3 = 5 (left: 1 3 5)",
                "1 + 1 = 2 (left: 2 3 8)",
                "3 * 1 = 3 (left: 3 1 8)",
                "1 + 1 = 2 (left: 2 3 8)",
                "3 + 1 = 4 (left: 1 4 8)",
                "1 * 1 = 1 (left: 1 3 8)",
                "3 + 1 = 4 (left: 1 4 8)",
                "",
                "1 * 1 = 1 (left: 1 3 8)",
                "1 + 3 = 4 (left: 4 1 8)",
                "8 - 3 = 5 (left: 1 1 5)",
                "8 - 3 = 5 (left: 1 1 5)",
                "1 + 3 = 4 (left: 4 1 8)",
                "1 * 1 = 1 (left: 1 3 8)",
                "3 - 1 = 2 (left: 1 2 8)",
                "3 + 1 = 4 (left: 1 4 8)",
                "8 - 3 = 5 (left: 1 5 8)",
                "3 - 1 = 2 (left: 2 1 8)",
                "1 * 1 = 1 (left: 1 3 8)",
                "1 + 1 = 2 (left: 2 3 8)",
                "1 * 1 = 1 (left: 1 3 8)",
                "8 - 3 = 5 (left: 1 1 ",
                "3 + 1 = 4 (left: 4 4 8)",
                "1 + 1 = 2 (left: 2 3 8)",
                "8 / 1 = 8 (left: 1 3 8)",
                "1 + 1 = 2 (left: 2 3 8)",
                "1 + 1 = 2 (left: 2 3 8)",
                "8 - 1 = 7 (left: 1 3 "
            ],
            "Pruning": [],
            "Evaluation": [
                2.0,
                2.001,
                1.002,
                2.001,
                60.0,
                2.001,
                0.003,
                60.0,
                0.003,
                0.003,
                60.0,
                0.003,
                3.0,
                1.002,
                1.002,
                60.0,
                22.0,
                1.001,
                1.002,
                41.0,
                22.0,
                2.001,
                40.001,
                0.003,
                22.0,
                0.003,
                60.0,
                1.002,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 0.10",
                "1 <- INIT",
                "2 <- 0.15",
                "3 <- 0.10",
                "4 <- 0.10",
                "5 <- 0.10",
                "6 <- 0.4",
                "7 <- 0.16",
                "8 <- 0.7",
                "9 <- 0.7",
                "10 <- 0.16",
                "11 <- 0.15",
                "12 <- 0.4",
                "13 <- 0.15",
                "14 <- 0.4",
                "15 <- 0.22",
                "16 <- 0.24",
                "17 <- 0.15",
                "18 <- 0.24",
                "19 <- 0.1",
                "20 <- 0.15",
                "21 <- INIT",
                "22 <- 0.10",
                "23 <- 0.4",
                "24 <- 0.4",
                "25 <- 0.16",
                "26 <- 0.7",
                "27 <- 0.4",
                "28 <- 0.7",
                "29 <- 0.10"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "3 + 8",
                "1 * 1 = 1 (left: 1 3 8) || 8 / 3 = 2.67 (left: 1 2.67)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 3 8) || 8 / 3 = 2.6667 (left: 1 2.6667)",
                "1 * 1 = 1 (left: 1 3 8) || 3 + 8 = 11 (left: 1 11)",
                "3 * 1 = 3 (left: 3 1 8) || 1 * 3 = 3 (left: 3 8)",
                "3 - 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 3 8) || ",
                "3 - 1 = 2 (left: 1 2 8) || 2 * 8 = 16 (left: 1 16)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24)",
                "3 * 1 = 3 (left: 3 1 8) || 8 - 3 = 5 (left: 5 8)",
                "1 * 1 = 1 (left: 1 3 8) || 8 / 3 = 2.66666666667 (left: 1 2.66666666667)",
                "3 * 1 = 3 (left: 3 1 8) || 3 + 1 = 4 (left: 4 8)",
                "1 * 1 = 1 (left: 1 3 8) || 3 - 1 = 2 (left: 2 8)",
                "3 + 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8)",
                "1 * 1 = 1 (left: 1 3 8) || 8 / 3 = 2.67 (left: 1 2.67)",
                "3 + 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8)",
                "8 - 3 = 5 (left: 1 1 5) || 1 + 1 = 2 (left: 2 5)",
                "1 * 1 = 1 (left: 1 3 8) || 1 * 3 = 3 (left: 3 8)",
                "3 + 1 = 4 (left: 1 4 8)",
                "1 * 1 = 1 (left: 1 3 8) || 3 + 1 = 4 (left: 4 8)",
                "3 * 1 = 3 (left: 3 1 8) || 8 - 3 = 5 (left: 3 5)",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8)",
                "3 - 1 = 2 (left: 1 2 8) || 2 * 8 = 16 (left: 1 16)",
                "1 * 1 = 1 (left: 1 3 8) || 8 - 3 = 5 (left: 1 5)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 3 8) || 3 / 1 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 3 8) || 1 + 3 = 4 (left: 4 8)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                60.0,
                2.0,
                60.0,
                60.0,
                60.0,
                60.0,
                20.002,
                0.002,
                60.0,
                0.003,
                2.001,
                0.003,
                0.002,
                40.0,
                0.001,
                21.001,
                40.0,
                60.0,
                20.002,
                0.003,
                1.001,
                60.0,
                0.003,
                40.0,
                60.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.26",
                "1 <- 1.27",
                "2 <- 1.5",
                "3 <- 1.8",
                "4 <- 1.5",
                "5 <- 1.8",
                "6 <- 1.19",
                "7 <- 1.20",
                "8 <- 0.7",
                "9 <- 1.8",
                "10 <- 1.5",
                "11 <- 0.19",
                "12 <- 0.26",
                "13 <- 1.8",
                "14 <- 1.6",
                "15 <- 1.11",
                "16 <- 1.8",
                "17 <- 1.24",
                "18 <- 0.7",
                "19 <- 1.11",
                "20 <- 0.10",
                "21 <- 0.15",
                "22 <- 1.26",
                "23 <- 0.22",
                "24 <- 1.13",
                "25 <- 1.8",
                "26 <- 1.18",
                "27 <- 0.19",
                "28 <- 1.19",
                "29 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "8 / 1 = 8 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 3 8) || 3 + 8 = 11 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8) || 3 + 8 = 11 (left: 1 11) || 1 + 11 = 12",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "8 - 3 = 5 (left: 1 1 5) || 1 + 1 = 2 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 3 8) || 1 * 3 = 3 (left: 3 8) || 8 / 3 = 2.66667 (left: 2.66667)",
                "1 * 1 = 1 (left: 1 3 8) || 1 + 3 = 4 (left: 4 8)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 - 1 = 23 (left: 1 23)",
                "1 * 1 = 1 (left: 1 3 8) || 3 + 8 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "3 - 1 = 2 (left: 2 1 8) || 2 * 1 = 2 (left: 2 8)",
                "8 / 1 = 8 (left: 1 3 8) || 8 / 1 = 8 (left: 3 8)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "3 * 1 = 3 (left: 3 1 8) || 1 * 3 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 - 24 = 0 (left: 0)",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8) || 10",
                "1 * 1 = 1 (left: 1 3 8) || 8 / 3 = 2.67 (left: 1 2.67)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 * 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8) || 8 / 1 = ",
                "1 * 1 = 1 (left: 1 3 8) || 1 + 3 = 4 (left: 4 8)",
                "1 * 1 = 1 (left: 1 3 8) || 8 - 3 = 5 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 3 8) || 1 + 3 = 4 (left: 4 8)",
                "1 * 1 = 1 (left: 1 3 8) || 8 / 3 = 2.66666666667 (left: 1 2.66666666667) || 1 + 2.66666666667 = 3.66666666667 (left: 2.66666666667 3.66666666667)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "3 + 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 + 8 = 9 (left: 8)",
                "3 - 1 = 2 (left: 2 1 8) || 8 - 1 = 7 (left: 2 7)",
                "8 - 3 = 5 (left: 1 1 5) || 1 + 1 = 2 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                ""
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                60.0,
                0.003,
                20.001,
                0.001,
                0.002,
                0.003,
                40.001,
                0.001,
                0.002,
                60.0,
                20.002,
                60.0,
                60.0,
                0.002,
                0.003,
                0.001,
                60.0,
                0.003,
                0.003,
                0.002,
                0.003,
                3.0,
                40.0,
                0.003,
                0.001,
                0.001,
                20.002
            ],
            "Resampling": [
                "0 <- 1.19",
                "1 <- 0.4",
                "2 <- 1.26",
                "3 <- 1.6",
                "4 <- 1.18",
                "5 <- 1.8",
                "6 <- 1.9",
                "7 <- 1.20",
                "8 <- INIT",
                "9 <- 1.11",
                "10 <- 2.14",
                "11 <- 2.25",
                "12 <- 2.15",
                "13 <- 1.6",
                "14 <- 0.16",
                "15 <- 1.20",
                "16 <- 2.15",
                "17 <- 1.27",
                "18 <- 1.27",
                "19 <- 2.0",
                "20 <- 2.19",
                "21 <- 1.28",
                "22 <- 1.18",
                "23 <- 1.5",
                "24 <- 1.3",
                "25 <- 1.26",
                "26 <- 2.0",
                "27 <- 2.12",
                "28 <- 1.26",
                "29 <- 0.7"
            ]
        },
        "Step 3": {
            "steps": [
                "8 - 3 = 5 (left: 1 1 5) || 1 + 1 = 2 (left: 2 5) || 2 * 5 = 10 (left: 10)",
                "3 * 1 = 3 (left: 3 1 8) || 8 - 3 = 5 (left:",
                "1 * 1 = 1 (left: 1 3 8) || 8 - 3 = 5 (left: 1 5) || 1 + 5 = 6 (left: 6)",
                "3 * 1 = 3 (left: 3 1 8) || 1 * 3 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "3 + 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 * 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8) ||  || It seems like you didn't provide an input for the next step. Could you please provide the numbers you would like to use for the next calculation?",
                "1 * 1 = 1 (left: 1 3 8) || 1 * 3 = 3 (left: 3 8) || 4 + 6 = 10 (left: 10 9)",
                "8 - 1 = 7 (left: 1 3 7)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "3 * 1 = 3 (left: 3 1 8) || 1 * 3 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 8) = 24",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23) || 23 + 2 = 25 (left: 2)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (1 * 1) * (3 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 1 * 3 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "3 - 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 3 8) || 1 * 3 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (1 * 1) * (3 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 4 + 6 = 10 (left: 10 10 15)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "8 / 1 = 8 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24 25)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 * 1 = 24 (left: 24) || Answer: 1 * (1 * 3) * 8 = 24",
                "1 * 1 = 1 (left: 1 3 8) || 3 / 1 = 3 (left: 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "3 + 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "1 * 1 = 1 (left: 1 3 8) || 3 + 8 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8) || 8 - 3 = 5 (left: 1 5) || 1 + 5 = 6 (left: 6)",
                "8 / 1 = 8 (left: 1 3 8) || 3 * 8 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "8 / 1 = 8 (left: 1 3 8) || 8 / 1 = 8 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "1 * 1 = 1 (left: 1 3 8) || 8 - 3 = 5 (left: 1 5) || 1 + 5 = 6",
                "1 * 1 = 1 (left: 1 3 8) || 1 * 3 = 3 (left: 3 8)"
            ]
        },
        "Input": "1 1 3 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "3": {
        "puzzle": "1 1 1 8",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 8 = 9 (left: 1 1 9)",
                "8 / 1 = 8 (left: 1 1 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 / 1 = 1 (left: 1 1 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 2 1 8)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 + 1 = 2 (left: 2 1 8)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 + 1 = 2 (left: 1 2 8)",
                "8 / 1 = 8 (left: 1 1 ",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 * 1 = 1 (left: 1 1 ",
                "8 / 1 = 8 (left: 1 1 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 + 1 = 2 (left: 1 2 8)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 * 1 = 1 (left: 1 1 ",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 * 1 = 1 (left: 1 1 8)",
                "8 / 1 = 8 (left: 1 1 8)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.003,
                60.0,
                1.001,
                22.0,
                0.001,
                1.002,
                1.001,
                21.001,
                22.0,
                60.0,
                1.002,
                3.0,
                2.0,
                60.0,
                2.001,
                60.0,
                2.001,
                22.0,
                0.003,
                3.0,
                2.001,
                0.002,
                1.002,
                1.002,
                60.0,
                1.002,
                1.002,
                2.001,
                3.0,
                22.0
            ],
            "Resampling": [
                "0 <- 0.13",
                "1 <- 0.15",
                "2 <- 0.7",
                "3 <- 0.13",
                "4 <- 0.24",
                "5 <- 0.24",
                "6 <- 0.1",
                "7 <- 0.3",
                "8 <- INIT",
                "9 <- 0.9",
                "10 <- INIT",
                "11 <- 0.9",
                "12 <- 0.15",
                "13 <- 0.7",
                "14 <- 0.15",
                "15 <- 0.13",
                "16 <- INIT",
                "17 <- 0.13",
                "18 <- 0.7",
                "19 <- 0.9",
                "20 <- 0.7",
                "21 <- 0.15",
                "22 <- 0.9",
                "23 <- 0.1",
                "24 <- 0.13",
                "25 <- 0.17",
                "26 <- 0.8",
                "27 <- 0.3",
                "28 <- 0.9",
                "29 <- 0.24"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 8) || 8 - 2 = 6 (left: 6",
                "1 + 1 = 2 (left: 2 1 8) || 8 - 2 = 6 (left: 2 6)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 2 1 8) || Possible",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || Possible",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8) || 2 * 8 = 16 (left: 1 16)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4)",
                "8 / 1 = 8 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 2 1 8) || 2 * 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 1 = 7 (left:",
                "1 + 1 = 2 (left: 2 1 8) || 1 + 8 = 9 (left: 2 9)",
                "1 + 1 = 2 (left: 2 1 8) || Possible",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 2 1 8) || Possible",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 1 = 7 (left:",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8) || 1 * 2 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 2 1 8) || 1 + 8 = 9 (left: 2 9)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 2 1 8) || 1 * 8 = 8 (left: 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 1 8) || 1 * 1 = 1 (left: 1 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 * 2 = 2 (left: 2)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.003,
                1.001,
                60.0,
                0.003,
                60.0,
                0.003,
                40.0,
                1.002,
                2.001,
                60.0,
                20.001,
                41.0,
                0.001,
                1.0,
                0.001,
                0.003,
                21.001,
                0.003,
                3.0,
                60.0,
                0.003,
                0.003,
                60.0,
                40.0,
                0.002,
                60.0,
                40.0,
                60.0,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 1.19",
                "1 <- 1.27",
                "2 <- 0.13",
                "3 <- 1.19",
                "4 <- 0.9",
                "5 <- 0.15",
                "6 <- 0.24",
                "7 <- 1.9",
                "8 <- 0.13",
                "9 <- 1.26",
                "10 <- 1.4",
                "11 <- 1.10",
                "12 <- 1.22",
                "13 <- 1.25",
                "14 <- 1.9",
                "15 <- 1.25",
                "16 <- 1.4",
                "17 <- 1.22",
                "18 <- 1.6",
                "19 <- 1.22",
                "20 <- INIT",
                "21 <- 0.9",
                "22 <- INIT",
                "23 <- 1.2",
                "24 <- 0.1",
                "25 <- 1.4",
                "26 <- 1.19",
                "27 <- 0.13",
                "28 <- 1.2",
                "29 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 8) || 8 / 2 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6) ",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 2 1 8) || 2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "1 + 1 = 2 (left: 2 1 8) || 2 * 1 = 2 (left: 2 8)",
                "1 * 1 = 1 (left: 1 1 8) || 1 * 1 = 1 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "8 / 1 = 8 (left: 1 1 8) || 1 - 1 = 0 (left: 0 8)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 8) || 1 * 2 = 2 (left: 2 8)",
                "1 / 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 1 8) || 2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 5 + 10 = 15 (left: 15)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.002,
                60.0,
                0.003,
                0.001,
                60.0,
                60.0,
                60.0,
                0.002,
                0.002,
                0.003,
                0.002,
                0.002,
                0.001,
                60.0,
                0.001,
                0.001,
                0.001,
                0.0,
                0.0,
                0.0,
                1.002,
                0.002,
                1.002,
                0.001,
                40.0,
                60.0,
                0.003,
                60.0,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 1.9",
                "1 <- 0.13",
                "2 <- 1.6",
                "3 <- 1.22",
                "4 <- 0.9",
                "5 <- 1.4",
                "6 <- 2.27",
                "7 <- 2.4",
                "8 <- 2.4",
                "9 <- 1.27",
                "10 <- 2.5",
                "11 <- 0.9",
                "12 <- 1.22",
                "13 <- 0.13",
                "14 <- 1.4",
                "15 <- 2.13",
                "16 <- 0.13",
                "17 <- 2.4",
                "18 <- 2.24",
                "19 <- 0.8",
                "20 <- 2.27",
                "21 <- 0.7",
                "22 <- 1.4",
                "23 <- 2.13",
                "24 <- 2.1",
                "25 <- 2.4",
                "26 <- 2.25",
                "27 <- 2.13",
                "28 <- 2.25",
                "29 <- 2.6"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4) || 4 * 1 = 4 (left: 4)",
                "1 + 1 = 2 (left: 2 1 8) || 8 / 2 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 8) || 2 * 8 = 16 (left: 1 16)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 8) || 2 + 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 8) || 2 + 1 = 3 (left: 3 8) || 7 - 4 = 3 (left: 3 9)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 1 = 7 (left:",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 2 1 8) || 2 + 1 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: ((1 + 1) + 2) * 8 = 24",
                "1 + 1 = 2 (left: 2 1 8) || 2 * 1 = 2 (left: 2 8)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 10)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 1 8) || 8 - 1 = 7 (left: 1 7)",
                "1 + 1 = 2 (left: 2 1 8) || 2 + 1 = 3 (left: 3 8) || 3 + 8 = 11 (left: 8 11)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: ((1 + 1) + 1) * 8 = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 2) * 8 = 24",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: ((1 + 1) + 1) * 8 = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: ((1 + 1) + 1) * 8 = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: ((1 + 1) + 1) * 8 = 24",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)"
            ]
        },
        "Input": "1 1 1 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "4": {
        "puzzle": "6 6 6 6",
        "Step 0": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 - 6 = 0 (left: 6 6 ",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 1 6 6)"
            ],
            "Pruning": [],
            "Evaluation": [
                41.0,
                1.001,
                41.0,
                22.0,
                20.002,
                21.0,
                41.0,
                41.0,
                60.0,
                41.0,
                60.0,
                41.0,
                40.001,
                40.001,
                40.001,
                60.0,
                0.003,
                20.002,
                20.002,
                21.001,
                21.001,
                2.001,
                22.0,
                60.0,
                41.0,
                60.0,
                41.0,
                40.0,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- 0.28",
                "1 <- 0.14",
                "2 <- 0.28",
                "3 <- 0.23",
                "4 <- 0.22",
                "5 <- 0.7",
                "6 <- 0.28",
                "7 <- INIT",
                "8 <- 0.8",
                "9 <- 0.11",
                "10 <- 0.24",
                "11 <- 0.6",
                "12 <- 0.25",
                "13 <- 0.28",
                "14 <- 0.5",
                "15 <- 0.15",
                "16 <- INIT",
                "17 <- 0.10",
                "18 <- 0.0",
                "19 <- 0.28",
                "20 <- 0.11",
                "21 <- 0.28",
                "22 <- 0.24",
                "23 <- 0.26",
                "24 <- 0.6",
                "25 <- 0.2",
                "26 <- 0.15",
                "27 <- 0.5",
                "28 <- 0.23",
                "29 <- 0.11"
            ]
        },
        "Step 1": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36)",
                "6 * 6 = 36 (left: 6 6 36) || Input: 3 9 12",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 * 6 = 36 (left: 6 6 36) || 36 / 6 = 6 (left: 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 2 6)",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "6 - 6 = 0 (left: 0 6 6) || 3 - 3 =",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36)",
                "6 / 6 = 1 (left: 1 6 6) || 1 + 6 = 7 (left: 6 6 7)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36)",
                "6 - 6 = 0 (left: 6 6 0)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 6 36)",
                "6 + 6 = 12 (left: 6 12 6) || Input: 72 6 6",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 6",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36 36)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left:",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36)",
                "6 - 6 = 0 (left: 0 6 6) || Input: 2 3 6",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36)",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18)",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 2 6)"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                3.0,
                40.0,
                20.002,
                21.001,
                40.001,
                20.002,
                60.0,
                0.003,
                1.002,
                0.002,
                0.003,
                0.003,
                40.0,
                1.002,
                60.0,
                3.0,
                0.003,
                0.003,
                20.002,
                0.003,
                20.002,
                21.0,
                0.003,
                0.003,
                1.001,
                20.0,
                0.003,
                40.001,
                2.001
            ],
            "Resampling": [
                "0 <- 1.13",
                "1 <- 0.7",
                "2 <- 0.3",
                "3 <- 1.3",
                "4 <- 0.13",
                "5 <- 0.18",
                "6 <- 0.0",
                "7 <- 1.6",
                "8 <- 0.9",
                "9 <- 0.0",
                "10 <- 1.15",
                "11 <- 0.9",
                "12 <- 1.15",
                "13 <- 0.14",
                "14 <- 0.24",
                "15 <- 0.17",
                "16 <- 1.28",
                "17 <- 0.10",
                "18 <- 0.9",
                "19 <- 0.3",
                "20 <- 0.10",
                "21 <- 0.11",
                "22 <- 1.6",
                "23 <- 0.26",
                "24 <- 0.25",
                "25 <- 1.5",
                "26 <- 1.6",
                "27 <- 0.26",
                "28 <- 1.22",
                "29 <- 1.13"
            ]
        },
        "Step 2": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 / 36 = 0 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36 36)",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 6 2)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "6 - 6 = 0 (left: 0 6 6) || 5 + 7 = 12 (left: 1 12",
                "6 - 6 = 0 (left: 6 6  || 6 + 6 = 12 (left: 12) ",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 * 6 = 36 (left: 6 6 36) || Input: 3 9 12 || 12 / 3 = 4 (left: 4 9)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 6 = 12 (left: 12)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 / 6 = 1 (left: 1 6 6) || 6 + 1",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38",
                "6 / 6 = 1 (left: 1 6 6) || 1 + 6 = 7 (left: 6 6 7)",
                "6 / 6 = 1 (left: 1 6 6) || 1 + 6 = 7 (left: 6 6 7)",
                "6 * 6 = 36 (left: 6 6 36) || 36 / 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 6 36)",
                "6 / 6 = 1 (left: 1 6 6) || 1 + 6 = 7 (left: 6 7)",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 2 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36)",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 2 6)",
                "6 * 6 = 36 (left: 6 6 36) || Input: 3 9 12 || 3 * 9 = 27 (left: 12 27)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || Input: 3 9 12 || 12 - 3 = 9 (left: 9 12)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 6 36)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: || 1 - 6 = -5 (left: -5)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36)"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                20.002,
                0.003,
                0.002,
                0.003,
                0.003,
                21.001,
                40.0,
                20.002,
                0.002,
                0.003,
                0.003,
                0.003,
                1.002,
                2.001,
                0.003,
                60.0,
                0.003,
                0.002,
                21.001,
                60.0,
                0.001,
                0.003,
                20.001,
                0.003,
                20.0,
                0.003,
                20.002,
                0.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.13",
                "1 <- 1.0",
                "2 <- 1.13",
                "3 <- 1.5",
                "4 <- 1.0",
                "5 <- 1.22",
                "6 <- 0.23",
                "7 <- 2.1",
                "8 <- 2.6",
                "9 <- 0.19",
                "10 <- 0.28",
                "11 <- 2.25",
                "12 <- 1.13",
                "13 <- 0.5",
                "14 <- 1.7",
                "15 <- 2.20",
                "16 <- 1.19",
                "17 <- 0.26",
                "18 <- 1.7",
                "19 <- 2.20",
                "20 <- 1.2",
                "21 <- 1.26",
                "22 <- 0.15",
                "23 <- 0.27",
                "24 <- 1.7",
                "25 <- 0.3",
                "26 <- 0.27",
                "27 <- 2.20",
                "28 <- 0.0",
                "29 <- 2.29"
            ]
        },
        "Step 3": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 5 + 10 = 15 (left: 15 15)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 36 - 1 = 35 (left: 35)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 5 * 3 = 15 (left: 15 7)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 1 + 36 = 37 (left: 37)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: || 1 * 6 = 6 (left: 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 2 = 12 (left: 12 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36 36) || 36 / 36 = 1 (left: 1)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 - 6 = 66 (left: 66)",
                "6 - 6 = 0 (left: 0 6 6) || 4 + 5 = 9 (left: 7 9",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || None - 36 is the final result.",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 36 -",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 36 / 1 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36) || 12 * 3 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 6 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 1 * 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36) || There are no possible next steps as there is only one number provided.",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36) || There are no possible operations to perform on the number 36.",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36)",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "6 * 6 = 36 (left: 6 6 36) || 36 - 6 = 30 (left: 6 30)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 36 / 1 = 36 ",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 / 18 = 2 (left: 2)"
            ],
            "Pruning": [
                "29<-1.15"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                60.0,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                60.0,
                0.003,
                0.003,
                20.0,
                0.003,
                0.003,
                20.002,
                0.002,
                0.003,
                40.001,
                0.003,
                0.003,
                21.0,
                60.0
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 3.3",
                "2 <- 2.19",
                "3 <- 3.29",
                "4 <- 3.15",
                "5 <- 0.28",
                "6 <- 0.15",
                "7 <- 2.29",
                "8 <- 0.15",
                "9 <- 0.6",
                "10 <- 2.16",
                "11 <- 3.25",
                "12 <- 2.20",
                "13 <- 1.22",
                "14 <- 2.16",
                "15 <- 2.25",
                "16 <- 1.3",
                "17 <- 3.15",
                "18 <- 3.25",
                "19 <- 2.27",
                "20 <- 0.28",
                "21 <- 0.3",
                "22 <- 3.16",
                "23 <- 3.3",
                "24 <- 1.26",
                "25 <- 2.8",
                "26 <- 3.15",
                "27 <- 0.26",
                "28 <- 0.25",
                "29 <- 2.7"
            ]
        },
        "Step 4": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6) || Input: 3 4 5",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || There are no possible next steps with the input of 36 as it is already a single number.",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 2 6) || 2 / 6 = 0.3333 (left: 0.3333)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 36 / 1 = 36 (left: 36) || 36 - 36 = 0 (left: 0)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 6 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 / 2 = 18",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36)",
                "6 - 6 = 0 (left: 0 6 6) || Input: 4 4 8",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 - 6 = 12 (left: 12)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 36 - 1 = 35 (left: 35)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: || 6 - 1 = 5 (left: 5)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 / 2 = 18",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 + 6 = 12",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 36 / 1 = 36 (left: 36) || 36 / 2 = 18",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 / 6 = 3 (left: 3)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 6 36) || 6 + 36 = 42 (left: 42)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 6 = 36 (left: 12 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36) || 12 * 3 = 36 (left: 36) || There are no possible next steps with the input 36.",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 / 9 = 4 (left: 4)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36) || 36 cannot be broken down further as it is already a single number.",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 36 / 1 = 36 (left: 36) || 36 / 2 = 18",
                "6 * 6 = 36 (left: 6 6 36) || Input: 1 1 1 1",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 6 36)",
                "6 * 6 = 36 (left: 6 6 36) || Input: 3 9 12 || 12 / 3 = 4 (left: 4 9) || 7 - 5 = 2"
            ],
            "Pruning": [
                "4<-1.6",
                "23<-2.16"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                20.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                20.002,
                0.003,
                0.003,
                20.0,
                0.003,
                0.0,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.16",
                "1 <- 1.6",
                "2 <- 3.25",
                "3 <- 2.0",
                "4 <- 2.29",
                "5 <- 3.16",
                "6 <- 2.16",
                "7 <- 2.27",
                "8 <- 2.0",
                "9 <- 4.23",
                "10 <- 0.24",
                "11 <- 1.4",
                "12 <- 4.5",
                "13 <- 2.6",
                "14 <- 2.29",
                "15 <- 1.22",
                "16 <- 4.23",
                "17 <- 2.23",
                "18 <- 4.20",
                "19 <- 4.23",
                "20 <- 3.3",
                "21 <- 3.25",
                "22 <- 2.6",
                "23 <- 2.25",
                "24 <- 3.15",
                "25 <- 2.0",
                "26 <- 0.13",
                "27 <- 0.23",
                "28 <- 2.0",
                "29 <- 2.29"
            ]
        },
        "Step 5": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36) || 12 * 3 = 36 (left: 36) || There are no possible next steps with only one number provided.",
                "6 * 6 = 36 (left: 6 6 36) || Input: 3 9 12 || 3 * 9 = 27 (left: 12 27)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 + 6 = 24 (left: 24)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 / 36 = 0 (left: 36) || No more possible next steps as there is only one number left.",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 / 4 = 9",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36) || 12 * 3 = 36 (left: 36) || No possible next steps with the input of 36.",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps as there are no other numbers provided to perform operations with.",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 6 36) || 36 - 6 = 30 (left: 30)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 / 36 = 0 (left: 36) || None, as there is only one number provided.",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps with the given input of 18.",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 - 6 = 66 (left: 66)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 / 2 = 18",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: || 1 * 6 = 6 (left: 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 36 / 0 = undefined (left: 0 36)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 8 = 10 (left: 10)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || None, as there is only one number provided.",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 * 6 = 108 (left: 108)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 / 6 = 12 (left: 12)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || There are no possible next steps for the number 36 as it is already a single number.",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 36 / 1 = 36 (left: 36) || 36 - 36 = 0 (left: 0)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 / 36 = 0 (left: 36) || 36 - 2 = 34",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 / 6 = 1 (left: 1 12)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 / 36 = 0 (left: 36) || 36 / 12 = 3 (left: 3)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || No possible next steps as there is only one number."
            ],
            "Pruning": [
                "19<-3.16",
                "24<-0.23",
                "28<-3.25"
            ],
            "Evaluation": [
                0.003,
                0.002,
                60.0,
                0.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                40.0,
                40.0,
                0.003,
                0.003,
                0.003,
                60.0,
                40.001,
                21.001,
                60.0,
                0.003,
                0.002,
                0.002,
                0.003,
                41.0,
                0.003,
                0.003,
                1.002,
                41.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.6",
                "1 <- 5.12",
                "2 <- 2.8",
                "3 <- 2.20",
                "4 <- 5.16",
                "5 <- 5.16",
                "6 <- 5.19",
                "7 <- 0.20",
                "8 <- 5.11",
                "9 <- 5.28",
                "10 <- 5.28",
                "11 <- 5.16",
                "12 <- 5.24",
                "13 <- 5.12",
                "14 <- 5.16",
                "15 <- 2.23",
                "16 <- 3.16",
                "17 <- 5.17",
                "18 <- 5.17",
                "19 <- 2.20",
                "20 <- 5.19",
                "21 <- 0.23",
                "22 <- 3.29",
                "23 <- 2.16",
                "24 <- 3.25",
                "25 <- 2.19",
                "26 <- 5.2",
                "27 <- 5.16",
                "28 <- 1.2",
                "29 <- 0.11"
            ]
        },
        "Step 6": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 + 6 = 78 (left: 78)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || There are no possible next steps with the input 36.",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 1 * 36 = 36 (left: 36)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 16 / 8 = 2 (left: 2)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 16 - 8 = 8 (left: 8)",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36) || 12 * 3 = 36 (left: 36) || There are no possible next steps as there is only one number provided.",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18 (left: 18)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 6 - 18 = -12 (left: -12)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 - 6 = 12 (left: 12)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 8 + 16 = 24 (left: 24)",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 2 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 / 2 = 18",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 8 * 16 = 128 (left: 128)",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 3 + 9 = 12 (left: 12 27)",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36) || 12 * 3 = 36 (left: 36) || 36 / 2 = 18",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 + 8 = 44 (left: 8) ",
                "6 * 6 = 36 (left: 6 6 36) || 6 - 6 = 0 (left: 0 36) || 0 + 36 = 36 (left: 36) || 36 / 2 = 18",
                "6 * 6 = 36 (left: 6 6 36) || 6 / 6 = 1 (left: 1 36) || 1 + 36 = 37 (left: 37)",
                "6 * 6 = 36 (left: 6 6 36) || 6 + 6 = 12 (left: 12 36) || 12 * 3 = 36 (left: 36) || 36 / 6 = 6 (left: 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || No possible next steps with the input 18.",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 * 6 = 108 (left: 108)",
                "6 + 6 = 12 (left: 6 12 6) || 12 / 6 = 2 (left: 2 6) || 6 / 2 = 3 (left: 3)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 + 6 = 24 (left: 24) || Answer: ((6 + 6) + 6) + 6 = 24",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 8 + 16 = 24 (left: 24)",
                "6 * 6 = 36 (left: 6 6 36) || 6 * 6 = 36 (left: 36) || No possible next steps as there is only one number.",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 6 72 6)"
            ]
        },
        "Input": "6 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "5": {
        "puzzle": "1 1 2 12",
        "Step 0": {
            "steps": [
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 - 2 = 10 (left: 1 2 10)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "12 - 2 = 10 (left: 1 2 10)",
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 - 1 = 11 (left: 1 2 11)",
                "12 - 2 = 10 (left: 1 2 10)",
                "1 * 1 = 1 (left: 2 1 12)",
                "12 - 2 = 10 (left: 1 2 10)",
                "1 * 2 = 2 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 - 2 = 10 (left: 1 10 ",
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "2 * 1 = 2 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "12 - 2 = 10 (left: 2 10 12)",
                "12 - 1 = 11 (left: 1 2 ",
                "2 * 1 = 2 (left: 1 2 12)",
                "2 + 1 = 3 (left: 1 3 12)",
                "2 * 1 = 2 (left: 2 2 ",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 - 1 = 11 (left: 1 2 "
            ],
            "Pruning": [],
            "Evaluation": [
                1.002,
                2.001,
                0.003,
                1.002,
                1.002,
                60.0,
                3.0,
                2.001,
                0.003,
                20.002,
                0.002,
                2.001,
                41.0,
                0.003,
                60.0,
                60.0,
                0.003,
                60.0,
                0.003,
                0.003,
                1.002,
                60.0,
                60.0,
                0.003,
                0.002,
                60.0,
                41.0,
                20.002,
                1.002,
                20.002
            ],
            "Resampling": [
                "0 <- 0.12",
                "1 <- 0.26",
                "2 <- 0.11",
                "3 <- 0.26",
                "4 <- 0.17",
                "5 <- 0.21",
                "6 <- 0.22",
                "7 <- 0.17",
                "8 <- 0.14",
                "9 <- 0.9",
                "10 <- 0.5",
                "11 <- 0.22",
                "12 <- 0.15",
                "13 <- 0.5",
                "14 <- 0.26",
                "15 <- 0.12",
                "16 <- 0.15",
                "17 <- 0.14",
                "18 <- 0.21",
                "19 <- 0.21",
                "20 <- 0.21",
                "21 <- 0.12",
                "22 <- 0.14",
                "23 <- 0.12",
                "24 <- 0.14",
                "25 <- 0.5",
                "26 <- 0.6",
                "27 <- 0.27",
                "28 <- 0.27",
                "29 <- 0.9"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 2 1 12) || 1 * 2 = 2 (left: 2 12)",
                "2 + 1 = 3 (left: 1 3 12) || 12 / 3 = 4 (left: 1 4)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20)",
                "2 + 1 = 3 (left: 1 3 12) || 1 * 3 = 3 (left: 3 12)",
                "12 - 2 = 10 (left: 1 10  || 1 + 10 = 11 (left: 11)",
                "2 * 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "12 - 2 = 10 (left: 1 10  || 10 - 10 = 0 (left: 0)",
                "1 * 2 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 2 2 12) || 12 - 2 = 10 (left: 2 10)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 12) || 1 * 12 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 12) || 12 - 1 = 11 (left:",
                "2 + 1 = 3 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 2 1 12) || 12 - 2 = 10 (left: 2 10)",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 * 2 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "2 * 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "2 * 1 = 2 (left: 1 2 12) || 12 - 1 = 11 (left:",
                "1 * 1 = 1 (left: 2 1 12) || 12 + 2 = 14 (left: 1 14)",
                "1 * 2 = 2 (left: 1 2 12) || 1 * 2 = 2 (left:",
                "1 * 1 = 1 (left: 2 1 12) || 1 * 12 = 12 (left: 12)",
                "1 * 2 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 1 = 9 (left: 2 9)",
                "2 * 1 = 2 (left: 2 2  || 2 + 2 = 4 (left: 4)",
                "2 * 1 = 2 (left: 2 2  || 2 + 2 = 4 (left: 4)",
                "1 + 1 = 2 (left: 2 2 12) || 12 - 2 = 10 (left: 2 10)"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                0.003,
                0.003,
                1.002,
                0.003,
                20.002,
                60.0,
                3.0,
                60.0,
                0.003,
                40.001,
                40.001,
                60.0,
                2.0,
                0.003,
                41.0,
                60.0,
                60.0,
                0.001,
                0.001,
                0.003,
                0.003,
                60.0,
                1.002,
                0.0,
                0.002,
                0.002,
                3.0
            ],
            "Resampling": [
                "0 <- 0.12",
                "1 <- 0.27",
                "2 <- 1.18",
                "3 <- 0.14",
                "4 <- 1.7",
                "5 <- 0.9",
                "6 <- 0.25",
                "7 <- INIT",
                "8 <- 1.1",
                "9 <- 1.19",
                "10 <- 1.8",
                "11 <- 0.22",
                "12 <- 0.29",
                "13 <- 0.9",
                "14 <- 1.8",
                "15 <- 1.7",
                "16 <- 1.17",
                "17 <- 1.12",
                "18 <- 1.10",
                "19 <- 1.0",
                "20 <- 1.7",
                "21 <- 0.17",
                "22 <- 0.17",
                "23 <- 0.14",
                "24 <- 0.27",
                "25 <- 1.19",
                "26 <- 1.8",
                "27 <- 0.22",
                "28 <- 0.27",
                "29 <- 1.8"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 2 1 12) || 12 / 2 = 6 (left: 6 12)",
                "2 * 1 = 2 (left: 2 2  || 2 + 2 = 4 (left: 4)",
                "2 * 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 * 2 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "12 - 2 = 10 (left: 1 10  || 10 - 10 = 0 (left: 0) || There are no possible next steps as there are no numbers given in the input.",
                "1 + 1 = 2 (left: 2 2 12) || 12 + 2 = 14 (left: 2 14)",
                "2 * 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "2 + 1 = 3 (left: 1 3 12) || 12 / 3 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 * 1 = 24 (left: 24)",
                "1 * 2 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "12 - 1 = 11 (left: 1 2  || 2 - 1 = 1 (left: 1)",
                "1 + 1 = 2 (left: 2 2 12) || 12 / 2 = 6 (left: 2 6)",
                "1 * 2 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "12 - 2 = 10 (left: 1 10  || 10 - 10 = 0 (left: 0) || No possible next steps as there is no input given.",
                "1 * 2 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 * 1 = 1 (left: 2 1 12) || 1 * 2 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "12 - 2 = 10 (left: 1 10  || 10 - 10 = 0 (left: 0) || There are no possible next steps with the input 0.",
                "12 - 2 = 10 (left: 1 10  || 10 + 1 = 11 (left: 11)",
                "12 - 2 = 10 (left: 1 10  || 1 + 10 = 11 (left: 11)",
                "1 * 2 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "2 * 1 = 2 (left: 2 2  || 2 * 2 = 4 (left: 4)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 * 2 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "2 * 1 = 2 (left: 2 2  || 2 - 2 = 0 (left: 0)",
                "1 * 2 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)"
            ],
            "Pruning": [],
            "Evaluation": [
                1.002,
                0.002,
                0.0,
                60.0,
                0.003,
                0.003,
                60.0,
                21.001,
                20.001,
                40.0,
                0.002,
                0.003,
                0.002,
                0.001,
                0.001,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                60.0,
                0.002,
                60.0,
                0.001,
                60.0,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 1.1",
                "2 <- 1.18",
                "3 <- 1.19",
                "4 <- 0.14",
                "5 <- 1.14",
                "6 <- 1.0",
                "7 <- 1.0",
                "8 <- 1.8",
                "9 <- 2.9",
                "10 <- 1.14",
                "11 <- 0.17",
                "12 <- 1.19",
                "13 <- 1.24",
                "14 <- 1.24",
                "15 <- 2.23",
                "16 <- 2.6",
                "17 <- 0.25",
                "18 <- 2.27",
                "19 <- 2.25",
                "20 <- 1.1",
                "21 <- 0.17",
                "22 <- 1.0",
                "23 <- 0.21",
                "24 <- 1.19",
                "25 <- 2.27",
                "26 <- 1.17",
                "27 <- 0.22",
                "28 <- 2.9",
                "29 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 2 1 12) || 12 / 2 = 6 (left: 6 12) || 6 * 12 = 72 (left: 72) ",
                "2 + 1 = 3 (left: 1 3 12) || 12 / 3 = 4 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "2 * 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "1 * 2 = 2 (left: 1 2 12) || Input: 3 5 7 10",
                "2 + 1 = 3 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "1 * 1 = 1 (left: 2 1 12) || 1 * 2 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 * 1 = 1 (left: 2 1 12) || 1 * 2 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 * 2 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 1 + 10 = 11 (left: 10)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 * 1 = 24 (left: 24) || Answer: (2 * 1) * (12 / 1) = 24",
                "2 + 1 = 3 (left: 1 3 12) || 12 - 3 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9 9)",
                "12 - 2 = 10 (left: 1 10  || 10 + 1 = 11 (left: 11)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 - 1 = 23 (left: 1 23)",
                "1 * 2 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "1 * 2 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 * 2 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "2 * 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "2 * 1 = 2 (left: 1 2 12) || 2 / 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (2 * 1) * (12 / 1) = 24",
                "2 + 1 = 3 (left: 1 3 12) || 12 / 3 = 4 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "12 - 2 = 10 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 2 1 12) || 1 * 2 = 2 (left: 2 12) || 2 + 12 = 14",
                "2 * 1 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 2 11)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "1 * 2 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 * 1 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "2 * 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 * 1 = 24 (left: 24) || Answer: (2 * 1) * 12 = 24",
                "1 * 1 = 1 (left: 2 1 12) || 1 * 2 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)"
            ]
        },
        "Input": "1 1 2 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "6": {
        "puzzle": "1 2 2 6",
        "Step 0": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "2 * 2 = 4 (left: 4 2 6)",
                "6 / 2 = 3 (left: 2 3 ",
                "2 * 2 = 4 (left: 4 2 6)",
                "2 * 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 ",
                "6 / 2 = 3 (left: 1 2 3)",
                "1 + 2 = 3 (left: 2 3 6)",
                "1 + 2 = 3 (left: 2 3 6)",
                "6 - 2 = 4 (left: 1 2 4)",
                "6 - 2 = 4 (left: 2 4 6)",
                "6 - 2 = 4 (left: 1 2 4)",
                "2 * 2 = 4 (left: 1 4 6)",
                "2 + 2 = 4 (left: 4 4 6)",
                "1 + 2 = 3 (left: 2 3 6)",
                "1 + 2 = 3 (left: 2 3 6)",
                "6 / 2 = 3 (left: 1 2 3)",
                "2 * 2 = 4 (left: 4 2 6)",
                "2 + 2 = 4 (left: 4 4 6)",
                "",
                "6 - 2 = 4 (left: 4 4)",
                "2 + 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 2 4)",
                "6 - 2 = 4 (left: 1 2 4)",
                "6 / 2 = 3 (left: 2 3 6)",
                "2 * 2 = 4 (left: 4 4 6)",
                "6 / 2 = 3 (left: 1 2 3)",
                "1 + 2 = 3 (left: 2 3 6)",
                "6 - 2"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                60.0,
                1.002,
                0.003,
                0.003,
                40.001,
                0.001,
                1.0,
                22.0,
                60.0,
                2.001,
                0.003,
                0.003,
                60.0,
                3.0,
                41.0,
                41.0,
                1.002,
                1.002,
                22.0,
                40.001,
                0.003,
                60.0,
                3.0,
                1.002,
                60.0,
                3.0,
                0.003,
                22.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.25",
                "1 <- 0.8",
                "2 <- 0.22",
                "3 <- INIT",
                "4 <- 0.0",
                "5 <- 0.15",
                "6 <- 0.13",
                "7 <- 0.9",
                "8 <- 0.8",
                "9 <- 0.16",
                "10 <- 0.10",
                "11 <- 0.20",
                "12 <- 0.13",
                "13 <- 0.15",
                "14 <- 0.16",
                "15 <- 0.28",
                "16 <- 0.22",
                "17 <- 0.9",
                "18 <- 0.25",
                "19 <- 0.22",
                "20 <- INIT",
                "21 <- 0.20",
                "22 <- 0.22",
                "23 <- 0.20",
                "24 <- 0.20",
                "25 <- 0.15",
                "26 <- 0.0",
                "27 <- 0.25",
                "28 <- 0.9",
                "29 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "6 / 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "1 + 2 = 3 (left: 2 3 6) || Input: 4 7 9",
                "2 + 2 = 4 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "6 / 2 = 3 (left: 1 3 6)",
                "2 / 1 = 2 (left: 2 2 6) || 6 / 2 = 3 (left: 2 3)",
                "1 + 2 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6)",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "1 + 2 = 3 (left: 2 3 6) || 6 / 3 = 2 (left: 2 6)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "1 + 2 = 3 (left: 2 3 6) || Possible next steps:",
                "6 - 2 = 4 (left: 1 2 4) || 3",
                " || There are no more possible next steps.",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "1 + 2 = 3 (left: 2 3 6) || 2 + 3 = 5 (left: 5 6)",
                "1 + 2 = 3 (left: 2 3 6) || 2 + 3 = 5 (left: 5 6)",
                "1 + 2 = 3 (left: 2 3 6) || 3 + 2 = 5 (left: 5)",
                "2 + 2 = 4 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 3 = 9 (left: 6 9)",
                "6 / 2 = 3 (left: 2 3 6) || 6",
                "2 + 2 = 4 (left: 1 4 6) || 6 - 4 = 2 (left:",
                "6 - 2 = 4 (left: 4 4)",
                " || There are no more possible next steps for the given input.",
                "2 + 2 = 4 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                " || There are no possible next steps as there are no more operations that can be performed on the numbers given.",
                " || It seems like you didn't provide an input for the next calculation. Could you please provide the numbers you would like to work with?",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left:",
                "2 / 1 = 2 (left: 2 2 6) || Possible",
                "6 / 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 2 4)",
                "1 + 2 = 3 (left: 2 3 6) || 2 + 3 = 5 (left: 5 6)",
                "1 * 2 = 2 (left: 2 2 6) || 4 / 2 = 2 ("
            ],
            "Pruning": [],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                22.0,
                0.002,
                3.0,
                22.0,
                0.002,
                40.001,
                0.003,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                0.002,
                1.002,
                0.003,
                0.003,
                20.001,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                40.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.19",
                "1 <- 0.9",
                "2 <- 1.8",
                "3 <- 1.8",
                "4 <- 0.28",
                "5 <- 0.28",
                "6 <- 0.0",
                "7 <- 1.25",
                "8 <- 0.26",
                "9 <- 0.15",
                "10 <- 0.1",
                "11 <- 0.0",
                "12 <- 0.13",
                "13 <- 1.3",
                "14 <- 1.8",
                "15 <- 0.22",
                "16 <- 0.9",
                "17 <- 0.22",
                "18 <- 0.16",
                "19 <- 1.8",
                "20 <- 0.9",
                "21 <- 1.25",
                "22 <- 0.28",
                "23 <- 0.20",
                "24 <- 0.5",
                "25 <- 1.25",
                "26 <- 0.25",
                "27 <- 1.6",
                "28 <- 0.13",
                "29 <- 0.22"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 2 = 4 (left: 1 4 6) || 6 - 4 = 2 (left: || 6 - 4 = 2 (left: 2)",
                "1 + 2 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 2 4)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6)",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 - 4 = 0 (left: 0)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6)",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "6 / 2 = 3 (left: 1 3 6) || 3 + 6 = 9 (left: 1 9)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) ",
                "2 + 2 = 4 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "1 + 2 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6)",
                "2 + 2 = 4 (left: 1 4 6) || 4 - 1 = 3 (left: 3 6)",
                "1 + 2 = 3 (left: 2 3 6) || 3 / 2 = 1.5 (left: 1",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 3 = 3 (left: 2 3)",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 ^ 4 = 256 (left: 256)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 2 4)",
                " || It seems like you did not provide an input. Please enter a set of numbers to continue.",
                "2 * 2 = 4 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 + 4 = 8 (left: 8 = 16)",
                "6 / 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5) || 5 - 4 = 1 (left: 1)",
                "2 * 2 = 4 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "2 + 2 = 4 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.001,
                1.0,
                0.003,
                0.003,
                0.001,
                0.003,
                60.0,
                0.003,
                40.001,
                60.0,
                60.0,
                60.0,
                20.002,
                60.0,
                40.0,
                21.0,
                41.0,
                20.0,
                0.003,
                0.002,
                0.003,
                0.003,
                1.001,
                0.003,
                0.002,
                20.002,
                40.001,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.13",
                "1 <- 0.10",
                "2 <- 1.8",
                "3 <- 0.19",
                "4 <- 2.6",
                "5 <- 2.12",
                "6 <- 1.25",
                "7 <- 2.25",
                "8 <- 2.26",
                "9 <- 0.8",
                "10 <- 2.6",
                "11 <- 0.22",
                "12 <- 2.16",
                "13 <- 2.12",
                "14 <- 2.16",
                "15 <- 2.8",
                "16 <- 2.6",
                "17 <- 2.26",
                "18 <- 0.26",
                "19 <- 2.6",
                "20 <- 2.13",
                "21 <- 2.6",
                "22 <- 1.3",
                "23 <- 2.25",
                "24 <- 2.11",
                "25 <- 0.20",
                "26 <- 2.6",
                "27 <- 2.14",
                "28 <- 2.10",
                "29 <- 2.14"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 2 = 4 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 2 4) || 4 / 2 = 2 (left: 1 2)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "2 + 2 = 4 (left: 4 4 6) || 6 / 4 = 1.5 (left: 1.5 4)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2) || 2 / 1 = 2 (left: 2)",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 * 4 = 16 (left: 16)",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 + 4 = 8 (left: 8 = 16) || 16 / 8 = 2 (left: 8)",
                "6 / 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 2 4)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 - 6 = -2 (left: -2)",
                "2 + 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 + 2 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 + 6 = 9 (left: 9)",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2) || 1 * 2 = 2 (left: 2)",
                "1 + 2 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 3 + 6 = 9 (left: 9)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "6 / 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "6 / 2 = 3 (left: 1 3 6) || 3 + 6 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "6 / 2 = 3 (left: 1 3 6) || 1 * 3 = 3 (left: 3 6)",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 + 4 = 8 (left: 8 = 16) || 8 - 2 = 6 (left: 6 16)",
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6) || 4 - 6 = -2 (left: -2)",
                " || It seems like there was no input provided. Please enter a set of numbers to continue the calculations.",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)  || 36 / 2 = 18",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 1 + 6 = 7",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)  || 36 / 2 = 18"
            ],
            "Pruning": [
                "7<-2.16"
            ],
            "Evaluation": [
                20.0,
                20.001,
                0.003,
                0.003,
                60.0,
                0.002,
                0.002,
                0.0,
                0.002,
                0.001,
                0.001,
                60.0,
                0.001,
                0.002,
                0.001,
                0.002,
                1.001,
                0.001,
                60.0,
                0.001,
                0.002,
                0.003,
                3.0,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.8",
                "1 <- 3.11",
                "2 <- 3.4",
                "3 <- 3.11",
                "4 <- 3.0",
                "5 <- 0.16",
                "6 <- 0.13",
                "7 <- 2.14",
                "8 <- 2.14",
                "9 <- 0.1",
                "10 <- 2.8",
                "11 <- 2.6",
                "12 <- 2.13",
                "13 <- 2.6",
                "14 <- 2.6",
                "15 <- 0.22",
                "16 <- 0.1",
                "17 <- 2.10",
                "18 <- 3.1",
                "19 <- 3.11",
                "20 <- 2.25",
                "21 <- 3.18",
                "22 <- 2.17",
                "23 <- 3.1",
                "24 <- 3.4",
                "25 <- INIT",
                "26 <- 2.13",
                "27 <- 3.18",
                "28 <- 0.28",
                "29 <- 3.18"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 + 6 = 12",
                "2 + 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (2 + 2) * 6 = 24",
                "2 + 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "2 * 2 = 4 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6)",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)  || 36 + 2 = 38",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)  || 36 / 2 = 18",
                "1 * 2 = 2 (left: 2 2 6) || Input: 3 5 7 ",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "6 / 2 = 3 (left: 1 3 6) || 3 + 6 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "2 + 2 = 4 (left: 1 4 6) || Input: 3 9",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 - 2 = 4 (left: 1 2 4) || 4 / 2 = 2 (left: 1 2) || 1 + 2 = 3 (left: 3)",
                "2 + 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 + 4 = 8 (left: 8 = 16) || 16 - 8 = 8 (left: 8)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "2 + 2 = 4 (left: 1 4 6) || 4 - 1 = 3 (left: 3 6) || 3 + 6 = 9 (left: 9)",
                "6 - 2 = 4 (left: 1 2 4) || 4 / 2 = 2 (left: 1 2) || 1 + 2 = 3 (left: 3)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (2 + 2) * 6 = 24",
                "6 - 2 = ",
                "6 / 2 = 3 (left: 1 3 6) || 3 + 6 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)"
            ],
            "Pruning": [
                "2<-2.14",
                "20<-0.5",
                "24<-2.9"
            ],
            "Evaluation": [
                0.003,
                0.002,
                20.0,
                0.002,
                0.001,
                1.002,
                22.0,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                0.001,
                0.002,
                0.002,
                0.003,
                60.0,
                0.002,
                0.003,
                0.002,
                60.0,
                0.001,
                0.001,
                0.0,
                60.0,
                0.003,
                0.002,
                0.001,
                40.0,
                0.002
            ],
            "Resampling": [
                "0 <- 4.6",
                "1 <- 4.11",
                "2 <- 1.25",
                "3 <- 3.22",
                "4 <- 4.28",
                "5 <- 3.22",
                "6 <- 2.8",
                "7 <- 2.11",
                "8 <- 2.25",
                "9 <- 4.28",
                "10 <- 4.20",
                "11 <- 4.24",
                "12 <- 3.18",
                "13 <- 4.24",
                "14 <- 4.16",
                "15 <- 3.18",
                "16 <- 4.11",
                "17 <- 3.4",
                "18 <- 2.25",
                "19 <- 3.11",
                "20 <- 4.20",
                "21 <- 2.16",
                "22 <- 4.11",
                "23 <- 2.16",
                "24 <- 4.20",
                "25 <- 4.24",
                "26 <- 2.9",
                "27 <- 2.10",
                "28 <- 4.16",
                "29 <- 1.8"
            ]
        },
        "Step 5": {
            "steps": [
                "2 * 2 = 4 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5) || 9 / 3 = 3 (left: 3 27)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (2 / 1 + 2) * 6 = 24",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 + 4 = 8 (left: 8)",
                "6 / 2 = 3 (left: 1 3 6) || 1 * 3 = 3 (left: 3 6) || 6 / 3 = 2 (left: 2)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "6 / 2 = 3 (left: 1 3 6) || 1 * 3 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 + 4 = 8 (left: 8 = 16) || 8 + 16 = 24 (left: 24) ",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "2 * 2 = 4 (left: 1 4 6) || 1 + 6 = 7 (left: 4 7)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6) || 4 / 6 = 0.6667 (left: 0.6667)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "2 * 2 = 4 (left: 4 4 6) || 4 / 4 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (2 + 2 / 1) * 6 = 24",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (2 + 2) * (2 * 6) = 24",
                "1 + 2 = 3 (left: 2 3 6) || 4 * 4 = 16 (left: || 4 + 4 = 8 (left: 8 = 16) || 16 - 8 = 8 (left: 8)",
                "2 + 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 + 2 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 / 3 = 2 (left: 2)",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (2 + 2) * (1 / 6) = 24",
                "1 + 2 = 3 (left: 2 3 6) || 6 / 2 = 3 (left: 3 6) || 6 / 3 = 2 (left: 2)",
                "2 * 2 = 4 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6) || 3 + 9 = 12 (left: 12)",
                "1 + 2 = 3 (left: 2 3 6) || 6 - 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "1 + 2 = 3 (left: 2 3 6) || 3 * 2 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)"
            ]
        },
        "Input": "1 2 2 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "7": {
        "puzzle": "1 1 10 12",
        "Step 0": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 * 10 = 10 (left: 10 1 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "1 / 1 = 1 (left: 1 10 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "1 - 1 = 0 (left: 0 10 12)",
                "10 - 1 = 9 (left: 1 9 12)",
                "10 / 1 = 10 (left: 1 10 ",
                "12 - 1 = 11 (left: 1 10 ",
                "1 + 10 = 11 (left: 11 10 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 - 1 = 0 (left: 0 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "12 - 10 = 2 (left: 1 1 2)",
                "10 + 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 10 "
            ],
            "Pruning": [],
            "Evaluation": [
                21.001,
                1.002,
                0.003,
                1.001,
                2.001,
                60.0,
                1.001,
                0.003,
                1.002,
                60.0,
                1.002,
                1.002,
                1.002,
                1.002,
                40.0,
                60.0,
                3.0,
                60.0,
                20.002,
                40.0,
                1.002,
                1.002,
                20.002,
                21.001,
                21.001,
                0.003,
                60.0,
                2.001,
                41.0,
                41.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.26",
                "2 <- 0.15",
                "3 <- 0.23",
                "4 <- 0.29",
                "5 <- 0.17",
                "6 <- 0.17",
                "7 <- 0.0",
                "8 <- 0.9",
                "9 <- 0.17",
                "10 <- 0.22",
                "11 <- 0.26",
                "12 <- 0.15",
                "13 <- 0.0",
                "14 <- 0.9",
                "15 <- 0.28",
                "16 <- 0.9",
                "17 <- 0.15",
                "18 <- 0.28",
                "19 <- INIT",
                "20 <- 0.19",
                "21 <- 0.29",
                "22 <- 0.9",
                "23 <- 0.17",
                "24 <- 0.28",
                "25 <- 0.5",
                "26 <- 0.17",
                "27 <- 0.24",
                "28 <- 0.22",
                "29 <- 0.16"
            ]
        },
        "Step 1": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "12 - 1 = 11 (left: 1 10  || 10 - 10 = 0 (left: 0)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 10  || 10 / 1 = 10 (left: 10)",
                "12 - 10 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "10 + 1 = 11 (left: 1 11 12) || 12 / 1 = 12 (left: 1 12)",
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "10 + 1 = 11 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "12 - 10 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "12 - 1 = 11 (left: 1 10  || 10 / 1 = 10 (left: 10)",
                "10 + 1 = 11 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11)",
                "12 - 10 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "10 + 1 = 11 (left: 1 11 12) || 11 - 11 = 0 (left: 0)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "12 - 1 = 11 (left: 1 10  || 1 + 10 = 11 (left: 10)",
                "10 + 1 = 11 (left: 1 11 12) || 12 / 1 = 12 (left: 11 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "12 - 10 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "12 - 1 = 11 (left: 1 10  || 10 * 1 = 10 (left: 10)",
                "12 - 10 = 2 (left: 1 2 12) || 1 / 2 = 0.5 (",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 11 2)",
                "10 + 1 = 11 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "10 + 1 = 11 (left: 1 11 12) || 12 / 1 = 12 (left: 12 12)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)",
                "1 + 10 = 11 (left: 11 10 12) || 10 + 12 = 22 (left: 11 22)"
            ],
            "Pruning": [],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                60.0,
                0.002,
                20.001,
                60.0,
                0.003,
                60.0,
                60.0,
                3.0,
                0.003,
                0.002,
                40.0,
                0.003,
                0.002,
                60.0,
                0.003,
                0.003,
                60.0,
                21.001,
                0.002,
                0.003,
                0.003,
                0.002,
                60.0,
                60.0,
                60.0,
                20.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.9",
                "1 <- 1.19",
                "2 <- 0.28",
                "3 <- 0.23",
                "4 <- 0.19",
                "5 <- 1.3",
                "6 <- 0.5",
                "7 <- 0.17",
                "8 <- 1.6",
                "9 <- 1.25",
                "10 <- 1.25",
                "11 <- 1.13",
                "12 <- 0.9",
                "13 <- 1.16",
                "14 <- 1.25",
                "15 <- 1.25",
                "16 <- 0.9",
                "17 <- 1.26",
                "18 <- 1.3",
                "19 <- 1.9",
                "20 <- 0.26",
                "21 <- 1.6",
                "22 <- 1.16",
                "23 <- 1.3",
                "24 <- 0.17",
                "25 <- 1.19",
                "26 <- 0.9",
                "27 <- 0.15",
                "28 <- 1.26",
                "29 <- 1.26"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "10 + 1 = 11 (left: 1 11 12) || 11 + 1 = 12 (left: 1 12)",
                "10 + 1 = 11 (left: 1 11 12) || 11 - 1 = 10 (left",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "12 - 10 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "10 + 1 = 11 (left: 1 11 12) || 12 - 1 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 2 11)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 - 1 = 23 (left: 1 23)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 1 = 12 (left:",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 + 1 = 25 (left: 25)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 1 = 12 (left:",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 + 1 = 25 (left: 25)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 2 11)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 2 11)",
                "12 - 1 = 11 (left: 1 10  || 1 * 10 = 10 (left: 10)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                60.0,
                1.002,
                2.001,
                60.0,
                60.0,
                20.002,
                20.002,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.0,
                0.003,
                0.001,
                0.001,
                0.001,
                0.003,
                20.001,
                21.0,
                0.002,
                60.0,
                0.003,
                41.0,
                0.003,
                1.002,
                0.002,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 1.27",
                "2 <- 2.1",
                "3 <- 2.5",
                "4 <- 1.25",
                "5 <- 1.1",
                "6 <- 1.1",
                "7 <- 2.0",
                "8 <- 2.0",
                "9 <- 1.25",
                "10 <- 2.0",
                "11 <- 0.29",
                "12 <- 1.9",
                "13 <- 1.3",
                "14 <- 0.17",
                "15 <- 1.27",
                "16 <- 1.19",
                "17 <- 2.22",
                "18 <- 1.26",
                "19 <- 0.19",
                "20 <- 2.1",
                "21 <- 0.14",
                "22 <- 2.0",
                "23 <- 2.4",
                "24 <- 2.22",
                "25 <- 1.16",
                "26 <- 1.3",
                "27 <- 2.4",
                "28 <- 0.18",
                "29 <- 2.20"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (12 - 10) * 12 = 24",
                "10 + 1 = 11 (left: 1 11 12) || 12 / 1 = 12 (left: 12 12) || 12 + 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((1 + 1) + 10) + 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 + 1 = 11 (left: 11)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (1 * 10) + (12 - 1) = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (12 - 10) * 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (12 - 10) * 12 = 24",
                "12 - 1 = 11 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 + 1 = 25 (left: 25)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 1 11)",
                "10 + 1 = 11 (left: 1 11 12) || 12 / 1 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 + 1 = 25 (left: 25) || 25 + 8 = 33 (left: 8)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "10 / 1 = 10 (left: 1 10  || 10 / 1 = 10 (left: 10)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (12 - 10) * 1 * 24 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 + 1 = 25 (left: 25) || 25 + 8 = 33 (left: 8)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "10 + 1 = 11 (left: 1 11 12) || 12 - 1 = 11 (left: 11 11)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 1 = 12 (left: || 12 * 1 = 12 (left: 12)"
            ]
        },
        "Input": "1 1 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "8": {
        "puzzle": "2 2 10 10",
        "Step 0": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 10 8)",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 10 5)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 ",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)"
            ],
            "Pruning": [],
            "Evaluation": [
                20.002,
                1.002,
                0.003,
                2.001,
                0.003,
                20.002,
                1.002,
                0.003,
                0.003,
                3.0,
                21.001,
                1.002,
                21.001,
                0.003,
                1.002,
                40.001,
                0.002,
                20.002,
                2.001,
                21.001,
                2.001,
                2.001,
                22.0,
                20.002,
                0.002,
                1.002,
                0.003,
                0.001,
                2.001,
                21.001
            ],
            "Resampling": [
                "0 <- 0.23",
                "1 <- 0.29",
                "2 <- 0.23",
                "3 <- 0.15",
                "4 <- 0.5",
                "5 <- INIT",
                "6 <- 0.12",
                "7 <- 0.12",
                "8 <- 0.15",
                "9 <- 0.15",
                "10 <- 0.15",
                "11 <- 0.15",
                "12 <- 0.21",
                "13 <- 0.19",
                "14 <- 0.17",
                "15 <- 0.12",
                "16 <- 0.9",
                "17 <- 0.29",
                "18 <- 0.10",
                "19 <- 0.5",
                "20 <- INIT",
                "21 <- 0.29",
                "22 <- INIT",
                "23 <- 0.10",
                "24 <- INIT",
                "25 <- 0.5",
                "26 <- 0.12",
                "27 <- 0.23",
                "28 <- 0.10",
                "29 <- 0.29"
            ]
        },
        "Step 1": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10)",
                "2 * 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 2 + 5 = 7 (left: 7 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 * 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 2 = 8 (left: 2 8)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 2 = 8 (left: 2 8 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 - 2 = 8 (left: 2 8 10) || 10 - 2 = 8 (left: 8 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10)",
                "10 / 2 = 5 (left: 2 10 5) || 2 + 10 = 12 (left: 5 12)",
                "2 * 2 = 4 (left: 4 10 10) || 10 / 4 = 2",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "2 * 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 * 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10)",
                "10 / 2 = 5 (left: 2 5 ",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 * 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5)",
                "10 / 2 = 5 (left: 2 5 10) || Input: 3 3 9",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "2 * 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)"
            ],
            "Pruning": [],
            "Evaluation": [
                20.002,
                2.001,
                1.002,
                1.002,
                2.001,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                3.0,
                0.003,
                1.001,
                0.003,
                2.0,
                0.003,
                1.001,
                0.003,
                3.0,
                0.002,
                2.001,
                0.002,
                60.0,
                1.001,
                2.001,
                0.003,
                60.0,
                0.003,
                0.002,
                2.001
            ],
            "Resampling": [
                "0 <- 0.15",
                "1 <- 0.23",
                "2 <- 1.22",
                "3 <- 0.15",
                "4 <- 0.17",
                "5 <- 1.22",
                "6 <- 1.22",
                "7 <- 1.26",
                "8 <- 0.12",
                "9 <- INIT",
                "10 <- 1.26",
                "11 <- 0.23",
                "12 <- 1.26",
                "13 <- 1.26",
                "14 <- 1.22",
                "15 <- 1.26",
                "16 <- 1.18",
                "17 <- 1.22",
                "18 <- 1.0",
                "19 <- 0.5",
                "20 <- 0.22",
                "21 <- 0.29",
                "22 <- 0.22",
                "23 <- 1.26",
                "24 <- 0.12",
                "25 <- 1.0",
                "26 <- 1.22",
                "27 <- 1.14",
                "28 <- 1.26",
                "29 <- 1.26"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 2 = 5 (left: 5 10)",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 ",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "10 / 2 = 5 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 * 5 = 10 (left: 10)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 * 5 = 10 (left: 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 2.5 + 10 = 12.5 (left: 10 12.5)",
                "10 / 2 = 5 (left: 2 5  || 2 - 5 = -3 (left: -3)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 + 10 = 20 (left: 20)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "2 * 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left",
                "2 + 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 - 2 = 3 (left: 3)",
                "10 / 2 = 5 (left: 2 5 10) || 3 + 6 = 9 (left: 9)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 + 10 = 20",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 - 2 = 3 (left: 3)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 * 5 = 10 (left: 10)"
            ],
            "Pruning": [],
            "Evaluation": [
                2.001,
                0.001,
                0.002,
                1.001,
                3.0,
                0.0,
                0.001,
                0.001,
                0.001,
                2.001,
                0.003,
                0.002,
                0.002,
                0.001,
                0.0,
                0.001,
                1.002,
                0.002,
                0.003,
                20.002,
                1.001,
                0.0,
                0.003,
                0.0,
                0.003,
                0.003,
                0.002,
                40.0,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 2.19",
                "1 <- 1.14",
                "2 <- 2.27",
                "3 <- 2.27",
                "4 <- 0.22",
                "5 <- 1.22",
                "6 <- 1.26",
                "7 <- 0.15",
                "8 <- 1.26",
                "9 <- 0.15",
                "10 <- 1.22",
                "11 <- 0.23",
                "12 <- INIT",
                "13 <- 2.27",
                "14 <- 1.26",
                "15 <- 0.17",
                "16 <- 1.22",
                "17 <- 0.15",
                "18 <- 1.26",
                "19 <- 1.26",
                "20 <- 1.14",
                "21 <- 0.10",
                "22 <- INIT",
                "23 <- 2.19",
                "24 <- 0.12",
                "25 <- 1.20",
                "26 <- 2.19",
                "27 <- 0.19",
                "28 <- 0.20",
                "29 <- 1.26"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 14 - 10 = 4 (left: 10 4)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 2.5 + 10 = 12.5 (left: 10 12.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 * 5 = 10 (left: 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "10 / 2 = 5 (left: 2 5 10) || 2 * 5 = 10 (left: 10 10)",
                "10 - 2 = 8 (left: 2 10 8)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 * 10 = 40 (left: 40)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 * 5 = 10 (left: 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 3 + 9 = 12 (left: 12)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 * 10 = 100 (left: 14 100)",
                "10 / 2 = 5 (left: 2 5 10) || 2 * 5 = 10 (left: 10 10)",
                "10 - 2 = 8 (left: 2 8 10) || 8 - 2 = 6 (left: 2 6)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 * 10 = 100 (left: 100 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || Possible",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || Input: 3 9"
            ],
            "Pruning": [
                "3<-2.27",
                "13<-2.9"
            ],
            "Evaluation": [
                1.002,
                1.001,
                0.002,
                41.0,
                0.0,
                0.001,
                0.002,
                1.002,
                0.002,
                2.001,
                0.0,
                0.003,
                1.002,
                20.001,
                0.003,
                20.002,
                0.003,
                1.002,
                0.002,
                0.0,
                21.001,
                2.001,
                1.002,
                0.002,
                1.001,
                0.002,
                1.001,
                3.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.15",
                "2 <- 2.19",
                "3 <- 3.13",
                "4 <- 0.12",
                "5 <- 3.3",
                "6 <- 0.12",
                "7 <- 0.22",
                "8 <- INIT",
                "9 <- 3.15",
                "10 <- 3.3",
                "11 <- 3.15",
                "12 <- 1.0",
                "13 <- INIT",
                "14 <- 1.22",
                "15 <- 3.3",
                "16 <- 1.26",
                "17 <- 1.0",
                "18 <- 0.3",
                "19 <- 2.27",
                "20 <- 3.15",
                "21 <- 0.19",
                "22 <- 2.27",
                "23 <- 2.19",
                "24 <- 0.17",
                "25 <- 0.22",
                "26 <- 0.28",
                "27 <- 3.13",
                "28 <- 3.3",
                "29 <- 0.22"
            ]
        },
        "Step 4": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 3 + 9 = 12 (left: 12 27)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 - 10 = 0 (left: 0 14)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 * 10 = 100 (left: 14 100)",
                "2 * 2 = 4 (left: 4 10 10) || 10 - 4 = 6",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 * 10 = 40 (left: 40)",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 2 = 5 (left: 5 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 14 / 10 = 1.4 (",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 - 10 = 0 (left: 0 14)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 * 10 = 100 (left: 100)",
                "10 / 2 = 5 (left: 2 5 ",
                "10 / 2 = 5 (left: 2 5  || Input: 10 3",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 + 4 = 14 (left: 4 14)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 - 5 = -3 (left: -3)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 + 10 = 20",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 2 = 5 (left: 5 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || Input: 3 9 27",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 / 10 = 1 (left: 1 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6 10)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 * 10 = 100 (left: 100 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || Input: 3 6 9",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)"
            ],
            "Pruning": [
                "5<-3.3",
                "10<-3.20"
            ],
            "Evaluation": [
                0.003,
                0.0,
                1.002,
                0.003,
                0.0,
                0.001,
                0.003,
                2.001,
                0.003,
                0.003,
                40.0,
                0.0,
                0.003,
                60.0,
                0.003,
                0.003,
                0.001,
                0.003,
                0.002,
                0.003,
                1.0,
                1.0,
                0.002,
                1.0,
                3.0,
                1.002,
                1.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 2.27",
                "2 <- 3.20",
                "3 <- 0.29",
                "4 <- 3.15",
                "5 <- 4.13",
                "6 <- 3.3",
                "7 <- 0.29",
                "8 <- 4.26",
                "9 <- 4.13",
                "10 <- 4.10",
                "11 <- 0.5",
                "12 <- 4.13",
                "13 <- 0.12",
                "14 <- 3.20",
                "15 <- 2.27",
                "16 <- 1.26",
                "17 <- 4.13",
                "18 <- 4.13",
                "19 <- 4.10",
                "20 <- 4.13",
                "21 <- 3.3",
                "22 <- 4.10",
                "23 <- 4.10",
                "24 <- 0.17",
                "25 <- 0.15",
                "26 <- 3.13",
                "27 <- 4.13",
                "28 <- 4.13",
                "29 <- 4.10"
            ]
        },
        "Step 5": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 / 4 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || Input: 3 9 27",
                "2 * 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 40)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 + 10 = 20 (left: 14 20)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 / 4 = 2.5 (left: 2.5 10)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 + 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40) || 10 * 40 = 400 (left: 400)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 * 10 = ",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 2 = 5 (left: 5 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || Possible next steps:",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 * 10 = ",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "10 / 2 = 5 (left: 2 5  || 2 - 5 = -3 (left: -3)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6)",
                "10 / 2 = 5 (left: 2 5  || 7 - 3 = 4 (left: 4)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || Possible next steps:",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 3 + 9 = 12 (left: 9 12 27)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "2 * 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "10 / 2 = 5 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14)"
            ],
            "Pruning": [
                "1<-1.22",
                "19<-3.15"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                0.001,
                0.003,
                0.0,
                0.002,
                20.002,
                0.002,
                0.002,
                20.002,
                0.003,
                0.001,
                0.002,
                0.003,
                0.003,
                0.001,
                0.0,
                0.001,
                0.003,
                0.002,
                0.003,
                1.002,
                60.0,
                1.0,
                1.002,
                0.002,
                0.001,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 4.25",
                "1 <- 3.3",
                "2 <- 5.1",
                "3 <- 5.1",
                "4 <- 3.3",
                "5 <- 5.1",
                "6 <- 5.29",
                "7 <- 5.1",
                "8 <- 3.3",
                "9 <- 1.1",
                "10 <- 5.1",
                "11 <- 0.5",
                "12 <- 0.15",
                "13 <- 2.27",
                "14 <- 5.1",
                "15 <- 5.23",
                "16 <- 5.23",
                "17 <- 4.20",
                "18 <- 5.23",
                "19 <- 1.22",
                "20 <- 0.15",
                "21 <- 5.10",
                "22 <- 5.23",
                "23 <- 5.23",
                "24 <- 5.23",
                "25 <- 2.19",
                "26 <- 5.23",
                "27 <- 2.19",
                "28 <- 4.10",
                "29 <- 4.7"
            ]
        },
        "Step 6": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || Possible next steps:",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6)",
                "10 / 2 = 5 (left: 2 5  || 5 * 10 = 50",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 6 * 12 = 72",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 14 24)",
                "10 / 2 = 5 (left: 2 5  || 9 - 3 = 6 (left: 6)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || Possible next steps:",
                "2 * 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 2.5 * 10 = 25 (left: 10 25)",
                "10 / 2 = 5 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "2 * 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 / 4 = 2.5 (left: 2.5)",
                "10 / 2 = 5 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 / 10 = 1 (left: 1 14) || 1 + 14 = 15 (left: 15)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 * 10 =  || 4 * 10 = 40",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 - 14 = -4 (left: -4)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 / 10 = 1 (left: 1 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 / 10 = 1.4 (left: 1.4)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 / 10 = 1 (left: 1 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10) || 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10 10)"
            ],
            "Pruning": [
                "1<-1.22",
                "13<-5.23",
                "15<-5.1",
                "16<-5.23",
                "17<-5.29",
                "18<-5.1",
                "22<-5.1",
                "23<-1.22",
                "24<-4.10",
                "26<-5.1",
                "28<-5.10"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.001,
                0.003,
                0.0,
                0.003,
                0.002,
                0.003,
                0.003,
                0.002,
                1.002,
                0.001,
                60.0,
                0.002,
                60.0,
                40.0,
                60.0,
                20.0,
                0.003,
                0.0,
                0.003,
                60.0,
                60.0,
                21.001,
                2.001,
                60.0,
                20.001,
                20.002,
                2.001
            ],
            "Resampling": [
                "0 <- 5.7",
                "1 <- 3.24",
                "2 <- 3.3",
                "3 <- 6.15",
                "4 <- 5.10",
                "5 <- 6.16",
                "6 <- 6.27",
                "7 <- 5.29",
                "8 <- 0.19",
                "9 <- 6.16",
                "10 <- 6.26",
                "11 <- 6.23",
                "12 <- 6.23",
                "13 <- 3.12",
                "14 <- 5.29",
                "15 <- 4.13",
                "16 <- 0.15",
                "17 <- 6.15",
                "18 <- 4.13",
                "19 <- 6.18",
                "20 <- 6.13",
                "21 <- 6.24",
                "22 <- 6.17",
                "23 <- 6.27",
                "24 <- 6.17",
                "25 <- 6.18",
                "26 <- 5.23",
                "27 <- 5.29",
                "28 <- 6.23",
                "29 <- 6.16"
            ]
        },
        "Step 7": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 14 * 10 = ",
                "10 / 2 = 5 (left: 2 5 10) || 2 * 5 = 10 (left: 10 10) || 10 * 10 = 100 (left: 100)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 5 * 7 = 35 (",
                "10 / 2 = 5 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 * 10 =  || 4 * 10 = 40",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 / 10 = 1 (left: 1 14) || 1 * 14 = 14 (left: 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "2 + 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "10 / 2 = 5 (left: 2 5  || 3 + 9 = 12 (left: 12 15)",
                "10 / 2 = 5 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "10 - 2 = 8 (left: 2 10 8) || 8 / 2 = 4 (left:",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 0.71428571429 + 14 = 14.714285714",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "10 / 2 = 5 (left: 2 5  || 6 + 3 = 9 (left: 9)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 - 10 = 4 (left: 4)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 4 6)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 - 10 = 4 (left: 4 14)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 / 10 = 1 (left: 1 14) || 1 * 14 = 14 (left: 14)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 - 10 = 4 (left: 4 14)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 14 24)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 / 10 = 1.4 (left: 1.4 14)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 - 10 = 4 (left: 4 14)"
            ],
            "Pruning": [
                "5<-6.15",
                "6<-6.22",
                "7<-0.0",
                "9<-5.29",
                "20<-5.1",
                "23<-4.10"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                60.0,
                20.0,
                20.001,
                0.003,
                40.0,
                0.003,
                20.001,
                0.001,
                0.001,
                0.003,
                0.001,
                0.003,
                0.001,
                0.002,
                0.001,
                20.0,
                60.0,
                0.002,
                0.002,
                1.002,
                0.002,
                0.003,
                0.003,
                0.001,
                1.001
            ],
            "Resampling": [
                "0 <- 6.13",
                "1 <- 3.1",
                "2 <- 6.15",
                "3 <- 5.23",
                "4 <- 6.15",
                "5 <- 5.23",
                "6 <- 7.5",
                "7 <- 7.7",
                "8 <- 6.23",
                "9 <- 6.13",
                "10 <- 6.13",
                "11 <- 6.23",
                "12 <- 5.10",
                "13 <- 6.26",
                "14 <- 6.23",
                "15 <- 7.5",
                "16 <- 7.6",
                "17 <- 5.23",
                "18 <- 5.1",
                "19 <- 7.21",
                "20 <- 6.13",
                "21 <- 5.1",
                "22 <- 7.9",
                "23 <- 5.1",
                "24 <- 6.22",
                "25 <- 5.1",
                "26 <- 6.24",
                "27 <- 6.22",
                "28 <- 5.29",
                "29 <- 7.21"
            ]
        },
        "Step 8": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 14 140)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 2.5 + 10 = 12.5 (left: 10 12.5) || 10 + 12.5 = 22.5 (left: 22.5)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3 5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 / 2 = 7 (left: 10 7)",
                "10 / 2 = 5 (left: 2 5  || 3 + 9 = 12 (left: 9 12)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 / 10 = 1.4 (left: 1.4 14)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 5 7)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 / 10 = 1.4 (left: 1.4)",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 * 10 =  || 4 * 10 = 40",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 5 7)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 5 7)",
                "10 / 2 = 5 (left: 2 5  || 3 + 9 = 12 (left: 9 12)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 5 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24)",
                "10 / 2 = 5 (left: 2 5  || 3 * 9 = 27",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 4 6) || 3 + 9 = 12 (left: 12 5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "10 / 2 = 5 (left: 2 5  || 3 + 9 = 12 (left: 12)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 - 10 = 4 (left: 4)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "10 / 2 = 5 (left: 2 5  || 2 * 5 = 10 (left: 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 3 + 9 = 12 (left: 12 27)",
                "10 / 2 = 5 (left: 2 5  || Input: 7 9 3",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 4 6) || 4 / 6 = 0.6667 (left: 0.6667)"
            ],
            "Pruning": [
                "1<-7.7",
                "9<-6.15",
                "10<-6.26",
                "17<-3.15",
                "20<-6.27",
                "22<-5.1",
                "28<-6.26",
                "29<-6.23"
            ],
            "Evaluation": [
                0.002,
                40.001,
                0.002,
                0.002,
                0.002,
                1.002,
                0.003,
                20.002,
                0.002,
                60.0,
                40.001,
                0.001,
                0.003,
                20.001,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                40.0,
                0.001,
                0.0,
                0.003,
                0.003,
                0.003,
                40.0,
                40.0
            ],
            "Resampling": [
                "0 <- 8.7",
                "1 <- 8.22",
                "2 <- 8.1",
                "3 <- 8.13",
                "4 <- 6.17",
                "5 <- 6.15",
                "6 <- 8.1",
                "7 <- 8.7",
                "8 <- 8.1",
                "9 <- 8.9",
                "10 <- 6.16",
                "11 <- 6.15",
                "12 <- 5.1",
                "13 <- 8.10",
                "14 <- 6.26",
                "15 <- 6.18",
                "16 <- 6.28",
                "17 <- 7.21",
                "18 <- 8.13",
                "19 <- 5.1",
                "20 <- 8.22",
                "21 <- 4.24",
                "22 <- 8.10",
                "23 <- 6.13",
                "24 <- 6.17",
                "25 <- 8.29",
                "26 <- 5.29",
                "27 <- 6.13",
                "28 <- 8.22",
                "29 <- 3.3"
            ]
        },
        "Step 9": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 + 10 = 20 (left: 20 14)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "2 + 2 = 4 (left: 4 10 10) || Input:",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 5 7) || 5 * 7 = 35 (left: 35)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 / 10 = 1.4 (left: 1.4)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7) ",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 + 10 = 20 (left: 14 20)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 5 7)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 14 24)",
                "10 / 2 = 5 (left: 2 5  || 9 - 3 = 6 (left: 3",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 7)",
                "10 / 2 = 5 (left: 2 5  || Possible next steps:",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5 5)",
                "10 / 2 = 5 (left: 2 5  || 5 - 2 = 3 (left: 3)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 * 10 =  || 4 * 10 = 40",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "10 / 2 = 5 (left: 2 5  || 2 + 5 = 7 (left: 5 7) || 5 - 7 = -2 (left: -2)",
                "10 / 2 = 5 (left: 2 5  || 2 - 5 = -3 (left: -3)",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10)",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5 5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 - 10 = 4 (left: 4)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 - 10 = 4",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2 2.5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 140)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 10 14) || 14 - 10 = 4 (left: 4)",
                "10 / 2 = 5 (left: 2 5  || 5 / 2 = 2.5 (left: 2.5 5)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 / 2.5 = 4 (left: 4 10) || 3 + 9 = 12 (left: 12 27)"
            ],
            "Pruning": [
                "4<-8.7",
                "17<-5.29",
                "23<-8.29",
                "26<-7.9",
                "27<-8.22"
            ]
        },
        "Input": "2 2 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "9": {
        "puzzle": "1 1 1 12",
        "Step 0": {
            "steps": [
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 / 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 - 1 = 0 (left: 0 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 12 1)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 - 1 = 0 (left: 0 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 / 1 = 12 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 2 12)"
            ],
            "Pruning": [],
            "Evaluation": [
                1.002,
                60.0,
                60.0,
                1.002,
                60.0,
                41.0,
                60.0,
                0.003,
                41.0,
                1.002,
                60.0,
                1.002,
                0.003,
                21.001,
                60.0,
                21.001,
                1.002,
                1.001,
                60.0,
                40.001,
                60.0,
                0.003,
                0.003,
                21.001,
                40.0,
                21.001,
                40.001,
                60.0,
                40.0,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.14",
                "2 <- 0.14",
                "3 <- 0.2",
                "4 <- 0.2",
                "5 <- 0.4",
                "6 <- 0.10",
                "7 <- 0.5",
                "8 <- 0.1",
                "9 <- 0.8",
                "10 <- 0.4",
                "11 <- 0.27",
                "12 <- 0.29",
                "13 <- 0.1",
                "14 <- 0.20",
                "15 <- 0.18",
                "16 <- 0.28",
                "17 <- 0.20",
                "18 <- 0.18",
                "19 <- 0.20",
                "20 <- 0.10",
                "21 <- 0.20",
                "22 <- 0.26",
                "23 <- 0.14",
                "24 <- 0.29",
                "25 <- 0.26",
                "26 <- 0.29",
                "27 <- 0.4",
                "28 <- 0.15",
                "29 <- 0.29"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 / 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "12 / 1 = 12 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12) || 1 / 1 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14)",
                "1 * 1 = 1 (left: 1 1 12) || 3 + 3 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left:",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                0.002,
                0.003,
                60.0,
                20.002,
                0.002,
                40.0,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                0.002,
                60.0,
                0.001,
                0.001,
                1.002,
                20.001,
                20.002,
                60.0,
                1.0,
                60.0,
                2.0,
                60.0,
                60.0,
                21.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.4",
                "2 <- 1.5",
                "3 <- 0.8",
                "4 <- 1.10",
                "5 <- 0.6",
                "6 <- 1.11",
                "7 <- 0.20",
                "8 <- 0.2",
                "9 <- 1.1",
                "10 <- 1.20",
                "11 <- 1.22",
                "12 <- 0.6",
                "13 <- 0.27",
                "14 <- 1.20",
                "15 <- 1.0",
                "16 <- 1.2",
                "17 <- 0.28",
                "18 <- 1.2",
                "19 <- 1.26",
                "20 <- 1.10",
                "21 <- 0.18",
                "22 <- 1.24",
                "23 <- 1.11",
                "24 <- 0.24",
                "25 <- 1.8",
                "26 <- 0.20",
                "27 <- 1.16",
                "28 <- 1.5",
                "29 <- 1.22"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 * 2 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 1 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14) || 1 + 14 = 15 (left: 14)",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 1 12) || Input: 7 3 1 2",
                "1 + 1 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14) || 1 + 14 = 15 (left: 15)",
                "1 + 1 = 2 (left: 2 1 12) || 2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "12 / 1 = 12 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 - 1 = 23 (left: 1 23)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 1 12) || Possible next steps:",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11)",
                "12 / 1 = 12 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)"
            ],
            "Pruning": [],
            "Evaluation": [
                60.0,
                60.0,
                0.002,
                21.0,
                60.0,
                60.0,
                0.001,
                0.002,
                40.001,
                0.003,
                0.001,
                0.003,
                60.0,
                0.003,
                0.002,
                60.0,
                0.003,
                60.0,
                0.002,
                21.001,
                0.002,
                0.003,
                60.0,
                60.0,
                60.0,
                0.002,
                20.0,
                60.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.19",
                "1 <- 2.27",
                "2 <- 1.22",
                "3 <- 1.5",
                "4 <- 2.15",
                "5 <- 1.8",
                "6 <- 2.27",
                "7 <- 2.24",
                "8 <- 1.0",
                "9 <- 1.11",
                "10 <- 1.0",
                "11 <- 1.8",
                "12 <- 1.11",
                "13 <- 2.23",
                "14 <- 0.20",
                "15 <- 0.29",
                "16 <- 0.25",
                "17 <- 0.18",
                "18 <- 1.16",
                "19 <- 1.8",
                "20 <- 0.20",
                "21 <- 2.12",
                "22 <- 2.1",
                "23 <- 2.1",
                "24 <- 2.4",
                "25 <- 2.12",
                "26 <- 1.13",
                "27 <- 0.27",
                "28 <- 0.27",
                "29 <- 1.10"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 - 1 = 23 (left: 1 23) || 1 + 23 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (12 / 1) * (1 + 1) = 24",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 1 12) || 2 * 1 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "12 / 1 = 12 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: ((1 + 1) / 12) * 12 = 24",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 1 12) || 12 / 2 = 6 (left: 6 12)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 12) || 2 - 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 * 1) + (1 + 12) = 24",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "1 - 1 = 0 (left: 0 1 12) || 1 * 12 = 12 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11)",
                "12 / 1 = 12 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12) || 2 + 12 = 14",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: ((1 + 1) * 12) / 1 = 24",
                "1 + 1 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "1 * 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12) || 1 - 1 = 0 (left: 0 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)"
            ]
        },
        "Input": "1 1 1 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 1601778,
        "output_tokens": 180717.85,
        "total_cost": 1.071965775
    }
}