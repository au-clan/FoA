{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 =  -> 21 / 6 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 =  -> 21 / 6 = 3 -> 21 * 6 = 126",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "Not enough numbers provided for further calculations."
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> Not enough numbers provided for further calculations. -> Please provide more numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> Not enough numbers provided for further calculations. -> Please provide more numbers to continue with the calculations. -> - Multiply two numbers",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> Not enough numbers provided for further calculations. -> Please provide more numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 2 64 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 - 8 = 2 (left: 8)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "The input is not valid, please enter a valid number to continue the calculations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "21 / 2 = 10.5"
                }
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 * 2 = 42 (left: 2 10.5 42)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 * 2 = 42 (left: 2 10.5 42) -> 10.5 + 2 = 12.5 (left: 12.5 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 * 2 = 42 (left: 2 10.5 42) -> 10.5 + 2 = 12.5 (left: 12.5 42) -> 12.5 + 42 = 54.5 (left: 42 54.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 = 1"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 / 1 = 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 + 1 = 4 (left: 4 = 1) -> 4 / 1 = 4 -> 4 * 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "9 11 12"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 9 * 11 = 99 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 2 = 12 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2) -> The input is not valid, please enter a valid number to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps with the input 2.5."
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> Possible next steps: -> 14 + 2 = 16 (left: 8 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> Possible next steps: -> 14 + 2 = 16 (left: 8 8 16) -> 8 - 8 = 0 (left: 0 16)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No more possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "Not enough numbers provided for further calculations."
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> Not enough numbers provided for further calculations. -> Please provide at least two numbers to continue calculations.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> Not enough numbers provided for further calculations. -> Please provide at least two numbers to continue calculations. -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "21 * 6 = 126"
                }
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 =  -> 21 / 6 = 3 -> 21 * 6 = 126 -> 21 + 6 = 27 (left: 27 * 6 = 126)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> Possible next steps: -> 14 + 2 = 16 (left: 8 8 16) -> 8 - 8 = 0 (left: 0 16) -> 5 * 7 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> Possible next steps: -> 14 + 2 = 16 (left: 8 8 16) -> 8 - 8 = 0 (left: 0 16) -> 5 * 7 = -> 5 * 7 = 35",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 12 = 21 (left: 5 6 21)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 + 6 = 10"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 * 5 = 15 (left: -> 4 + 6 -> 4 + 6 = 10 -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 * 5 = 15 (left: -> 4 + 6 -> 4 + 6 = 10 -> 6 + 4 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 11 12"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 64 14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> Not enough numbers provided for further calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "There are no possible next steps with the input 2.5."
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> 2.5 * 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "5 6 3"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 5 - 3 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> Possible next steps: -> 14 + 2 = 16 (left: 8 8 16) -> 8 - 8 = 0 (left: 0 16) -> 16 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "21 / 2 = 10.5"
                }
            },
            "Step 8": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 / 2 = 10.5 -> 21 * 2 = 42 (left: 10.5 42)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 5 6 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 / 2 = 10.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1 + 1 = 2"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 2 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 2 1) -> 1 + 2 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 2 1) -> 1 + 2 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "The input is not valid, please enter a valid number to continue the calculations."
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 / (12 - 9)) * 5 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "Not enough numbers provided for further calculations."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 * 5 = 15 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 * 5 = 15 (left: -> 4 + 6",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 * 5 = 15 (left: -> 4 + 6 -> 4 + 6 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There is only one possible next step:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0 16"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> Possible next steps: -> 14 + 2 = 16 (left: 8 8 16) -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5. -> Possible next steps: -> 14 + 2 = 16 (left: 8 8 16) -> 8 - 8 = 0 (left: 0 16) -> 16 / 0 = undefined (left: 0 16) -> 0 * 16 = 0 (left: 16)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "3 6 12"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "42 54.5"
                }
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11) -> 5.4 / 11 = 0.49090909090909090909090909090909 (left: 0.49090909090909090909090909090909)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11) -> 5.4 / 11 = 0.49090909090909090909090909090909 (left: 0.49090909090909090909090909090909) -> 0.49090909090909090909090909090909 * 2 = 0.98181818181818181818181818181818",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2 5) -> 5 / 2 = 2.5 (left: 2.5 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2 5) -> 5 / 2 = 2.5 (left: 2.5 5) -> 5 / 2.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5 3"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "None, as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> Input: 3 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> Input: 3 4 -> Input: 5 10",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> Input: 3 4 -> Input: 5 10 -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5) -> 5 * 15 = 75 (left: 5 75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5) -> 5 * 15 = 75 (left: 5 75) -> 5 + 75 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "5 10 5"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 - 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 - 5 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "53 + 2 = 55"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "10 11 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 - 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 - 5 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 15"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 + 15 = 26 (left: 10 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5 3"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 * 19 = 323 (left: 323) -> 3 + 2 = 5 (left: 5 3) -> 3 / 5 =",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 * 19 = 323 (left: 323)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 * 19 = 323 (left: 323) -> 3 + 2 = 5 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 11 54"
                }
            },
            "Step 5": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44) -> 44 / 11 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 - 10 = -5 (left: -5 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 - 10 = -5 (left: -5 5) -> -5 - 5 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5 10 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2 5) -> 5 * 2 = 10 (left: 10 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2 5) -> 5 * 2 = 10 (left: 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5 3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 - 10 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no further possible next steps."
                }
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> Possible next steps: -> No further possible next steps. -> There are no further possible next steps. -> There are no further possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (left: 1 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (left: 1 54) -> 54 - 1 = 53 (left: 53)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (left: 1 54) -> 54 - 1 = 53 (left: 53) -> 53 + 2 = 55",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5) -> 15 - 5 = 10 (left: 10 15 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5) -> 15 - 5 = 10 (left: 10 15 5) -> 15 / 5 = 3 (left: 10 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "0.49090909090909090909090909090909 * 2 = 0.98181818181818181818181818181818"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11) -> 5.4 * 11 = 59.4 (left: 59.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11) -> 5.4 * 11 = 59.4 (left: 59.4) -> There are no possible next steps for the number 59.4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5) -> 15 - 5 = 10 (left: 10 15 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15 5) -> 15 - 5 = 10 (left: 10 15 5) -> 10 / 5 = 2 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 10 / 5 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no further possible next steps."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 + 10 = 15 (left: 5 15) -> 15 + 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "5 10 5"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 5 50)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 * 10 = 50 (left: 5 50) -> 5 + 50 = 55 (left: 55)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "5 3"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 =  -> 54 - 11 = 43",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 =  -> 54 - 11 = 43 -> 54 * 11 = 594",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> Possible next steps: -> No further possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> Possible next steps: -> No further possible next steps. -> There are no further possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> Input: 3 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> Input: 3 9 -> 3 * 9 = 27 (left: 9) ",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "53 + 2 = 55"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 =  -> 11 / 6 = 1.83333333333",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 =  -> 11 / 6 = 1.83333333333 -> 11 - 6 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "10 11 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 / 15 = 0.733 (left: 10 0.733)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 / 15 = 0.733 (left: 10 0.733) -> 10 - 0.733 = 9.267 (left: 0.733 9.267)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 / 15 = 0.733 (left: 10 0.733) -> 10 - 0.733 = 9.267 (left: 0.733 9.267) -> 0.733 * 9.267 = 6.792 (left: 6.792)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "53 + 2 = 55"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5 10 5"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15. -> 5 + 5 = 10 (left: 5 10 5) -> 5 / 10 = 0.5 (left: 0.5 5) -> 5 / 0.5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "5 3"
                }
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> Input: 5 10 15 -> 10 - 5 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> Input: 5 10 15 -> 10 - 5 = 5 (left: 5 15) -> 15 - 5 = 10 (left: 10)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 2 = 1.67 (left: 1.67 1.835)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 - 2 = 1.67 (left: 1.67 1.835) -> 1.67 + 1.835 = 3.505 (left: 3.505)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "5 8 11"
                }
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16) -> 16 / 16 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 8 11"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67) -> 5.67 / 1.835 = 3.09069 (left: 3.09069)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 7 "
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 2 7  -> 7 - 2 = 5 (left: 5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 11 / 1.6 = 6.875 (left: 6.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 / 5 = 1.6 (left: 1.6 11) -> 11 / 1.6 = 6.875 (left: 6.875) -> There are no possible next steps for the input 6.875 as there are no other numbers provided to perform operations with."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128) -> 1 + 2 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 143 / 1 = 143 (left: 143)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 + 2 = 3.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 / 2 = 1.835 (left: 1.835 1.835)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 / 2 = 1.835 (left: 1.835 1.835) -> 1.835 + 1.835 = 3.67",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 3.67 / 2 = 1.835 (left: 1.835 1.835) -> 1.835 + 1.835 = 3.67 -> 1.835 / 1.835 = 1"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 / 2 = 5.5 (left: 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((2 * 4) + 5) + 11 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> No possible next steps as the input is only one number."
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 3.67 1.835"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 (left: 2 3.67 1.835) -> 2 + 3.67 = 5.67 (left: 1.835 5.67) -> 1.835 * 5.67 = 10.41145 (left: 10.41145)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. If you provide more numbers, I can suggest possible calculations to reach a target number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 11 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 11 40) -> 11 + 40 = 51 (left: 51)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 * 8 = 40 (left: 11 40) -> 11 + 40 = 51 (left: 51) -> 5 + 1 = 6"
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 - 10 = 0 (left: 0) -> No possible next steps with just the number 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 5 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 8 - 1 = 7 (left: 5 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 8 - 1 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 8 - 1 = 7 (left: 5 7) -> 5 - 7 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> Input: 1 2 3 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> Input: 1 2 3 4 -> 4 - 1 = 3 (left: 2 3 ",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> There are no possible next steps with the input of 0.1.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> There are no possible next steps with the input of 0.1. -> There are no possible next steps with the input of 0.1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no more possible next steps with the given numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps for the input 3."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72) -> 7 + 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 5 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 8 = 80 (left: 8 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 8 = 80 (left: 8 80) -> 8 * 10 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no more possible next steps with the given numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10) -> 0 * 10 = 0 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "Input: 4 2 1"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 4 2 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 + 0.125 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10) -> ",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "No possible next steps with just the number 0."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with. -> N/A",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1.125 + 0.125 = "
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 5 8"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10) -> 0 * 10 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "1.125 + 0.125 = "
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers. -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no more possible next steps with the given numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 3 + 5 = 8 (left: 8 9 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 3 + 5 = 8 (left: 8 9 13) -> 13 - 9 = 4 (left: 8 4)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 3 = 12 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 3 = 12 (left: 3) -> There are no possible next steps for the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 2 = 20 (left: 20) -> 20 + 2 = 22 (left: 22",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 3."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "Input: 4 2 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 7": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20 -> 20 - 10 = 10 (left: 10 10 10) -> 10 - 10 = 0 (left: 0 10) -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "10 10 10"
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 * 5 = 10 (left: 4 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 * 5 = 10 (left: 4 10) -> 3 * 7 = 21 (left: 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 * 5 = 10 (left: 4 10) -> 3 * 7 = 21 (left: 5 -> There are no possible next steps with just one number provided. Additional numbers are needed to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed.",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 1 + 2 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 1 + 2 = 3 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 1 + 2 = 3 (left: 3 5) -> 3 * 5 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 2 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 * 5 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6) -> 8 / 1.6 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> Input: 5 5 -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> Input: 5 5 -> 5 + 5 = 10 (left: 10) -> 10 + 8 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28) -> There are no possible next steps with just the number 28.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 2 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 6 / 5 = 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 6 / 5 = 1. -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 6 / 5 = 1. -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 - 2 = 3 (left: 4 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 - 2 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 - 2 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "The equation is already solved. No further steps are needed."
                }
            },
            "Step 7": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4 -> No possible next steps as the equation is already solved. -> The equation is already solved. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed. -> The equation is already solved. No further steps are needed.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 + 15.16666666667 = 28.16666666667 (left: 28.16666666667)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "7 - 1 = 6 (left:"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 1 / 7 = 0.14285714285714285 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "2 13 13"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (12 / 6) + (13 + 13) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "91 + 2 = 93"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you. -> Without additional input, I cannot generate possible next steps. Please provide the numbers you would like me to work with.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 - 1 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 + 1 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 13 13"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91) -> -91 + 2 = -89 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 13 19"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 - 1 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 / 1 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 / 1 = 7 (left: 6 7) -> 6 * 7 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "7 12 "
                }
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 5 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 143 - 1 = 142 (left: 142)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "7 - 1 = 6 (left:"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91) -> 91 + 2 = 93",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 - 1 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 13 13"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 * 2 = 1.6923076923076922",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13) -> 19 - 13 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13) -> 19 - 13 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 7 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 - 1 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Without additional input, I cannot generate possible next steps. Please provide the numbers you would like me to work with."
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you. -> Without additional input, I cannot generate possible next steps. Please provide the numbers you would like me to work with. -> Please provide the numbers you would like me to work with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you. -> Without additional input, I cannot generate possible next steps. Please provide the numbers you would like me to work with. -> Please provide the numbers you would like me to work with. -> Unfortunately, without any numbers provided, I am unable to suggest possible next steps. Please enter the numbers you would like me to work with.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 143 - 1 = 142 (left: 142)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "7 - 1 = 6 (left:"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6) -> Error: Invalid input. Please enter a valid operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 - 1 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 / 1 = 7 (left: 7 1 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 / 1 = 7 (left: 7 1 6) -> 1 * 6 = 6 (left: 7 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 / 1 = 7 (left: 7 1 6) -> 1 * 6 = 6 (left: 7 6) -> 7 * 6 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Without additional input, I cannot generate possible next steps. Please provide the numbers you would like me to work with."
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input of -2 as there are no remaining numbers to operate on.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 13 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 13 78) -> 13 / 78 = 0.16666666666666666 (left: 0.16666666666666666)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 13 78) -> 13 / 78 = 0.16666666666666666 (left: 0.16666666666666666) -> 0.16666666666666666 * 2 = 0.3333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 - 1 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 6 + 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 7 "
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 7  -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667) -> 1.1666666666666667 * 2 = 2.3333333333333335",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (12 / 6) + (13 + 13) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Unfortunately, without any numbers provided, I am unable to suggest possible next steps. Please enter the numbers you would like me to work with."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 + 7 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 + 7 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 13 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 - 15.16666666667 = -2.16666666667 (left: -2.16666666667)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 7 "
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 7  -> Input: 13 1 42 1.1666666666666667",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 7  -> Input: 13 1 42 1.1666666666666667 -> 1.1666666666666667 * 13 = 15.166666666666668 (left: 13 42 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "Unfortunately, without any numbers provided, I am unable to suggest possible next steps. Please enter the numbers you would like me to work with."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247) -> 24 + 7 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 13 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "7 - 1 = 6 (left:"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 * 2 = 14 (left: 14 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: -> 7 * 2 = 14 (left: 14 1) -> 14 + 1 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "13 18 13"
                }
            },
            "Step 6": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846) -> 0.846153846 * 2 = 1.692307692",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "13 15.16666666667"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13 15.16666666667) -> 13 * 15.16666666667 = 197.16666666671 (left: 197.16666666671)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 13 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 5 * 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 5 * 5 -> 5 / 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 - 2 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> 0.846 * 2 = 1.692 (left: 1.692)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "91 + 2 = 93"
                }
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = 0 (left: 0 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = 0 (left: 0 10) -> 10 / 0 = undefined (left: 0 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = 0 (left: 0 10) -> 10 / 0 = undefined (left: 0 10) -> 10 + 0 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of just \"50\" as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 8 + 27 = 35 (left: 35 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 8 + 27 = 35 (left: 35 56) -> 35 / 56 \u2248 0.625 (left: 0.625)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of just \"50\" as it is a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with the input of just \"50\" as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 - 2 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 / 8 = 3.375 (left: 3.375 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 / 8 = 3.375 (left: 3.375 56) -> 56 - 3.375 = 52.625 (left: 52.625)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 6 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> No possible next steps for the input 54.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> No possible next steps for the input 54. -> There are no possible next steps for the input 54.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 56 - 8 = 48 (left: 27 48)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 56 - 8 = 48 (left: 27 48) -> 27 * 48 = 1296 (left: 1296)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 46."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 10 + 36 = 46 (left: 46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 10 + 36 = 46 (left: 46) -> There are no possible next steps with the input 46.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 + 8 = 35 (left: 35 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 + 8 = 35 (left: 35 56) -> 56 - 35 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "27 8 56"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10. -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 - 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 - 6 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 - 6 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 56 - 8 = ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 56 - 8 =  -> 56 - 8 = 48",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0 -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 6 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 6 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 + 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 + 6 = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 + 6 = 15 (left: 15) -> 15 * 2 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 * 8 = 216 (left: 216 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 * 8 = 216 (left: 216 56) -> 216 * 56 = 12096 (left: 12096)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 + 2 + 6 = 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66) -> 66 + 2 = 68 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 56 / 8 = 7 (left: 27 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 56 / 8 = 7 (left: 27 7) -> 27 * 7 = 189 (left: 189)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "10 / 2 = 5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 - 16 = -10 (left: -10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 - 16 = -10 (left: -10) -> -10 * 2 = -20 (left: -20)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 / 60 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 / 60 = 0.1 (left: 0.1) -> 0.1 * 0.1 = 0.01 (left: 0.01)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of just \"50\" as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 56 / 8 = 7 (left: 27 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 56 / 8 = 7 (left: 27 7) -> 27 - 7 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with the input of 1.5."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 6 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 + 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 + 6 = 15 (left: 15) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 + 6 = 15 (left: 15) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 * 8 = 216 (left: 216 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 * 8 = 216 (left: 216 56) -> 216 / 56 = 3.857142857142857 (left: 3.857142857142857)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "10 / 2 = 5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 7 * 18 = 126 (left: 126)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 7 * 18 = 126 (left: 126) -> 1 + 2 + 6 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 12 - 10 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 12 - 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1 + 2 + 6 = 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 8 56"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 / 8 = 3.375 (left: 3.375 56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 * 6 = 54 (left: 54) -> 54 + 2 = 56 -> 54 / 2 = 27 (left: 27 8 56) -> 27 / 8 = 3.375 (left: 3.375 56) -> 3.375 * 56 = 189 (left: 189)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "27 8 56"
                }
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "7 8 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 + 32 = 40 (left: 40) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "16 / 2 = 8"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16) -> 16 / 2 = 8 -> 8 * 2 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "None, as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32) -> None, as there is only one number provided. -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> Input: 14 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided to perform operations with 2.75."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20) -> 8 / 20 = 0.4 (left: 0.4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 6 - 4 = 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 6 - 4 = 2 -> 4 / 6 = 0.6667 (left: 0.6667)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided to perform operations with 2.75."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps as there are no other numbers provided to perform operations with 2.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "None, as there is only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided to perform operations with 2.75."
                }
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps as there are no other numbers provided to perform operations with 2.75. -> There are no possible next steps as there are no other numbers provided to perform operations with 2.75.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4) -> There are no possible next steps for the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided to perform operations with 2.75."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "None, as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> Input: 3 5 7 -> 3 + 5 = 8 (left: 7 8) -> 8 / 7 = 1.14 (left: 1.14)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps as there are no other numbers provided to perform operations with 2.75."
                }
            },
            "Step 8": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps as there are no other numbers provided to perform operations with 2.75. -> There are no possible next steps as there are no other numbers provided to perform operations with 2.75.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 11 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 3 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> Input: 3 9 -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 / 4 = 2.75 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 11 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 18",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "None, as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32) -> None, as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 7 8"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 96 + 2 = 98",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10) -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "None, as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 26.666666666666668"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 - 20.666666666666",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 - 20.666666666666 -> 6 - 20.666666666666 = -14.666666666666 (left: -14.666666666666)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "0.1875 * 2 = 0.375"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide a set of numbers for the next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide a set of numbers for the next steps. -> Without input provided, I am unable to generate possible next steps. Please provide a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> 1 is the only number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-1 7 13"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13) -> 13 + -1 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13) -> 13 + -1 = 12 (left: 7 12) -> 12 + 7 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with the input 78."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 16 9)\n16 - 9 = 7 (left: 7)\n7 + 7 = 14 (left: 14)\n14 + 8 = 22 (left: 22",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 - 6 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 - 6 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 - 6 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15) -> 15 * 8 = 120 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 5.2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 26.666666666666668"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 26.666666666666668 - 6 = 20.666666666666668 (left: 6 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 26.666666666666668 - 6 = 20.666666666666668 (left: 6  -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5. -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9) -> 9 / 9 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 26.666666666666668"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 - (-20.666666666666",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 - (-20.666666666666 -> 6 + 20.666666666666 = 26.666666666666 (left: 26.666666666666)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "Without input provided, I am unable to generate possible next steps. Please provide a set of numbers for me to work with."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 / 2.5 = 5.2 (left: 5.2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 / 2.5 = 5.2 (left: 5.2) -> There are no possible next steps with the input 5.2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 26.666666666666668"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 * 4.444444444444445 = 26.666666666666668 (left: 4.444444444444445 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 * 4.444444444444445 = 26.666666666666668 (left: 4.444444444444445 6) -> 6 / 4.444444444444445 = 1.3513513513513513 (left: 1.3513513513513513 6)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 - 2.5 = 10.5 (left: 10.5) -> 10.5 / 2 = 5.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-1 7 13"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13) -> 7 + 13 = 20 (left: -1 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13) -> 7 + 13 = 20 (left: -1 20) -> 20 / (-1) = -20 (left: -20)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 is the only number given, so there are no possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 / 10 = 1 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 8 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 8 13) -> 8 + 1.33 = 9.33 (left: 9.33 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 8 13) -> 8 + 1.33 = 9.33 (left: 9.33 13) -> 9.33 * 13 = 121.29 (left: 121.29)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "Please provide at least two numbers to continue with the calculations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-1 7 13"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13) -> 7 / -1 = -7 (left: -7 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13) -> 7 / -1 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Without input provided, I am unable to generate possible next steps. Please provide a set of numbers for me to work with."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 + 2 = 92 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 / 13 = 1.07692307692 (left: 1.07692307692) -> 1.07692307692 / 2 = 0.53846153846",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "-1 7 13"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13) -> -1 + 7 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 -> 6 - 7 = -1 (left: -1 7 13) -> -1 + 7 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input 5.2."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27) -> 6 + 27 = 33 (left: 27)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 10 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 - 4 = 6 (left: 6 13) -> 6 * 13 = 78 (left: 78) -> There are no possible next steps with the input 78.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 26.666666666666668"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 * 4.444444444444445 = 26.666666666666668 (left: 4.444444444444445 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 * 4.444444444444445 = 26.666666666666668 (left: 4.444444444444445 6) -> 6 / 4.444444",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> 0.1875 * 2 = 0.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> 35 * 2 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Without input provided, I am unable to generate possible next steps. Please provide a set of numbers for me to work with."
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "6 26.666666666666668"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 / 0.225 = 26.666666666666668 (left: 0.225 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666 -> 2.166666666666666 + 8 = 10.166666666666666 (left: 10.166666666666666) -> 10 * 16 / 6 = 26.666666666666668 (left: 6 26.666666666666668) -> 6 / 0.225 = 26.666666666666668 (left: 0.225 6) -> 0.225 + 6 = 6.225 (left: 6.225)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "-1 7 13"
                }
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90) -> 90 - 2 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 / 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8.57 17.14"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> 8.57 + 17.14 = 25.71 (left: 25.71)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1.25 + 8 = 9.25"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 -> 1.25 * 8 = 10 (left: 10 + 8 = 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2) = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 = 2)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There is only one number provided in the input (1.5), so there are no possible next steps to perform any arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 / 70 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "7 10"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 7 10) -> 10 / 7 = 1.43 (left: 1.43)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 7 10) -> 10 / 7 = 1.43 (left: 1.43) -> There are no possible next steps with the input 1.43.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2) = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1 1 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 + 70 = 140 (left: 140)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 / 6"
                }
            },
            "Step 5": {
                "Step": "4 / 6 -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 6 -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 2 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2) = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "100"
                }
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 3 + 7 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> There are no possible next steps with a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There is only one number provided in the input (1.5"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> There is only one number provided in the input (1.5), so there are no possible next steps to perform any arithmetic operations. -> 1.5 - 1.5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "6 7 10"
                }
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2) = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "1.25 + 8 = 9.25"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 -> 8 - 1.25 = 6.75 (left: 6.75 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 7 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 - 70 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "10 + 8 = 18"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 -> 1.25 * 8 = 10 (left: 10 + 8 = 18) -> 18 - 8 = 10 (left: 10 10)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There is only one possible next step for 0.8:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8.57 17.14"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> 8.57 + 17.14 = 25.71 (left: 25.71)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 10"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8.57 17.14"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 -> 10 / 2 = 5 -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 7 10"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 3 + 7 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 3 + 7 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one possible next step for 0.8:"
                }
            },
            "Step 8": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There is only one possible next step for 0.8: -> 0.8 * 10 = 8",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> There are no possible next steps with the input of 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 7 10"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 3 + 7 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 3 + 7 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1.16666666667 10"
                }
            },
            "Step 7": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 10) -> 10 - 1.16666666667 = 8.83333333333 (left: 8.83333333333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 10) -> 10 - 1.16666666667 = 8.83333333333 (left: 8.83333333333) -> There are no possible next steps with the input 8.83333333333.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 5 * 7 = 35 (left: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2 + 10) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "8.57 17.14"
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57) -> 8.57 * 2 = 17.14 (left: 8.57 17.14) -> 8.57 * 17.14 = 146.8498 (left: 146.8498)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "70 70"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140) -> 140 / 2 = 70 (left: 70 70) -> 70 * 70 = 4900 (left: 4900)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "2 8"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 -> 10 / 2 = 5 -> 10 - 8 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 10"
                }
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 * 2 + 10) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input of 9."
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> There are no possible next steps with the input of 9. -> There are no possible next steps with the input of 9.",
                "Pruning": null
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There are no possible next steps for the input 24.83333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)  -> There are no possible next steps for the input 120 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 + 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 11 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "0 24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 0 + 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 1.8333 * 11 = 20 (left: 12 20) -> 20 - 12 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps since there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "0 24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 + 0 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 17"
                }
            },
            "Step 5": {
                "Step": "11 + 6 = 17 (left: 11 12 17) -> 11 + 12 = 23 (left: 17 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 6 = 17 (left: 11 12 17) -> 11 + 12 = 23 (left: 17 23) -> 17 * 23 = 391 (left: 391)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> 14 * 4 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "0 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333) -> There are no possible next steps with the input of -2.8333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "0 24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 5 + 5 = 10 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 11 12"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 12 / 5 = 2.4 (left: 2.4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> 12 * 12 = 144",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 6 * 11 = 66 (left: 12 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 6 * 11 = 66 (left: 12 66) -> 66 - 12 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 6 * 11 = 66 (left: 12 66) -> 66 - 12 = 54 (left: 54) -> Not enough numbers provided for possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "0 24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 - 0 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "5 11 12"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 12 / 2.2 = 5.45454545455 (left: 5.45454545455)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> There are no possible next steps for the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "0 24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 - 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 11 12"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 16 12) -> 16 + 12 = 28 (left: 28) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 24.83333."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6 2"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 2) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 11 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1) -> -1 + 8 = 7 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 11 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "0 24"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 24 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps since there is only one number in the input."
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps since there is only one number in the input. -> N/A",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps since there is only one number in the input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps since there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.8333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 / 1.8333 = 6.5455 (left: 6.5455 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 / 1.8333 = 6.5455 (left: 6.5455 11 12) -> 6.5455 * 11 = 71.9995 (left: 12 71.9995)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 / 6 = 1.83 (rounded to 2) (left: 2 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) ",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 * 12.83333 = 153.99996 (left: 153.99996)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> No possible next steps for the input 144.",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3.33 6.006"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 / 3.33 = 6.006 (left: 3.33 6.006) -> 6.006 / 3.33 = 1.802 (left: 1.802)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps for this input of 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for this input of 5."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps for the input of 45."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 6 * 20 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 6 * 20 = 120 (left: 120) -> 120 / 6 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 8 - 0.875 = 7.125 (left: 7.125)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 9 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3.33 6.006"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 / 3.33 = 6.006 (left: 3.33 6.006) -> 6.006 - 3.33 = 2.676 (left: 2.676)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 5 + 7 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> No possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 - 13 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "12 9"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 5 + 7 = 12 (left: 12 9) -> 12 - 9 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 / 3.33 = 6.006 (left: 3.33 6.006)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14) -> No further steps can be taken with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps for this input of 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> There are no possible next steps for the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> There are no possible next steps for the input of 5. -> 5 / 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> None",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 8 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909) -> There are no possible next steps for the input 4.909 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the number 13."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps with the number 13. -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12 9"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11) -> 5 + 7 = 12 (left: 12 9) -> 12 * 9 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3.33 6.006"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 / 3.33 = 6.006 (left: 3.33 6.006) -> 3.33 + 6.006 = 9.336 (left: 9.336)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for this input of 5."
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps for the input provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps for the input provided. -> None",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for this input of 5."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 11"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18) -> 18 - 11 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps for this input of 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> There are no possible next steps for this input of 5. -> 5 - 5 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "2 6"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> There are no possible next steps for the input of 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 + 11 = 13 (left: 13) -> There are no possible next steps with the number 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input 4.909 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909) -> There are no possible next steps for the input 4.909 as it is already a single number. -> There are no possible next steps for the input 4.909 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54) -> 54 / 11 = 4.909 (left: 4.909) -> There are no possible next steps for the input 4.909 as it is already a single number. -> There are no possible next steps for the input 4.909 as it is already a single number. -> There are no possible next steps for the input 4.909 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> 5 + 26 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> 5 + 26 = 31 (left: 31) -> 31 / 2 = 15.5 (left: 15.5)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> - Add two numbers together"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> There are no possible next steps with just the number 8."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125 -> 1.125 - 9 = -7.875 (left:"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135) -> 13 + 5 = 18 (left: 18)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8 (left: 8)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135) -> There is only one number given, so there are no possible next steps to perform any operations."
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284) -> 2.4285714285714284 + 8 = 10.428571428571428"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 + 72 = 140",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input 80."
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 2 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 2 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 ( -> 12 / 4 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 ( -> 12 / 4 = 3 -> 4 + 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 8 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6) -> 8 * 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6) -> 8 * 6 = 48 (left: 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "68 + 72 = 140"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input 1.3333 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input 1.3333 as it is already a single number. -> There are no possible next steps for the input 1.3333 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input 1.3333 as it is already a single number. -> There are no possible next steps for the input 1.3333 as it is already a single number. -> There are no possible next steps for the input 1.3333 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: )",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: ) -> It seems like you forgot to input a sequence of numbers. Please provide the numbers so we can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6) -> 8 - 6 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "None, as there is only one number given."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 2 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 2 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 2 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "No possible next steps as there is only one number left."
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> -2 * 8 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> None, as there is only one number given. -> There are no possible next steps since there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> None, as there is only one number given. -> There are no possible next steps since there is only one number given. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input 1.3333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 14"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 - 14 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input 80."
                }
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 2 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> There are no possible next steps with the input 80. -> There are no possible next steps with the input 80.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334) -> There are no possible next steps with the input of 0.8333333333333334 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 / 2 = 6 (left: 8 6) -> 8 / 6 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "68 + 72 = 140"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 + 72 = 140 -> 68 - 72 = -4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72) -> 68 + 72 = 140 -> 68 - 72 = -4 -> 68 / 72 = 0.9444 (left: -4 0.9444)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 8 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 8 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 8 = 4 (left: 2 4) -> 4 / 2 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "8 14"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14) -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "No possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> No possible next steps with only one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 * 6 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 * 6 = 72 (left: 72) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 * 6 = 72 (left: 72) -> 7 + 2 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 8 / 2 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 14"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "None, as there is only one number given."
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 6 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input 1.3333 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input 1.3333 as it is already a single number. -> There are no possible next steps for the input 1.3333 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 * 8 = 16 (left: 16 12) -> 16 / 12 = 1.3333 (left: 1.3333) -> There are no possible next steps for the input 1.3333 as it is already a single number. -> There are no possible next steps for the input 1.3333 as it is already a single number. -> There are no possible next steps for the input 1.3333 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25) -> 12 - 13.25 = -1.25 (left: -1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25) -> 12 - 13.25 = -1.25 (left: -1.25) -> There are no possible next steps for the input -1.25 as it is a single number and cannot be operated on further with the given operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": ""
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left:  -> It seems like you didn't provide an input to work with. Could you please provide a set of numbers?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left:  -> It seems like you didn't provide an input to work with. Could you please provide a set of numbers? -> Please enter a set of numbers for me to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "16.88888888888889 + 2 = 18.88888888888889"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 * 2 = 33.77777777777778 -> 16.88888888888889 / 2 = 8.444444444444445 -> 16.88888888888889 + 2 = 18.88888888888889 -> 16.88888888888889 / 2 = 8.444444444444445",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 * 2 = 33.77777777777778 -> 16.88888888888889 / 2 = 8.444444444444445 -> 16.88888888888889 + 2 = 18.88888888888889 -> 16.88888888888889 / 2 = 8.444444444444445 -> None, the equation is already simplified.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2.25 11 12"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.89 (left: 4.89 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.89 (left: 4.89 12) -> 12 / 4.89 = 2.45 (left: 2.45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.4074074074074074 / 2 = 0.2037037037037037"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.4074074074074074 * 2 = 0.8148148148148148 (left: 0.8148148148148148)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 11.9091 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is already a single number. -> No possible next steps. The input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 / 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "16.88888888888889 * 2 = 33.77777777777778"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 * 2 = 33.77777777777778 -> 16.88888888888889 / 2 = 8.444444444444445",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 * 2 = 33.77777777777778 -> 16.88888888888889 / 2 = 8.444444444444445 -> 16.88888888888889 + 2 = 18.88888888888889",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.4074074074074074 / 2 = 0.2037037037037037"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 2 - 0.2037037037037037 = 1.7962962962962963",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 2 - 0.2037037037037037 = 1.7962962962962963 -> 2 - 1.7962962962962963 = 0.20370370370370374",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 + 26 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.4074074074074074 / 2 = 0.2037037037037037"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074 -> 0.4074074074074074 * 2 = 0.8148148148148148",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.4074074074074074 * 2 = 0.8148148148148148"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074 -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 / 2 = 0.2037037037037037",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074 -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 / 3 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 / 3 = 5 (left: 5 15) -> 15 / 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 / 3 = 5 (left: 5 15) -> 15 / 5 = 3 (left: 3) -> There are no possible next steps with just a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just a single number."
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 / 3 = 5 (left: 5 15) -> 15 / 5 = 3 (left: 3) -> There are no possible next steps with just a single number. -> Provide a new set of numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 / 3 = 5 (left: 5 15) -> 15 / 5 = 3 (left: 3) -> There are no possible next steps with just a single number. -> Provide a new set of numbers to find possible next steps. -> 5 + 7 = 12 (left: 3 9 12)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 * 2 = 33.77777777777778",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input -1.25 as it is a single number and cannot be operated on further with the given operations."
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25) -> 12 - 13.25 = -1.25 (left: -1.25) -> There are no possible next steps for the input -1.25 as it is a single number and cannot be operated on further with the given operations. -> There are no possible next steps for the input -1.25 as it is a single number and cannot be operated on further with the given operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25) -> 12 - 13.25 = -1.25 (left: -1.25) -> There are no possible next steps for the input -1.25 as it is a single number and cannot be operated on further with the given operations. -> There are no possible next steps for the input -1.25 as it is a single number and cannot be operated on further with the given operations. -> N/A",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input of 15."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just a single number."
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 / 3 = 5 (left: 5 15) -> 15 / 5 = 3 (left: 3) -> There are no possible next steps with just a single number. -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 / 3 = 5 (left: 5 15) -> 15 / 5 = 3 (left: 3) -> There are no possible next steps with just a single number. -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 * 24.75 = 297 (left: 297)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 * 24.75 = 297 (left: 297) -> 9 * 7 = 63 (left: 63)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "9 12 15"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 ^ 26 = 67108864 (left: 67108864)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "12 36.75"
                }
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 24.75 36.75) -> 36.75 - 24.75 = 12 (left: 12 36.75) -> 12 + 36.75 = 48.75 (left: 48.75)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.4074074074074074 / 2 = 0.2037037037037037"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "0.4074074074074074 / 2 = 0.2037037037037037"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074 -> 0.4074074074074074 / 2 = 0.2037037037037037",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps since 72 is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 2 * 26 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps since 72 is already a single number."
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps since 72 is already a single number. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "2 26"
                }
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.4074074074074074 / 2 = 0.2037037037037037"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.4074074074074074 * 2 = 0.8148148148148148"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074 -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 + 2 = 2.4074074074074074",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 / 2 = 0.2037037037037037 -> 0.2037037037037037 * 2 = 0.4074074074074074 -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 + 2 = 2.4074074074074074 -> 2 / 0.4074074074074074 = 4.898496240601504 (left: 4.898496240601504)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 11.9091 as it is already a single number."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 24.75 36.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 24.75 36.75) -> 36.75 - 24.75 = 12 (left: 12 36.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 15) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 12 = 3 (left: 3 15) -> 3 * 5 = 15 (left: 15) -> 15 + 2 = 17 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No more possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.45"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.89 (left: 4.89 12) -> 12 / 4.89 = 2.45 (left: 2.45) -> There are no possible next steps for the input 2.45 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.89 (left: 4.89 12) -> 12 / 4.89 = 2.45 (left: 2.45) -> There are no possible next steps for the input 2.45 as it is already a single number. -> There are no possible next steps for the input 2.45 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> No more possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 26"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 * 2 = 26 (left: 2 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "9 12 15"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 9 * 12 = 108 (left: 108 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 9 * 12 = 108 (left: 108 15) -> 108 / 15 = 7.2 (left: 15 7.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "No more possible next steps."
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> No more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14) -> No more possible next steps. -> There are no more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 + 13 = 22 (left: 22 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 + 13 = 22 (left: 22 56) -> 22 - 56 = -34 (left: -34)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 + 13 = 22 (left: 22 56) -> 22 - 56 = -34 (left: -34) -> -34 + 2 = -32 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with the input of -5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 + 9 = 24 (left: 13 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 + 9 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 + 9 = 24 (left: 13 24) -> 13 + 24 = 37 (left: 37) -> 37 / 2 = 18.5 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 + 1 = 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 - 5 = 25 (left: 25 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 - 5 = 25 (left: 25 2) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 60 as there are no other numbers provided to perform operations on."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102) -> -102 + 2 = -100 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 13 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 + 13 = 22 (left: 22 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 + 13 = 22 (left: 22 56) -> 22 * 56 = 1232 (left: 1232)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 + 13 = 22 (left: 22 56) -> 22 * 56 = 1232 (left: 1232) -> 1 - 2 - 3 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> Input: 9 3 6 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> Input: 9 3 6 2 -> 9 + 3 = 12 (left: 12 6 ",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9) -> There are no possible next steps with the input of -9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 / 9 = 1.4444 (left: 1.4444 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 / 9 = 1.4444 (left: 1.4444 15) -> 15 / 1.4444 = 10.389 (left: 10.389)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 / 9 = 1.4444 (left: 1.4444 15) -> 15 / 1.4444 = 10.389 (left: 10.389) -> There are no possible next steps for the input 10.389.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 + 5 = 35 (left: 35 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 + 5 = 35 (left: 35 2) -> 35 - 2 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of -9."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2 -> There are no possible next steps with just the number 2.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2 -> There are no possible next steps with just the number 2. -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 13 = 43 (left: 9 43)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 13 = 43 (left: 9 43) -> 9 - 43 = -34 (left: -34)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 13 = 43 (left: 9 43) -> 9 - 43 = -34 (left: -34) -> -34 * 2 = -68 (left: -68)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 + 5 = 35 (left: 2 35)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 + 5 = 35 (left: 2 35) -> 35 / 2 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "30 5 2"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps for the input \"0\" as there are no numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 - 5 = 25 (left: 25 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 - 5 = 25 (left: 25 2) -> 25 - 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with the input of -5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> There are no possible next steps for the input 60 as there are no other numbers provided to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> Input: 10 3 6 2",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> Input: 10 3 6 2 -> 2 + 10 = 12 (left",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> 15 / 2 = 7.5 (left: 7.5) -> 7.5 - 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "9 13 56"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75) -> 3.75 - 8 = -4.25 (left: 8)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input \"0\" as there are no numbers to work with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 / 5 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 / 5 = 6 (left: 6 2) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1 + 7 = 8.71 (left: 8.71)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "13 17"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 + 13 = 22 (left: 22 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 + 13 = 22 (left: 22 15) -> 15 + 22 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 + 13 = 22 (left: 22 15) -> 15 + 22 = 37 (left: 37) -> There are no possible next steps with the input of 37.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 / 5 = 6 (left: 6 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 / 5 = 6 (left: 6 2) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "30 5 2"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 1 + 7 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 1 + 7 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 1 + 7 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 13 / 47 \u2248 0.2777 (left: 0.2777)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 - 9 = 47 (left: 13 47) -> 13 / 47 \u2248 0.2777 (left: 0.2777) -> 0.2777 * 2 = 0.5554",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "30 5 2"
                }
            },
            "Step 7": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 - 5 = 25 (left: 25 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 9 * 13 = 117 (left: 117 56) -> 117 * 56 = 6552 (left: 6552) -> 6 * 5 = 30 (left: 30 5 2) -> 30 - 5 = 25 (left: 25 2) -> 25 + 2 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "0.2777 * 2 = 0.5554"
                }
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 24)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 -> 24 / 12 = 2 (left: 2 24) -> 24 / 2 = 12 (left: 12)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24) -> 12 * 24 = 288 (left: 288)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> 1 - 1 = 0 (left: 0) -> No possible next steps as there is no input provided."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0) -> No possible next steps as there are no numbers provided."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 8 = 72 (left: 72)\nAnswer: ((3 * 3) - 8) * (9 * 8) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12) -> 12 / 2 = 6"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 6 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20) -> There is only one possible next step: 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27 *"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 * 8 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "8 + 4 = 12"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 * 14 = 84 (left: 84) -> 8 + 4 = 12 -> 8 - 4 = 4 (left: 4 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364) -> 0.6363636363636364 * 2 = 1.2727272727272728",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> Input: 5 10 +",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> Input: 5 10 + -> 3 - 6 = -3 (left: -3 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132) -> 13 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 * 14 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 6 = 14 (left: 6 14) -> 6 * 14 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There is only one number given, so there are no possible next steps."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There is only one number given, so there are no possible next steps. -> None",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "27 *"
                }
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 * 8 = 216 (left: 216 *)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 6 20"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There is only one possible next step: 23."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> There is only one possible next step: 23. -> 23 + 2 = 25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> There is only one possible next step: 23. -> 23 + 2 = 25 -> 23 / 2 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "0.6363636363636364 * 2 = 1.2727272727272728"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "3 4 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17) -> 4 + 10 = 14 (left: 14 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 3 17) -> 4 + 10 = 14 (left: 14 5) -> 14 * 5 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27 *"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 / 8 = 3.375 (left: 3.375 *)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 / 8 = 3.375 (left: 3.375 *) -> 3.375 * 2 = 6.75 (left: *)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input 1."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333333333 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333333333 (left: 1.33) -> There are no possible next steps for the input 1.33.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333333333 (left: 1.33) -> There are no possible next steps for the input 1.33. -> There are no possible next steps for the input 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81) -> 8 / 1 = 8 (left: 8) ",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27 *"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> Input: 11 3 5 +",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> Input: 11 3 5 + -> 3 / 11 = 0.2727272727 (left: 0.2727272727 5 +)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)  -> 3 * 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "27 *"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 - 8 = 19 (left: 19 *)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 - 8 = 19 (left: 19 *) -> 19 * 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps with just the number 50."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps for the input 1."
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 / 8 = 3.375 (left: 3.375 *)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> 27 / 8 = 3.375 (left: 3.375 *) -> 3.375 + 2 = 5.375 (left: *)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "27 *"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50. -> There are no possible next steps with just the number 50.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 + 11 = 23 (left: 23) -> There is only one possible next step: 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "27 *"
                }
            },
            "Step 7": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27) -> 27 * -> Possible next steps: -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 20"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 * 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 * 6 = 18 (left: 9 18) -> 18 / 2 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 * 6 = 18 (left: 9 18) -> 18 / 2 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 1."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps for the input 1."
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.6666666667 (left: 13.666666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.6666666667 (left: 13.666666666 -> 13.666666666 / 2 = 6.833333333 (left: 6.833333333 13.666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.6666666667 (left: 13.666666666 -> 13.666666666 / 2 = 6.833333333 (left: 6.833333333 13.666666666) -> 13.666666666 - 6.833333333 = 6.833333333 (left: 6.833333333)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There is only one possible next step, which is to round the decimal number to the nearest whole number:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 / 22."
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 + 12 = 22.3333333333 (left: 12 22.3333333333) -> 12 / 22. -> 12 / 22 = 0.5454545454545454 (left: 0.5454545454545454)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps with the given input. -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There are no possible next steps for the input 2.33 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 + 12 = 22.3333333333 (left: 12 22.3333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 + 12 = 22.3333333333 (left: 12 22.3333333333) -> 12 / 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "192 + 204 = 396"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 12 + 192 = 204 (left: 192 204) -> 192 + 204 = 396 -> 204 - 192 = 12 (left: 12 192 396)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 12 + 192 = 204 (left: 192 204) -> 192 + 204 = 396 -> 204 - 192 = 12 (left: 12 192 396) -> 192 / 12 = 16 (left: 16 192 396)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 / 6 = 1.66666666667 (left:"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left:  -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left:  -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps. -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 / 22."
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 + 12 = 22.3333333333 (left: 12 22.3333333333) -> 12 / 22. -> 12 + 22 = 34",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 + 12 = 22.3333333333 (left: 12 22.3333333333) -> 12 / 22. -> 12 + 22 = 34 -> 22 - 12 = 10 (left: 10 = 34)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 / 13.66666666667 = 0.87912087912 (left: 0.87912087912 13.66666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 / 13.66666666667 = 0.87912087912 (left: 0.87912087912 13.66666666667) -> 0.87912087912 / 13.66666666667 = 0.06428571429",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps."
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left:  -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps. -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps. -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left:  -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps. -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps. -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps. -> It appears that you did not provide an input for me to work with. Please enter a set of numbers for me to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There is only one possible next step, which is to round the decimal number to the nearest whole number:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.6666666667 (left: 13.666666666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.6666666667 (left: 13.666666666 -> 13.666666666 - 2 = 11.666666666 (left: ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 + 1.66666666667 = 13.6666666667 (left: 13.666666666 -> 13.666666666 - 2 = 11.666666666 (left:  -> It seems like you haven't provided any input to work with. Please provide the numbers you want to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.87912087912 / 13.66666666667 = 0.06428571429"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 / 13.66666666667 = 0.87912087912 (left: 0.87912087912 13.66666666667) -> 0.87912087912 / 13.66666666667 = 0.06428571429 -> 0.87912087912 + 13.66666666667 = 14.54578754579",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 / 13.66666666667 = 0.87912087912 (left: 0.87912087912 13.66666666667) -> 0.87912087912 / 13.66666666667 = 0.06428571429 -> 0.87912087912 + 13.66666666667 = 14.54578754579 -> 0.87912087912 / 13.66666666667 = 0.06428571428",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 12 / 10.3333333333 = 1.1616161616 (left:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 12 / 10.3333333333 = 1.1616161616 (left: -> 12 * 10.3333333333 = 123.9999999996 (left: 123.9999999996)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "12 16 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 12 + 192 = 204 (left: 192 204)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 12 + 192 = 204 (left: 192 204) -> 192 + 204 = 396",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7.2 * 12 = 86.4"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 7.2 * 12 =  -> 7.2 * 12 = 86.4 -> 7.2 * 12 = 86.4 (left: 86.4 = 86.4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 7.2 * 12 =  -> 7.2 * 12 = 86.4 -> 7.2 * 12 = 86.4 (left: 86.4 = 86.4) -> There are no possible next steps as the equation is already solved.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 + 20 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 + 20 = 32 (left: 32) -> No possible next steps, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input 4.8."
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left:  -> It seems like there is no input provided. Please provide a set of numbers for the next steps to be calculated.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left:  -> It seems like there is no input provided. Please provide a set of numbers for the next steps to be calculated. -> Please provide a set of numbers for the next steps to be calculated.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "192 + 204 = 396"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 12 + 192 = 204 (left: 192 204) -> 192 + 204 = 396 -> 192 - 204 = -12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 12 + 192 = 204 (left: 192 204) -> 192 + 204 = 396 -> 192 - 204 = -12 -> 192 + 204 = 396 (left: -12 = 396)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 / 7.2 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 / 7.2 = 1.66666666667 (left: 1.66666666667) -> There seems to be a mistake in the input format for the second set of numbers. Can you please provide the correct input format for me to generate possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 7.2 * 12 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 7.2 * 12 =  -> 7.2 * 12 = 86.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There is only one possible next step, which is to round the decimal number to the nearest whole number:"
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There is only one possible next step, which is to round the decimal number to the nearest whole number: -> 7.5 rounded to the nearest whole number is 8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There is only one possible next step, which is to round the decimal number to the nearest whole number: -> 7.5 rounded to the nearest whole number is 8. -> 15.5 rounded to the nearest whole number is 16.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.333333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.333333333 -> 12 - 1.66666666667 = 10.333333333",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.333333333 -> 12 - 1.66666666667 = 10.333333333 -> 12 / 1.66666666667 = 7.2 (left: 7.2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1.66666666667 12 12"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 20 - 12 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 20 - 12 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps for the input 2.33 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps with the input 4.8."
                }
            },
            "Step 7": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 - 7.2 = 4.8 (left: 4.8) -> There are no possible next steps with the input 4.8. -> There are no possible next steps with the input 4.8. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8) -> There are no possible next steps for the input 3.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 14 24) -> 14 + 24 = 38 (left: 38)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 4. 140 * 2 = 280 (left: 2)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 = -> 4 / 5 = 0.8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 = -> 4 / 5 = 0.8 -> 4 - 5 = -1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((5 + 5) + 5) + 9 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input: 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 * 9 = 45 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 * 9 = 45 (left: -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 * 9 = 45 (left: -> 9 / 5 = 1.8 (left: 1.8) -> 1.8 * 8 = 14.4 (left: 14.4)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide more than one number to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 - 5 = 5 (left: 5 9) -> 3 * 6 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 - 5 = 5 (left: 5 9) -> 3 * 6 = 18 (left: 18 9) -> 18 * 9 = 162 (left: 162)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 5 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 - 9 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 - 9 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 - 9 = -4 (left: -4) -> There are no possible next steps with the input of -4. -> There are no possible next steps with the input of -4."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 + 5 =  -> 9 + 5 = 14 -> 9 - 5 = 4 (left: 4 14)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 / 8 = 0.20833333333333336",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 - 5 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 - 5 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75) -> -0.75 + 2 = 1.25 (left: 2)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 5 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 5 + 9 = 14 (left: 10) -> 10 + 8 = 18 (left: 8) -> 8 + 8 = 16 (left: 16)"
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545) -> 0.4545 + 2 = 2.4545 (left: 2.4545)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "5 11 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> Input: 3 9 12",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> Input: 3 9 12 -> 3 * 9 = 27 (left: 12 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> Input: 3 9 12 -> 3 * 9 = 27 (left: 12 27) -> 12 + 27 = 39 (left: 39)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "12 + 83 = 95"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225) -> 2 + 2 + 5 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 30 * 11 = 330 (left: 330) -> 3 + 3 + 0 = 6 (left: 6 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "55 + 2 = 57"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55) -> 55 + 2 = 57 -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no valid operations that can be performed with the input of 5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> 0.75 + 2 = 2.75",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> Input: 5 3 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> Input: 5 3 6 -> 5 - 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with the input of 19."
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 11 30) -> 30 - 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> 21 - 7 = 14 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 11 30) -> 30 - 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> 21 - 7 = 14 ( -> 21 * 7 = 147 (left: 147 - 7 = 140)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> None",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 5 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 11 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 11 30) -> 30 - 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 11 30) -> 30 - 11 = 19 (left: 19) -> There are no possible next steps with the input of 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2.72727272727 + 2 = 4.72727272727"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 30 / 11 = 2.72727272727 (left: 2.72727272727) -> 2.72727272727 + 2 = 4.72727272727 -> 2 + 2 = 4 (left: 2.72727272727 4 5.45454545454)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 30 / 11 = 2.72727272727 (left: 2.72727272727) -> 2.72727272727 + 2 = 4.72727272727 -> 2 + 2 = 4 (left: 2.72727272727 4 5.45454545454) -> 4 * 5.45454545454 = 21.81818181816 (left: 2.72727272727 21.81818181816)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3 -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 6 11"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55) -> 55 + 2 = 57",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 1.83 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 1.83 11) -> 1.83 + 11 = 12.83 (left: 12.83)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 1.83 11) -> 1.83 + 11 = 12.83 (left: 12.83) -> 12 + 83 = 95",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "55 + 2 = 57"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55) -> 55 + 2 = 57 -> 2 / 55 = 0.036363636363636",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55) -> 55 + 2 = 57 -> 2 / 55 = 0.036363636363636 -> 2 + 55 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> Possible next steps: -> It seems like the input is missing. Please provide the numbers to generate the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> 30 + 2 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 9"
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> 17 - 8 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> N/A",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 6"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "6 11 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 30 / 11 = 2.72727272727 (left: 2.72727272727)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11) -> 30 / 11 = 2.72727272727 (left: 2.72727272727) -> 2.72727272727 + 2 = 4.72727272727",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 7": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7 -> 5 + 2 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7 -> 5 + 2 = 7 (left: 7 7) -> 7 - 7 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 1 9"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9 9) -> Possible next steps: -> No valid next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 4.5 / 7 = 0.6428571428571429 (left: 0.6428571428571429)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 0.87."
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> There are no possible next steps with the input 0.87. -> There are no possible next steps with the input 0.87.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> There are no possible next steps with the input 0.87.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 4.5 * 7 = 31.5 (left: 31.5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with."
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with. -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5)  -> 1.5 + 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9 9) -> 4.5 * 9 = 40.5 (left: 40.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9 9) -> 4.5 * 9 = 40.5 (left: 40.5) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 4.5 - 7 = -2.5 (left: -2.5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4.5 7"
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 7 - 4.5 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "No valid next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 2 = 7 (left: 2 7 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 2 = 7 (left: 2 7 9) -> 7 * 2 = 14 (left: 14 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 2 = 7 (left: 2 7 9) -> 7 * 2 = 14 (left: 14 9) -> 14 + 9 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 4.5 * 7 = 31.5 (left: 31.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9) -> 11.97 - 9 = 2.97 (left: 2.97) -> There is only one number given, so there are no possible next steps to perform any operations. -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 - 9 = 39 (left: 9 39)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 - 9 = 39 (left: 9 39) -> 39 - 9 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 - 9 = 39 (left: 9 39) -> 39 - 9 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 9 = 0 (left: 2 0)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 9 = 0 (left: 2 0) -> 2 + 0 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 9 = 0 (left: 2 0) -> 2 + 0 = 2 -> 0 + 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 0.87."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 4.5 + 7 = 11.5 (left: 11.5)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 2 * 9 = 18 (left: 9 18) -> 18 - 9 = 9 (left: 9) -> There are no possible next steps with the input 9. -> 9 / 9 = 1 (left: 1 9)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9) -> 11.97 - 9 = 2.97 (left: 2.97)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9) -> 11.97 - 9 = 2.97 (left: 2.97) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 - 4.5 = 4.5 (left: 4.5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4.5 (left: 4.5 9) -> 9 - 4.5 = 4.5 (left: 4.5 9) -> 4.5 + 9 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 4.5 * 7 = 31.5 (left: 31.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with."
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with. -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 + 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 + 2 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 4.5 - 7 = -2.5 (left: -2.5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with."
                }
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 2 * 9 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 2 * 9 = 18 (left: 9 18) -> 18 - 9 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 2 * 9 = 18 (left: 9 18) -> 18 - 9 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> 7 / 4.5 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 2 * 9 = 18 (left: 9 18) -> 18 - 9 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> Possible next steps: -> None, the input does not have any more possible arithmetic operations to perform.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> Possible next steps: -> None, the input does not have any more possible arithmetic operations to perform. -> N/A",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 9 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 2 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 2 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 - 2 = 7 (left: 7 9 9) -> 9 - 9 = 0 (left: 7 0 9) -> 9 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "There are no possible next steps with the input 0.87."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> Possible next steps: -> It seems like there was an error in the input. Please provide a valid input for me to generate possible next steps. Thank you.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7.67 9) -> 7.67 / 9 = 0.8522 (left: 0.8522)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7.67 9) -> 7.67 / 9 = 0.8522 (left: 0.8522) -> There are no possible next steps with the input 0.8522 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 9 9"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 * 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4.5 7"
                }
            },
            "Step 7": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> 9 / 2 = 4 -> 9 - 2 = 7 -> 9 / 2 = 4.5 (left: 4.5 7) -> Possible next steps: -> - 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 7 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 - 13 = 2 (left: 2) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3.67 / 2 = 1.835"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 -> 2 / 3.67 = 0.545 (left: 0.545)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with the input of 19.5 as it is a single number and not a set of numbers with operations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 1 * 95 = 95 (left: 95)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 64 112)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 8 = 64 (left: 64 112) -> 64 * 112 = 7168 (left: 7168)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 6 13"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "No possible next steps with only one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22) -> 22 / 6 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 4.33 as it is a single number and not a mathematical equation."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is a single number and not a mathematical equation. -> There are no possible next steps for the input 4.33 as it is a single number and not a mathematical equation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 1 + 31 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1 - "
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13) -> 12 - 13 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13) -> 12 - 13 = -1 (left: -1) -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 14) -> 14 + 8 = 22 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 2 * 14 = 28 (left: 8 28 14) -> 14 + 8 = 22 ( -> 8 + 8 = 16 (left: 14 16 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "16 + 16 = 32"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 14 = 112 (left: 2 112)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> 8 * 14 = 112 (left: 2 112) -> 2 + 112 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "16 + 16 = 32"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input provided."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> Possible next steps: -> There are no possible next steps for the input provided. -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 13 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> - 2 * 14 = 28 (left: 8 8 28)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> - 2 * 14 = 28 (left: 8 8 28) -> 8 + 8 = 16 (left: 16 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> - 2 * 14 = 28 (left: 8 8 28) -> 8 + 8 = 16 (left: 16 28) -> 16 - 28 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "16 + 16 = 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 + 1 = 33 (left: 1 33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 32 + 1 = 33 (left: 1 33) -> 33 - 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is a single number and not a mathematical equation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 5 5 6 7\nSteps:\n5 * 6 = 30 (left: 5 7 30)\n30 - 7 = 23 (left: 5 23)\n23 - 5 = 18 (left: 18)\nAnswer: (5 * 6) - (7 - 5) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3.67 / 2 = 1.835"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 / 2 = 1.835 -> 3.67 / 2 = 1.835 (left: 1.835 2 1.835)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13) -> 12 * 13 = 156 (left: 156) -> 15 - 6 = 9 (left: 9) ",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 7 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 9 - 3 = 6 (left: 6 5) -> 5 * 6 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "16 + 16 = 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with the input of 19.5 as it is a single number and not a set of numbers with operations."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 * 13 = 19.5 (left: 19.5) -> There are no possible next steps with the input of 19.5 as it is a single number and not a set of numbers with operations. -> There are no possible next steps with the input of 19.5 as it is a single number and not a set of numbers with operations.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 * 13 = 19.5 (left: 19.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 * 13 = 19.5 (left: 19.5) -> There are no possible next steps with the input of 19.5 as it is a single number and not a set of numbers with operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "- Multiply two numbers"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> Input: - Divide two",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> Input: - Divide two -> - Divide two: 2 / 2 = 1",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> - Multiply two numbers -> Input: - Divide two -> - Divide two: 2 / 2 = 1 -> 1 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 32"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 4.33 as it is a single number and not a mathematical equation."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33) -> There are no possible next steps for the input 4.33 as it is a single number and not a mathematical equation. -> There are no possible next steps for the input 4.33 as it is a single number and not a mathematical equation.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 * 11 = 66 (left: 66 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 * 11 = 66 (left: 66 17) -> 66 / 17 = 3.8823529411764707 (left: 3.8823529411764707)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 * 11 = 66 (left: 66 17) -> 66 / 17 = 3.8823529411764707 (left: 3.8823529411764707) -> 3.8823529411764707 * 2 = 7.7647058823529414"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5. -> There are no possible next steps with the input of -5."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 + 8 = 23 (left: 11 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 + 8 = 23 (left: 11 23) -> 23 - 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 + 8 = 23 (left: 11 23) -> 23 - 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2) -> 2 + 2 = 4"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 2 "
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: ((6 / (11 - 9)) * 8) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 / 11 = 1.363636363",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 / 11 = 1.363636363 -> 15 * 11 = 165 (left: 11 165 1.363636363)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 / 11 = 1.363636363 -> 15 * 11 = 165 (left: 11 165 1.363636363) -> 1.363636363 * 11 = 15 (left: 15 15)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 - 6 = 5 (left: 5 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 - 6 = 5 (left: 5 17) -> 17 / 5 = 3.4 (left: 3.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 - 6 = 5 (left: 5 17) -> 17 / 5 = 3.4 (left: 3.4) -> There are no possible next steps with the input 3.4 as it is a single number and not a list of numbers to perform operations on."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 + 6 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 + 6 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 + 6 = 17 (left: 17) -> There are no possible next steps with the input 17. -> There are no possible next steps with the input 17."
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 + 48 = 147 (left: 147)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 + 48 = 147 (left: 147) -> 5 * 7 = 35 (left: 3 35)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45) -> There are no possible next steps for the input 45."
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> There are no possible next steps with the input 11."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4) -> 4 + 4 = 8"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23) -> 23 + 8 = 31 (left: 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1) -> -1 is not a valid input. Please enter a valid input consisting of three numbers separated by spaces."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8) -> Possible next steps: -> There are no more possible next steps as all calculations have been exhausted."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps: -> No input provided."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (11 - 3)) * 1 = 24"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 3 * 14 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 3 * 14 = 42 (left: 42) -> There are no possible next steps with the input of 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1.619834711 11"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 * 1.272727272 = 1.619834711 (left: 1.619834711 11) -> 11 / 1.619834711 = 6.790123457 (left: 6.790123457)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2.5 11 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4 -> There are no possible next steps with only one number.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4 -> There are no possible next steps with only one number. -> Since there is only one number in the input, there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 10 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 10 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 10 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8) -> There are no valid next steps for the input -8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 - 3 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 - 3 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 42."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154) -> 13 / 154 = 0.0844 (left: 0.0844 13)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154) -> 13 / 154 = 0.0844 (left: 0.0844 13) -> 0.0844 / 13 = 0.0065 (left: 0.0065)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "10 13 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818 (left: 14 1.1818)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818 (left: 14 1.1818) -> 14 + 1.1818 = 15.1818",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818 (left: 14 1.1818) -> 14 + 1.1818 = 15.1818 -> 14 - 1.1818 = 12.8182",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27) -> 11 + 27 = 38 (left: 38)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27) -> 11 + 27 = 38 (left: 38) -> 38 - 3 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Since there is only one number in the input, there are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4 -> There are no possible next steps with only one number. -> Since there is only one number in the input, there are no possible next steps. -> N/A",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no valid next steps for the input -8."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 + 4.67 = 7.67 (left: 7.67)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 11 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 143 - 14 = 129 (left: 129)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 143 - 14 = 129 (left: 129) -> 129 - 1 - 2 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "14 - 1.1818 = 12.8182"
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 / 11 = 1.1818 (left: 14 1.1818) -> 14 + 1.1818 = 15.1818 -> 14 - 1.1818 = 12.8182 -> 14 / 1.1818 = 11.8367 (left: 11.8367)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3^2 + 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 11 3"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 - 13 = -2 (left: -2 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 - 13 = -2 (left: -2 14) -> -2 + 14 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 - 13 = -2 (left: -2 14) -> -2 + 14 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just one number. -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 * 1.272727272 = 1.619834711 (left: 1.619834711 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 13 = 1.07692307692 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 13 = 1.07692307692 (left: -> There are no possible next steps as the calculation is already complete.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 13 = 1.07692307692 (left: -> There are no possible next steps as the calculation is already complete. -> Calculation is already complete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No possible next steps as there is only one number left. -> None.",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 4.67."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 11 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2."
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2. -> 5 + 9 = 14 (left: 14 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2. -> 5 + 9 = 14 (left: 14 3) -> 14 / 3 = 4.67 (left: 4.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2. -> 5 + 9 = 14 (left: 14 3) -> 14 / 3 = 4.67 (left: 4.67) -> There are no possible next steps for the input 4.67.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 3 * 14 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 3 * 14 = 42 (left: 42) -> There are no possible next steps with just the number 42.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with just the number 42."
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 3 * 14 = 42 (left: 42) -> There are no possible next steps with just the number 42. -> None",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846153 (left: 10.153846153846153)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27) -> 11 * 27 = 297 (left: 297)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27) -> 11 * 27 = 297 (left: 297) -> 2 * 9 * 7 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "Since there is only one number in the input, there are no possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 11 = 24 (left: 14 24) -> 38 - 18 = 20 (left: 20 5) -> 20 / 5 = 4 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with the input of 42."
                }
            },
            "Step 8": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 3 * 14 = 42 (left: 42) -> There are no possible next steps with the input of 42. -> There are no possible next steps with the input of 42.",
                "Pruning": null
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> None, the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35 (left: 2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 + 8 = 10.5 (left: 8 10.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 + 8 = 10.5 (left: 8 10.5) -> 8 / 10.5 = 0.7619047619 (left: 0.7619047619)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)  -> 7 / 2 = 3.5 (left: 3.5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "None, the input is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "6 13"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "6 13"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 8 / 2.5 = 3.2 (left: 2.5 3.2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 8 / 2.5 = 3.2 (left: 2.5 3.2) -> 2.5 + 3.2 = 5.7 (left: 5.7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input of -17."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 5 + 9 = 14 (left: 14) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25) -> 3.25 + 2 = 5.25 (left: 2 5.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "6 13"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 + 13 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "6 13"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 13 / 6 = 2.16667 (left: 2.16667)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input of -17."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> -3 + 8 = 5 (left: 2 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> -3 + 8 = 5 (left: 2 5 14) -> 5 + 2 = 7 (left: 7 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> -3 + 8 = 5 (left: 2 5 14) -> 5 + 2 = 7 (left: 7 14) -> 7 + 14 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps with the input 1.5."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30) -> 36 - 30 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 5 14"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> -3 + 8 = 5 (left: 2 5 14) -> 2 + 5 = 7 (left: 7 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> -3 + 8 = 5 (left: 2 5 14) -> 2 + 5 = 7 (left: 7 14) -> 14 - 7 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "None, the input is only one number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 6 = 1.1667 (left: 4 1.1667)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 6 = 1.1667 (left: 4 1.1667) -> 4 * 1.1667 = 4.6668 (left: 4.6668)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 6 = 1.1667 (left: 4 1.1667) -> 4 * 1.1667 = 4.6668 (left: 4.6668) -> 4.6668 - 2 = 2.6668 (left: 2.6668)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "6 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 8 - 2.5 = 5.5 (left: 2.5 5.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 8 - 2.5 = 5.5 (left: 2.5 5.5) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168) -> 1 + 6 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 7 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 - 24 = -17 (left: -17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 - 24 = -17 (left: -17) -> There are no possible next steps with the input of -17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 + 8 = 10.5 (left: 8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "6 13"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 - 13 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "3 18"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 - 4 = 9 (left: 9) -> There are no possible next steps with the number 9 alone.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 8 - 2.5 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "2.5 8"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 * 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "6 13"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 7 = 0.8571428571428571 (left: 4 0.8571428571428571)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 7 = 0.8571428571428571 (left: 4 0.8571428571428571) -> 4 -",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 7 = 0.8571428571428571 (left: 4 0.8571428571428571) -> 4 - -> 4 / 2 = 2 (left: -)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "None, the input is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "2.5 8"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 / 4 = 1.75 (left: 1.75 6) -> 1.75 * 6 = 10.5 (left: 10.5) -> 10.5 - 8 = 2.5 (left: 2.5 8) -> 2.5 + 8 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> There are no possible next steps with just one number. -> Provide a new set of numbers to work with.",
                "Pruning": null
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 12 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 12 = -2 (left: -2 12) -> -2 * 12 = -24 (left: -24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 12 = -2 (left: -2 12) -> -2 * 12 = -24 (left: -24) -> -24 + 2 = -22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "-24 + 2 = -22"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 12 = -2 (left: -2 12) -> -2 * 12 = -24 (left: -24) -> -24 + 2 = -22 -> -24 / 2 = -12 (left: -12)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "10 10 12"
                }
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 10 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 10 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "12 / 0 = undefined"
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 10 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "102.85714285716 + 2 = 104.85714285716"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716) -> 102.85714285716 + 2 = 104.85714285716 -> 102.85714285716 * 2 = 205.71428571432",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716) -> 102.85714285716 + 2 = 104.85714285716 -> 102.85714285716 * 2 = 205.71428571432 -> 102.85714285716 - 2 = 100.85714285716 (left: 100",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "7 1 12"
                }
            },
            "Step 6": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 7 * 1 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 / 12 = 0.8333333333333334"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334 -> 10 * 12 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 / 10 = 1.2 (left: 10 1.2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 / 10 = 1.2 (left: 10 1.2) -> 10 / 1.2 = 8.33333 (left: 8.33333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 / 10 = 1.2 (left: 10 1.2) -> 10 / 1.2 = 8.33333 (left: 8.33333) -> There are no possible next steps for the input 8.33333 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716) -> 102.85714285716 + 2 = 104.85714285716",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps as the input provided is a single value and not a mathematical expression."
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two numbers and an operator.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two numbers and an operator. -> Some possible next steps could be:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two numbers and an operator. -> Some possible next steps could be: -> 8 + 8 = 16 (left: 2 16 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.19166666667 - 2 = -0.80833333333"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 1.43 * 10 = 14.3 (left: 14.3 12) -> 14.3 / 12 = 1.19166666667 (left: 1.19166666667) -> 1.19166666667 - 2 = -0.80833333333 -> 1.19166666667 + 2 = 3.19166666667 (left: -0.80833333333 3.19166666667)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12) -> 12 - 3.33 = 8.67 (left: 8.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12) -> 12 - 3.33 = 8.67 (left: 8.67) -> 8.67 - 2 = 6.67 (left: 6.67)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 10 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps as the input provided is a single value and not a mathematical expression."
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> There are no possible next steps as the input provided is a single value and not a mathematical expression.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please input a mathematical expression with at least two values and an operator.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please input a mathematical expression with at least two values and an operator. -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "-24 + 2 = -22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two numbers and an operator. -> Some possible next steps could be: -> 8 + 8 = 16 (left: 2 16 14) -> Input: 14 32 14",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two numbers and an operator. -> Some possible next steps could be: -> 8 + 8 = 16 (left: 2 16 14) -> Input: 14 32 14 -> 32 - 14 = 18 (left: 14 18)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "There are no possible next steps as the input provided is a single value and not a mathematical expression."
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two values to calculate the next steps.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two values to calculate the next steps. -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 / 12 = 0.8333333333333334"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334 -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "-24 + 2 = -22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "102.85714285716 + 2 = 104.85714285716"
                }
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716) -> 102.85714285716 + 2 = 104.85714285716 -> 102.85714285716 - 2 = 100.85714285716",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 7 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 1": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 * 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": ""
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 / 100 = 0.12 (left: 0.12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 * 10 = 100 (left: 12 100) -> 12 / 100 = 0.12 (left: 0.12) -> 0.12 + 0.12 = 0.24 (left: 0.24)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "-24 + 2 = -22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps for the input 8.33333 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 / 10 = 1.2 (left: 10 1.2) -> 10 / 1.2 = 8.33333 (left: 8.33333) -> There are no possible next steps for the input 8.33333 as it is already a single number. -> There are no possible next steps for the input 8.33333 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 / 12 = 0.8333333333333334"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334 -> None, as the result is already a decimal number.",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334 -> None, as the result is already a decimal number. -> There are no possible next steps as the result is already a decimal number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334 -> None, as the result is already a decimal number. -> There are no possible next steps as the result is already a decimal number. -> There are no possible next steps as the result is already a decimal number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.43 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 1.43 * 10 = 14.3 (left: 14.3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 1.43 * 10 = 14.3 (left: 14.3 12) -> 14.3 / 12 = 1.19166666667 (left: 1.19166666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 1.43 * 10 = 14.3 (left: 14.3 12) -> 14.3 / 12 = 1.19166666667 (left: 1.19166666667) -> 1.19166666667 - 2 = -0.80833333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "10 / 12 = 0.8333333333333334"
                }
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334 -> 10 - 12 = -2 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334 -> 10 - 12 = -2  -> 10 + 12 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "10 / 12 = 0.8333333333333334"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 10 / 12 = 0.8333333333333334 -> 10 - 12 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "-24 + 2 = -22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two numbers and an operator. -> Some possible next steps could be: -> 8 + 8 = 16 (left: 2 16 14) -> 16 / 2 = 8 (left: 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression. -> Please provide a mathematical expression with at least two numbers and an operator. -> Some possible next steps could be: -> 8 + 8 = 16 (left: 2 16 14) -> 16 / 2 = 8 (left: 8 14) -> 8 / 14 = 0.57 (left: 0.57)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "-24 + 2 = -22"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps as the input provided is a single value and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 + 10 = 22 (left: 10 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 + 10 = 22 (left: 10 22) -> 10 * 22 = 220 (left: 220)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 + 10 = 22 (left: 10 22) -> 10 * 22 = 220 (left: 220) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "3 3"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "3 3"
                }
            },
            "Step 7": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27 -> 27 / 9 = 3 (left: 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5 as it is already a single number and not a combination of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "35 2 39"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 + 2 = 39 -> 37 - 2 = 35 (left: 35 2 39) -> 35 - 2 = 33 (left: 33 39)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 + 2 = 39 -> 37 - 2 = 35 (left: 35 2 39) -> 35 - 2 = 33 (left: 33 39) -> 33 * 39 = 1287 (left: 1287)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "2 12 11"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 8 - 6 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 8 - 6 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 0.9091."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps because there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps for the input 0.9091."
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091) -> There are no possible next steps for the input 0.9091. -> There are no possible next steps for the input 0.9091.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091) -> There are no possible next steps for the input 0.9091. -> There are no possible next steps for the input 0.9091. -> There are no possible next steps for the input 0.9091 as it is already in its simplest form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 6 + 8 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 6 + 8 = 14 (left: 14 14) -> 14 + 14 = 28",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 + 2 = 39",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 + 2 = 39 -> 37 - 2 = 35 (left: 35 2 39)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps for the input 0.9091."
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091) -> There are no possible next steps for the input 0.9091. -> 0.9091 + 2 = 2.9091 (left: 2.9091)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 14 - 8 = 6 (left: 6 14) -> 6 / 14 = 0.43 (left: 0.43 14)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1 (left: 7 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1 (left: 7 1) -> 7 + 1 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1 (left: 7 1) -> 7 + 1 = 8 -> 1 + 7 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 12 11"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24) -> 24 / 11 = 2.1818181818181817 (left: 2.1818181818181817)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24) -> 24 / 11 = 2.1818181818181817 (left: 2.1818181818181817) -> 2.1818181818181817 - 2 = 0.181818181",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 14 / 6 = 2.33 (left: 2.33 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 14 / 6 = 2.33 (left: 2.33 14) -> 14 - 2.33 = 11.67 (left: 11.67)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps for the input 0.9091."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 * 2 = 220 (left: )",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 6 + 11 = 17 (left: 17) -> There are no possible next steps with the input of 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 6 * 8 = 48 (left: 48 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 6 * 8 = 48 (left: 48 14) -> Input: 7 3 6",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 - 2 = 108 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6 8 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 8 - 6 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 8 - 6 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps for the input 0.9091."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 5 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091) -> There are no possible next steps for the input 0.9091.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 24 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 24 11) -> 24 - 11 = 13 (left: 13) -> 13 * 2 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps for the input 0.9091."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 14 - 6 = 8 (left: 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 14 - 6 = 8 (left: 8 14) -> 14 - 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input of 17."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with?",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with? -> - Provide the numbers or operations you would like to work with.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "7 17"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 5 18"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 18 / 2 = 9 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 5 18) -> 18 / 2 = 9 (left: 5 9) -> 5 / 9 = 0.5555555555555556 (left: 0.5555555555555556)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 8 - 6 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 8 - 6 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 2 12)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 2 35 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13) -> 12 / 13 = 0.923076923 (left: 0.923076923)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 11 + 2 = 13 (left: 12 13) -> 12 / 13 = 0.923076923 (left: 0.923076923) -> 0.923076923 + 2 = 2.923076923",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 8 - 6 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 8 - 6 = 2 (left: 2 14) -> 14 - 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 + 11 = 21 (left: 21) -> 21 + 2 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "- Provide the numbers or operations you would like to work with."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "6 8 14"
                }
            },
            "Step 7": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 6 * 8 = 48 (left: 48 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 - 2 = 6 (left: 6 8 14) -> 6 * 8 = 48 (left: 48 14) -> 48 / 14 = 3.43 (left: 3.43)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2.1818181818181817 - 2 = 0.181818181"
                }
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556) -> 1.5555555555555556 + 2 = 3.5555555555555554 (left: 3.5555555555555554)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3 -> 3 / 3 = 1 (left: 1 8 "
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21) -> 21 / 2 = 10.5"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 + 9 = 10.33 (left: 10.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 + 9 = 10.33 (left: 10.33) -> There are no possible next steps for the number 10.33 as it is not a whole number."
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 4 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57) -> 5 * 7 = 35 (left: 35)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78) -> 78 / 8 = 9.75 (left: 9.75)"
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19) -> 18 * 19 = 342 (left: 342)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19) -> 18 * 19 = 342 (left: 342) -> 3 - 42 = -39 (left: -39)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 9 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 16) -> Input: 22 10 96 2.67",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 16) -> Input: 22 10 96 2.67 -> 22 / 10 = 2.2 (left: 2.2",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "86 - "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 16 = 12 (left: 12 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 16 = 12 (left: 12 16) -> 16 - 12 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "-6.33 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 * 2 = 4.9090909091",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 - 15.25 = -3.25 (left: -3.25)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 12 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 - 12 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 12 / ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 12 /  -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "-6.33 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 12 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 10 * 12 = 120 (left: 120 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 10 * 12 = 120 (left: 120 54) -> 120 + 54 = 174 (left: 174)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 10 * 12 = 120 (left: 120 54) -> 120 + 54 = 174 (left: 174) -> 1 * 7 * 4 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 9 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 16 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 16 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 * 16 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 12 / 0.75 = 16 (left: 16 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 12 / 0.75 = 16 (left: 16 16) -> 16 * 16 = 256 (left: 256)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "86 - "
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> There are no possible next steps for the input 2.45454545455 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33) -> 12 + 21.33 = 33.33 (left: 33.33)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "-6.33 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67) -> 1.67 - 8 = -6.33 (left: -6.33 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3.166666",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3.166666 -> 19 * 6 = 114 (left: 114)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3.166666 -> 19 * 6 = 114 (left: 114) -> 14 - 1 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.75 12 16"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 * 12 = 192 (left: 0.75 192)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 * 12 = 192 (left: 0.75 192) -> 192 - 0.75 = 191.25 (left: 191.25)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "86 - "
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13  -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13  -> 13 - 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 9 22"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 - 22 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 - 22 = 32 (left: 32) -> There is only one possible next step: 32 / 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "86 - "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 - 15.25 = -3.25 (left: -3.25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2.4545454545454546 / 2 = 1.2272727272727273"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 + 22 = 31 (left: 6 31)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 + 22 = 31 (left: 6 31) -> 6 * 31 = 186 (left: 186)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 + 22 = 31 (left: 6 31) -> 6 * 31 = 186 (left: 186) -> 86 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33) -> 12 / 21.33 \u2248 0.56 (left: 0.56 21.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33) -> 12 / 21.33 \u2248 0.56 (left: 0.56 21.33) -> 0.56 * 21.33 = 11.92 (left: 11.92)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.75 12 16"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 /  -> 16 / 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "2.4545454545454546 / 2 = 1.2272727272727273"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 12 19"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665) -> 2.1666666666666665 + 8 = 10.166666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 + 12 = 12.75 (left: 12.75 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 0.75 + 12 = 12.75 (left: 12.75 16) -> 12.75 * 16 = 204 (left: 204)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "12 - 12 = 0"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 / 19 = 0.9473684210526315 (left: 0.9473684210526315)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 / 19 = 0.9473684210526315 (left: 0.9473684210526315) -> 0.9473684210526315 - 0.9473684210526315 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 9 = 2.44 (left: 6 2.44)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 9 = 2.44 (left: 6 2.44) -> 6 * 2.44 = 14.64 (left: 14.64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 9 = 2.44 (left: 6 2.44) -> 6 * 2.44 = 14.64 (left: 14.64) -> There are no possible next steps for the input 14.64 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 - 0.75 = 15.25 (left: 12 15.25) -> 12 / 15.25 = 0.787704918 (left: 0.787704918)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "0.75 12 16"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.4545454545454546 (left: 2.4545454545454546)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.4545454545454546 (left: 2.4545454545454546) -> 2.4545454545454546 / 2 = 1.2272727272727273",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 16 22)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 16 22) -> 16 - 6 = 10 (left: 10 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 6 16 22) -> 16 - 6 = 10 (left: 10 22) -> 10 * 22 = 220 (left: 220)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "0.9473684210526315 - 0.9473684210526315 = 0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.75 12 16"
                }
            },
            "Step 7": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 / 12 = 0.75 (left: 0.75 12 16) -> 16 / 0.75 = 21.33 (left: 12 21.33) -> 21.33 - 12 = 9.33 (left: 9.33)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "0.75 12 16"
                }
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21) -> 21 / 18 = 1.1667 (left: 1.1667)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 9 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps as there are no other numbers provided to perform operations with. -> No possible next steps."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135) -> 135 * 2 = 270 (left: 108 270)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18) -> No possible next steps, the input number is already the result."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 / 35.91 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 18 12"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 6 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)  -> Answer: ((9 + 9) - 6) + 12 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 - 9 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 - 9 = 3 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 - 9 = 3 (left: 6 3) -> 6 / 3 = 2 (left: 2) -> No more possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 3 - 9 = -6 (left: -6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 3 - 9 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 3 - 9 = -6 (left: -6) -> There are no possible next steps with the input of -6. -> There are no possible next steps with the input of -6."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180) -> There are no possible next steps for the input 180.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 3 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 3 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 3 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48) -> 48 / 2 = 24 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 18 12"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 / 6 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> No possible next steps, the input is a single number."
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> Input: 1.5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> Input: 1.5 -> 1.5 - 1.5 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> Input: 1.5 -> 1.5 - 1.5 = 0 (left: 0) -> No valid input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6 9) -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6 9) -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps with the input 0.6666666666666666."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27) -> There are no possible next steps for the input 27.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3) -> There is only one possible next step: 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3) -> There is only one possible next step: 3. -> 3 + 1 = 4"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 - 12 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 - 12 = 3 (left: 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 9 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> 3 - 9 = -6 (left: -6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> 3 - 9 = -6 (left: -6) -> There are no possible next steps as the input does not match any of the previous results."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> None, as there is only one number given in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9  -> 9 - 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14) -> 14 + 14 = 28"
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined. -> Apologies for the confusion. Please provide a valid set of numbers for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 * 3) * 6) - 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18) -> 3 * 18 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 * 3) * 6) - 12 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 * 3) * 6) - 12 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> There are no possible next steps as there are no more numbers to operate on. The final result is 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48) -> There are no possible next steps for the number 48 as it is already a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 + 12) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 6 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 * 3) * 6) - 12 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33) -> There is only one number given (1.33) so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 6"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 6 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 + 12) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 / 24 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It seems like there was an error in the input provided. Can you please provide the numbers you would like to use for the next steps?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 * 3) * 6) - 12 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24 144"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 144 - 24 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 * 3) * 6) - 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 * 3) * 6) - 12 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8) -> No possible next steps, the input is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 - 12 = 24 (left: 24) -> Answer: ((2 * 3) * 6) - 12 = 24"
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 * 1 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 * 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 * 1 = 2 (left: 2) -> 2 + 2 = 4 -> Input: 2 * 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3.6 80 2"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 18 / 5 = 3.6 (left: 3.6 80 2) -> 80 - 3.6 = 76.4 (left: 2 76.4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 18 / 5 = 3.6 (left: 3.6 80 2) -> 80 - 3.6 = 76.4 (left: 2 76.4) -> 2 * 76.4 = 152.8 (left: 152.8)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Please provide a valid input to continue the calculation."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 10 * 2 = 20 (left: 20) -> There are no possible next steps with the number 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 18 / 5 = 3.6 (left: 3.6 80 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There is only one number given, so no possible next steps can be determined."
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> There is only one number given, so no possible next steps can be determined. -> Input is invalid. Please provide at least two numbers separated by spaces.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 5 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3.6 80 2"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 18 / 5 = 3.6 (left: 3.6 80 2) -> 80 - 3.6 = 76.4 (",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 18 / 5 = 3.6 (left: 3.6 80 2) -> 80 - 3.6 = 76.4 ( -> 80 + 3.6 = 83.6 (left: 83.6)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 - 1.5 =  0.5 (left: 0.5 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 6 1) -> 6 + 1 = 7 -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with just the number 9."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with just the number 9."
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with just the number 9. -> 9 - 1 = 8 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "3 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 14) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 = 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 54)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 + 5 = 9 (left: 6 9) -> 6 * 9 = 54 (left: 54) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20) -> 20 - 6 = 14 (left: 14) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 + 5 = 9 (left: 8 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 + 5 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 + 5 = 9 (left: 8 9) -> 8 - 9 = -1 (left: -1) -> Please provide a valid input to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3.6 80 2"
                }
            },
            "Step 7": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 18 / 5 = 3.6 (left: 3.6 80 2) -> 80 / 3.6 = 22.2222 (left: 2 22.2222)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 8 / 4 = 2 (left: 5 2) -> 5 * 2 = 10 (left: 10) -> 18 / 5 = 3.6 (left: 3.6 80 2) -> 80 / 3.6 = 22.2222 (left: 2 22.2222) -> 22.2222 / 2 = 11.1111 (left: 11.1111 22.2222)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 * 2 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 1 * 2 = 2 (left: 2) -> 2 / 2 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There is only one number given, so no possible next steps can be determined."
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> There is only one number given, so no possible next steps can be determined. -> Not enough numbers provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 4 1"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24) -> 24 + 5 = 29 (left: 5 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 * 4 = 24 (left: 5 24) -> 24 + 5 = 29 (left: 5 29) -> 29 + 5 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There is only one number given, so no possible next steps can be determined."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2 = 6"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 2 = 6) -> 6 + 2 = 8 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> There is only one number given, so no possible next steps can be determined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 4 * 5 = 20 (left: 8 20) -> 20 - 8 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "2 = 6"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There is only one number given, so no possible next steps can be determined."
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> There is only one number given, so no possible next steps can be determined. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> - 100 * 2 = 200",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 10 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 10 60) -> 10 + 60 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.6666666666666667 + "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25 -> 8 - 1.25 = 6.75",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5) -> 2.5 * 5 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 2 + 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> There are no possible next steps with just the number 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1.6666666666666667 + "
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 +  -> 1.6666666666666667 + 8 = 9.6666666666666667 (left: empty)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 4 10"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - (-6.75) = 14.75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - (-6.75) = 14.75 -> 8 - (-6.75) = 8 + 6.75 = 14.75 (left: 14.75)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "- 100 * 2 = 200"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10) -> 10 + 5 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10) -> 10 + 5 = 15 (left: 15) -> 15 - 8 = 7 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - (-6.75) = 14.75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - (-6.75) = 14.75 -> 8 - (-6) = 14.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)  ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25 -> 8 - 1.25 = 6.75",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 4 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 6"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 4 + 6 = 10 (left: 2 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 4 + 6 = 10 (left: 2 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 4 + 6 = 10 (left: 2 10) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - (-6.75) = 14.75",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - (-6.75) = 14.75 -> 8 - (-6.75) = 14.75",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 4 6"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 6"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 2 * 4 = 8 (left: 8 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 2 * 4 = 8 (left: 8 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 2 * 4 = 8 (left: 8 6) -> 8 - 6 = 2 (left: 2) -> Input must have at least 3 numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25 -> 8 - 6.75 = 1.25",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 4 10"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 4 6"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 2 + 4 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 2 + 4 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 2 + 4 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None - since there is only one number provided, there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 * (-6.75) = -54 (left: -54)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Input must have at least 3 numbers to perform operations."
                }
            },
            "Step 8": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> 2 * 4 = 8 (left: 8 6) -> 8 - 6 = 2 (left: 2) -> Input must have at least 3 numbers to perform operations. -> Invalid input. Please provide at least 3 numbers to perform operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240) -> 240 / 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 4 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25 -> 8 + 6.75 = 14.75",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> Possible -> Please provide more specific instructions for the next step you would like to take.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> Possible -> Please provide more specific instructions for the next step you would like to take. -> - Add 8 and 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "8 -6.75"
                }
            },
            "Step 7": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)   -> 1.25 - 8 = -6.75 (left: 8 -6.75) -> 8 - 6.75 = 1.25 -> 8 / 6.75 \u2248 1.1852 (left: 1.1852)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 -6.75"
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 * 9 = 27 (left: 4 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 * 9 = 27 (left: 4 27) -> 27 - 4 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 * 9 = 27 (left: 4 27) -> 27 - 4 = 23 (left: 23) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 * 3 = 9 (left: 9 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 * 3 = 9 (left: 9 7) -> 9 / 7 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 * 3 = 9 (left: 9 7) -> 9 / 7 = 1.28571428571 (left: 1.28571428571) -> 1.28571428571 / 2 = 0.64285714285"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 + 3 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 + 3 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 4 + 3 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> There are no possible next steps as there are no other numbers provided to perform operations with."
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number provided (1.5), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 + 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 + 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14) -> No possible next steps as there is only one number left."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps since there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 4": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 + 3 = 4.67 (left: 4.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 + 3 = 4.67 (left: 4.67) -> 4.67 * 2 = 9.34"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 + 3 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 + 3 = 6 (left: 6 7) -> 6 - 7 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 + 3 = 6 (left: 6 7) -> 6 - 7 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 3 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 * 7 = 21 (left: 21) -> 21 + 3 = 24 (left: 24) -> Answer: ((3 + 4) * 3) + 3 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 3 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 3 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> Input: 4 9 12",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> Input: 4 9 12 -> 4 * 9 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> Input: 4 9 12 -> 4 * 9 = 36 (left: 36 12) -> 36 + 12 = 48 (left: 48)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * (3 - 3)) * 4 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 4"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 - 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left -> 3 - 9 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 4"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 * 3 = 72 (left: 72"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.33 3 3"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 + 6 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 3 9 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1) -> There are no possible next steps with just the number 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 7 / 3 = 2 (left: 3 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 7 / 3 = 2 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 7 / 3 = 2 (left: 3 2) -> 3 / 2 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5."
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps: -> There are no possible next steps as the input has already been evaluated.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 7 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 7 9) -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 2 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 - 9 = -8 (left: -8 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 - 9 = -8 (left: -8 9) -> -8 / 9 = -0.8888888888888888 (left: -0.8888888888888888)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input has already been evaluated."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 26 - 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> Input: 3 9 27",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 / 2 = 4.5 (not a valid operation)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 / 2 = 4.5 (not a valid operation) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 / 2 = 4.5 (not a valid operation) -> 9 / 2 = 4.5 (left: 4.5) -> None.",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 26"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 5 * 10 = 50 (left: 50 15)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 5 * 10 = 50 (left: 50 15) -> 50 - 15 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 - 26 = -18 (left: -18)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 7 9) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible -> It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible -> It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps. -> Please provide a valid set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 + 2 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 + 2 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 + 2 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 + 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1.25 + 2 = 3.25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> Input: 34 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> Input: 34  -> 34 - 8 = 26 (left: 8 26)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2) -> 2.5 / 2 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2) -> 2.5 / 2 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 3 = 24 (left: 24 26)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 3 = 24 (left: 24 26) -> 24 / 26 = 0.9230769230769231 (left: 0.9230769230769231)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1.25 + 2 = 3.25"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> Input: 6 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 * 2 = 4 (left: 4 9) -> Input: 6 3 -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "8 26"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 5 + 12 = 17 (left: 17 20)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5) -> 1.5 * 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 2 9"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 2 + 4 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 2 + 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 2 + 4 = 6 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 + 2 = 15 (left: 13 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 + 26 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "No possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> No possible next steps as there is only one number left. -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> Input: 5 7",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> Input: 5 7 -> 5 / 7 = 0.71 (left: 0.71)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 4 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 + 2 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 + 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 + 2 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps as the input has already been evaluated."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1.25 + 2 = 3.25"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2) -> 2.5 / 2 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 -> 3.25 - 1.25 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 9 - 2 = 7 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5) -> There are no possible next steps with the input of 3.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 26"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8 26) -> 8 * 26 = 208 (left: 208)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1.25 + 2 = 3.25"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2) -> 2.5 / 2 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25 -> 2 / 1.25 = 1.6 (left: 1.6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 110 - 13 = 97 (left: 97)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 110 - 13 = 97 (left: 97) -> 97 + 2 = 99",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with. -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 * 36 = 3960 (left: 3960)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 10 = 110 (left: 110 36) -> 110 * 36 = 3960 (left: 3960) -> 396 + 0 = 396 (left: 396)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "3.0555555555555554 + 1 = 4.0555555555555554"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 * 11 = 110 (left: 110 36) -> 110 / 36 = 3.0555555555555554 (left: 3.0555555555555554) -> 3.0555555555555554 + 1 = 4.0555555555555554 -> 3.0555555555555554 / 1 = 3.0555555555555554 (left: 3.0555555555555554 1 4.0555555555555554)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 * 11 = 110 (left: 110 36) -> 110 / 36 = 3.0555555555555554 (left: 3.0555555555555554) -> 3.0555555555555554 + 1 = 4.0555555555555554 -> 3.0555555555555554 / 1 = 3.0555555555555554 (left: 3.0555555555555554 1 4.0555555555555554) -> 3.0555555555555554 + 1 = 4.0555555555555554 (left: 4.0555555555555554 4.0555555555555554)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step for the input 36:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 + 21 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there are no other numbers given to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 37."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37) -> There are no possible next steps with the input 37. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "97 + 2 = 99"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 110 - 13 = 97 (left: 97) -> 97 + 2 = 99 -> 97 / 2 = 48.5 (left: 48.5 2 99)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45) -> There are no possible next steps with just the number 45.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 11 = 25 (left: 10 25)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 11 = 25 (left: 10 25) -> 25 / 10 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 11 = 25 (left: 10 25) -> 25 / 10 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "97 + 2 = 99"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 110 - 13 = 97 (left: 97) -> 97 + 2 = 99 -> 97 - 2 = 95",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 110 - 13 = 97 (left: 97) -> 97 + 2 = 99 -> 97 - 2 = 95 -> 95 - 8 = 87 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25) -> There is no clear operation to perform with the number 11.25 alone. If you provide additional numbers or specify an operation, I can suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 13) -> 13 - 3 = 10 (left: 10) -> There are no further possible next steps with the input 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "7 - 5 = 2"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 * 36 = 756 (left: 756) -> 7 - 5 = 2 -> 7 * 5 = 35 (left: 35 = 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 * 36 = 756 (left: 756) -> 7 - 5 = 2 -> 7 * 5 = 35 (left: 35 = 2) -> 35 * 2 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "11 + 36 = 47"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 36 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 36 =  -> 11 * 36 = 396",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 36 =  -> 11 * 36 = 396 -> 11 + 36 = 47",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 37."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37) -> There are no possible next steps with the input 37. -> There are no possible next steps with the input 37.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37) -> There are no possible next steps with the input 37. -> There are no possible next steps with the input 37. -> No possible next steps with the input 37.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35) -> 35 + 2 = 37 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps as there are no other numbers given to perform operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps as there are no other numbers given to perform operations with."
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with. -> No more possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with. -> No more possible next steps. -> There are no more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 = ",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 =  -> 5 - 3 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 * 11 = 110 (left: 110 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 * 11 = 110 (left: 110 36) -> 110 / 36 = 3.0555555555555554 (left: 3.0555555555555554)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 * 11 = 110 (left: 110 36) -> 110 / 36 = 3.0555555555555554 (left: 3.0555555555555554) -> 3.0555555555555554 + 1 = 4.0555555555555554",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "97 + 2 = 99"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13 110) -> 110 - 13 = 97 (left: 97) -> 97 + 2 = 99 -> 97 * 2 = 194 (left: 194)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "5 - 3 = 2"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 =  -> 5 - 3 = 2 -> 5 * 3 = 15 (left: 15 = 2)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216) -> 216 / 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 * 36 = 756 (left: 756)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36) -> 21 * 36 = 756 (left: 756) -> 7 - 5 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "11 + 36 = 47"
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 36 =  -> 11 * 36 = 396 -> 11 + 36 = 47 -> 11 - 36 = -25 (left: -25 11 47)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 * 36 =  -> 11 * 36 = 396 -> 11 + 36 = 47 -> 11 - 36 = -25 (left: -25 11 47) -> -25 + 11 = -14 (left: -14 47)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 11 36"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37) -> There are no possible next steps with the input 37.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 37."
                }
            },
            "Step 7": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 11 - 10 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37) -> There are no possible next steps with the input 37. -> None",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "3.0555555555555554 + 1 = 4.0555555555555554"
                }
            },
            "Step 8": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 * 11 = 110 (left: 110 36) -> 110 / 36 = 3.0555555555555554 (left: 3.0555555555555554) -> 3.0555555555555554 + 1 = 4.0555555555555554 -> 3.0555555555555554 - 1 = 2.0555555555555554",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1 1.28571428571)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1 1.28571428571) -> 1 + 1.28571428571 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1 1.28571428571) -> 1 + 1.28571428571 = 2.28571428571 (left: 2.28571428571) -> 2.28571428571 * 8 = 18.28571428568",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 / 10 = 1.1 (left: 1.1 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 / 10 = 1.1 (left: 1.1 63) -> 1.1 * 63 = 69.3 (left: 69.3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 / 10 = 1.1 (left: 1.1 63) -> 1.1 * 63 = 69.3 (left: 69.3) -> 69.3 - 2 = 67.3 (left: 67.3)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "23.857142857142857 34.857142857142857"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 + 34.857142857142857 = 58.714285714285714 (left: 34.857142857142857 58.714285714285714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 + 34.857142857142857 = 58.714285714285714 (left: 34.857142857142857 58.714285714285714) -> 34.857142857142857 * 58.714285714285714 = 2049.142857142857 (left: 58.714285714285714 2049.142857142857)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "7 9 "
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 * 2 = 2.5714285714285716",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 34.857142857142857 - 23.857142857142857 = 11 (left: 11 34",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 34.857142857142857 - 23.857142857142857 = 11 (left: 11 34 -> 34 / 11 = 3.09 (left: 3.09)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.74603 - 2 = -0.25397"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 + 9 = 16 (left: 1 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 + 9 = 16 (left: 1 16) -> 1 - 16 = -15 (left: -15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 + 9 = 16 (left: 1 16) -> 1 - 16 = -15 (left: -15) -> -15 + 2 = -13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 0.8555555556 as it is already a single number."
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90) -> 77 / 90 = 0.8555555556 (left: 0.8555555556) -> There are no possible next steps for the input 0.8555555556 as it is already a single number. -> There are no possible next steps for the input 0.8555555556 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90) -> 77 / 90 = 0.8555555556 (left: 0.8555555556) -> There are no possible next steps for the input 0.8555555556 as it is already a single number. -> There are no possible next steps for the input 0.8555555556 as it is already a single number. -> There are no possible next steps for the input 0.8555555556 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 - 34.857142857142857 = -11.000000000000 (left: -11.000000000000 34.857142857142857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 - 34.857142857142857 = -11.000000000000 (left: -11.000000000000 34.857142857142857) -> -11 * 34.857142857142857 = -383.4285714285714 (left: -383.4285714285714)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 63"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5 (left: 10 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5 (left: 10 5) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 11 = 5 (left: 10 5) -> 10 - 5 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 + 34.857142857142857 = 58.714285714285714 (left: 34.857142857142857 58.714285714285714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 + 34.857142857142857 = 58.714285714285714 (left: 34.857142857142857 58.714285714285714) -> 58.714285714285714 - 34.857142857142857 = 23.857142857142",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1) -> -2 - 1 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1) -> -2 - 1 = -3 (left: -3) -> There are no possible next steps as the input is not valid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 10 11 16) -> 11 - 10 = 1 (left: 1 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 10 11 16) -> 11 - 10 = 1 (left: 1 16) -> 16 / 1 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 34.857142857142857 +",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 34.857142857142857 + -> 34.857142857142857 + 8 = 42.857142857142857 (left: )",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90) -> 77 / 90 = 0.8555555556 (left: 0.8555555556)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90) -> 77 / 90 = 0.8555555556 (left: 0.8555555556) -> There are no possible next steps for the input 0.8555555556 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> 11 + 53 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53) -> 11 + 53 = 64 (left: 64) -> 64 - 2 = 62 (left: 2)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 0.8555555556 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 * 34.857142857142857 = 833.428571",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 * 34.857142857142857 = 833.428571 -> The next step could be to divide 833.428571 by another number, add to it, subtract from it, or multiply it by another number. Without knowing the specific operation or number you want to use next, there are multiple possibilities for the next step.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90) -> 4 * 11 = 44 (left: 44 90)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90) -> 4 * 11 = 44 (left: 44 90) -> 44 * 90 = 3960 (left: 3960)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 11 16"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 11 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 11 83)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 7 = 83 (left: 11 83) -> 11 * 83 = 913 (left: 913)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 + 34.857142857142857 = 58.714285714285714 (left: 34.857142857142857 58.714285714285714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 + 34.857142857142857 = 58.714285714285714 (left: 34.857142857142857 58.714285714285714) -> 34.857142857142857 + 58.714285714285714 = 93.57142857142857 (left: 58.714285714285714 93.57142857142857)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 77 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 77 19) -> 77 * 19 = 1463 (left: 1463)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 77 19) -> 77 * 19 = 1463 (left: 1463) -> 14 + 6 = 20 (left: 1",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "7 11 90"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 11"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 11 = 52 (left: 10 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 11 = 52 (left: 10 52) -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 + 34.857142857142857 = 58.714285714285714 (left: 34.857142857142857 58.714285714285714)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 + 34.857142857142857 = 58.714285714285714 (left: 34.857142857142857 58.714285714285714) -> 34.857142857142857 - 58.714285714285714 = -23.857142857142857 (left: -23.857142857142857 58.714285714285714)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11) -> 11 / 6.3 = 1.74603 (left: 1.74603)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11) -> 11 / 6.3 = 1.74603 (left: 1.74603) -> 1.74603 - 2 = -0.25397",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 1 + 63 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63) -> 1 + 63 = 64 (left: 64) -> 64 - 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps as the input is not valid."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 - 34.857142857142857 = -11 (left: -11 34.857142857142857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 - 34.857142857142857 = -11 (left: -11 34.857142857142857) -> -11 - 34.857142857142857 = -45.857142857142857 (left: -45.857142857142857)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "8 11"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 7 9 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "10 11 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 10 11 16) -> 16 - 11 = 5 (left: 10 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 10 11 16) -> 16 - 11 = 5 (left: 10 5) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 10 11 16) -> 16 - 11 = 5 (left: 10 5) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50 provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "23.857142857142857 34.857142857142857"
                }
            },
            "Step 7": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 - 34.857142857142857 = -11 (left: -11 34.857142857142857)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 + 23.857142857142857 = 34.857142857142857 (left: 23.857142857142857 34.857142857142857) -> 23.857142857142857 - 34.857142857142857 = -11 (left: -11 34.857142857142857) -> -11 * 34.857142857142857 = -383.4285714285714 (left: -383.4285714285714)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1.74603 - 2 = -0.25397"
                }
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> No possible next steps with just the number 70.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps for the input 0.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 1 2"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 / 1 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 / 1 = 1 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 25"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 + 8 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 + 8 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 15.5)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "1 3 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 10 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 + 10 = 17 (left: 10 17) -> 10 / 17 \u2248 0.588 (left: 0.588)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There are no possible next steps for the input 0.6666666666666666."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 25"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 + 8 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25) -> 8 * 25 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "1 + 1 = 2"
                }
            },
            "Step 8": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 / 3 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> 1 + 1 = 2 -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 / 3 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 / 3 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 / 3 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 1 2"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 * 1 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 * 1 = 1 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps for the input 0.6666666666666666."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> 17 * 2 = 34 (left: 8 8 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 1 2"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 2 * 1 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 2 * 1 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps with just the number 70."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666) -> There are no possible next steps for the input 0.6666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1.42857142857 2.85714285714"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 1.42857142857 2.85714285714) -> 1.42857142857 + 2.85714285714 = 4.28571428571 (left: 4.28571428571)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 5 7"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 1 2"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 * 1 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 * 1 = 1 (left: 1 2) -> 2 * 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1.42857142857 2.85714285714"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 + 8 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 + 8 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 25"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 + 8 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25) -> 8 * 25 = 200 (left: 200)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps with just the number 70."
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> No possible next steps with just the number 70. -> There are no possible next steps with just the number 70.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps for the input 0.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4) -> 1.4 * 2 = 2.8 -> 1.4 / 2 = 0.7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 1 2"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 + 1 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 + 1 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 5 9) -> 9 - 5 = 4 (left: 4) -> 4 / 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 5 7"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 * 2 = 2.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 1 2"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 + 1 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2 -> 1 / 1 = 1 (left: 1 1 2) -> 1 + 1 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.125 * 2 = 2.25"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 7 * 25 = 175 (left: 175)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 7 * 25 = 175 (left: 175) -> 175 * 1 = 175 (left: none)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 5 "
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 3 * 7 = 21 (left: 1 21)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 3 * 7 = 21 (left: 1 21) -> 21 / 1 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 3 * 7 = 21 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "8 25"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 + 8 = 17 (left: 17) -> 17 + 8 = 25 (left: 8 25) -> 25 + 8 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.125 * 2 = 2.25"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125) -> 1.125 * 2 = 2.25 -> 2 * 1.125 = 2.25 (left: 2.25 2.25)",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 / 4.67 = 0.64 (left: 0.64)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 / 2 = 0.835"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333) -> 1.0833333333333333 * 8 = 8.666666666666666 (left: 8 8.666666666666666)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4) -> There is only one number given, so there are no possible next steps to perform any operations on."
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54) -> 4 * 54 = 216 (left: 216)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54) -> 4 * 54 = 216 (left: 216) -> 216"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (3 * (9 - 4))) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17) -> 17 + 8 = 25"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 / 3 = 1.6666666666666667 (left: 1.666666666666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 / 3 = 1.6666666666666667 (left: 1.666666666666666 -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 / 3 = 1.6666666666666667 (left: 1.666666666666666 -> There are no possible next steps with the given input. -> There are no possible next steps with the given input."
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16) -> 9 + 16 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> There is only one number, so there are no possible next steps."
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 / 5 = 5 (left: 5)"
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 2 8"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step?",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 + 40 = 48 (left: 40)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 0.1875."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875. -> 0.1875 * 2 = 0.3750 (left: 0.3750)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 6.75."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "0 6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "- Prioritize certain operations over others (e.g. addition before subtraction"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 2 + 8 = 10 (left: 10 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 2 + 8 = 10 (left: 10 8 14) -> 14 - 10 = 4 (left: 8 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 - 8 = 46 (left: 46)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 54 8) -> 54 - 8 = 46 (left: 46) -> 46 is already a single number, no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "- Prioritize certain operations over others (e.g. addition before subtraction"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 2 * 8 = 16 (left: 16 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 2 * 8 = 16 (left: 16 8 14) -> 14 + 8 = ",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 14)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 14) -> 5 + 14 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 6 "
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = - -> 6 - 8 = -2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = - -> 6 - 8 = -2 -> 6 * 8 = 48 (left: -2 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "- Prioritize certain operations over others (e.g. addition before subtraction"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6 + 2 = 8"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62) -> 6 + 2 = 8 -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 64"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 * 8 = 64 (left: 64) -> 64 + 2 = 66 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 - 8 = -2 (left: -2 8) -> 3 + 6 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 64"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "- Prioritize certain operations over others (e.g. addition before subtraction"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 8 / 2 = 4 (left: 10 4 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 8 / 2 = 4 (left: 10 4 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 6 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23 -> 21 - 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 2 8"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 ( -> 48 / 6 = 8 (left: 8 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 ( -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6 + 2 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "- Prioritize certain operations over others (e.g. addition before subtraction"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 2 + 8 = 10 (left: 10 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 2 + 8 = 10 (left: 10 8 14) -> 14 + 10 = 24 (left: 8 14 24)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15) -> No further calculations can be done with the number 15 alone.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15) -> No further calculations can be done with the number 15 alone. -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 2"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left: -> 9 - 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 + 9 = 17 (left: -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 8 + 40 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "There are no possible next steps for the input 0.1875."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875) -> There are no possible next steps for the input 0.1875. -> There are no possible next steps for the input 0.1875.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 18 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 54 / 8 = 6.75 (left: 6.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 54 / 8 = 6.75 (left: 6.75) -> There are no possible next steps with the input 6.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "- Prioritize certain operations over others (e.g. addition before subtraction"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 14 + 4 = 18 (left: 8 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 3 2 8) -> Possible -> There are many possible next steps depending on the operations you want to perform. Can you provide more specific instructions or criteria for selecting the next step? -> - Prioritize certain operations over others (e.g. addition before subtraction) -> 14 + 4 = 18 (left: 8 18) -> 8 - 18 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "- Prioritize certain operations over others (e.g. addition before subtraction"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "6 + 2 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> 48 / 8 = 6 (left: 6 8) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "46 is already a single number, no possible next steps."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62) -> 6 + 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 2 = 6 (left: 6 3 ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 2 = 6 (left: 6 3  -> 6 + 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 3 * 2 = 6 (left: 6 3  -> 6 + 3 = 9 (left: 9) -> 8 + 9 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "8 48"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 =  -> 6 * 8 = 48 -> 48 / 6 = 8 (left: 8 48) -> Possible next steps: -> There are no possible next steps with the input \"Possible next steps:\".",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 + 7 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 + 7 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 + 7 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> No possible next steps with just one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> No possible next steps with just one number. -> Input more numbers to continue the calculations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72) -> There are no possible next steps for the input 72 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> None.",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There is only one number provided (18.24"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16) -> 1.14 * 16 = 18.24 (left: 18.24) -> There is only one number provided (18.24), so there are no possible next steps to perform any operations. -> There is only one number provided, so no arithmetic operations can be performed on it.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps for the number 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 + 7 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 + 7 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 + 7 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> There is only one number given, so there are no possible operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> Input more numbers to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> Input more numbers to perform operations. -> Performing operations with the provided numbers.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please provide numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> Input another number to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> Input another number to perform operations. -> Division:",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the input 0.875."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7) -> Input: 15",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7) -> Input: 15 -> There is only one number given, so there are no possible next steps to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 -0.67"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> 1.33 - 2 = -0.67 (left: 2 -0.67) -> 2 + (-0.67) = 1.33",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> 1.33 - 2 = -0.67 (left: 2 -0.67) -> 2 + (-0.67) = 1.33 -> 2 + (-0.67) = 1.33",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps for the input 0.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 / 1 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> Input more numbers to continue the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> Input more numbers to continue the calculations. -> 8 / 2 = 4 (left: 10 4 12)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps with the input 0.875.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 + 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 + 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 + 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> - Evaluate an operation with two numbers to get a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> - Evaluate an operation with two numbers to get a single number. -> - Multiply the two numbers: result = 16",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 / 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 / 4 = 1 (left: 1) -> 1 / 1 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 / 4 = 1 (left: 1) -> 1 / 1 = 1 (left: 1 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 7 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1) -> No possible next steps since there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> Provide another number to continue the calculation.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> Provide another number to continue the calculation. -> 6 + 8 = 14 (left: 14 8 12)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16) -> 1.14 * 16 = 18.24 (left: 18.24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16) -> 1.14 * 16 = 18.24 (left: 18.24) -> There is only one number provided (18.24), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> 1.33 - 2 = -0.67 (left: 2 -0.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "No possible next steps since there is only one number."
                }
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 8 - 7 = 1 (left: 1) -> No possible next steps since there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number which is 0.875. No further operations can be done.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> There are no possible next steps with the input of 56.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "No possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> - Combination of addition, subtraction, multiplication, and division with other numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1) -> No possible next steps with just one number. -> - Combination of addition, subtraction, multiplication, and division with other numbers. -> - Continue combining numbers using addition, subtraction, multiplication, and division to reach a desired result.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67) -> 6.67 * 2 = 13.34 (left: 13.34)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 55 12"
                }
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 - 12 = 40 (left: 40) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 - 12 = 40 (left: 40)  -> 40 / 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number, so there are no possible next steps with just one number."
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 + 12 = 13.33 (left: 13.33) -> There is only one number, so there are no possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 33 "
                }
            },
            "Step 1": {
                "Step": "11 * 3 = 33 (left: 5 33  -> 4 * ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 * 3 = 33 (left: 5 33  -> 4 *  -> 4 * 8 = 32 (left: 32)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 * 3 = 33 (left: 5 33  -> 4 *  -> 4 * 8 = 32 (left: 32) -> 32 + 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 55 12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 + 12 = 13.33 (left: 13.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33 12) -> 1.33 + 12 = 13.33 (left: 13.33) -> There is only one number, so there are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112 -> 56 * 56 = 3136 (left: 3136)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "15 15 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> There are no possible next steps with just the number 60 provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> 60 / 3 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "7 + (-7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 - 56 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "30 + 2 = 32"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15) -> 15 * 2 = 30 (left: 30) -> 30 + 2 = 32 -> 30 * 2 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "7 + (-7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21) -> 21 / 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "5 33 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112 -> 56 / 56 = 1 (left: 1 56 112)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908 -> 12 + 11 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15 12) -> 15 / 12 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15 12) -> 15 / 12 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "12 + 11 = 23"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908 -> 12 + 11 = 23 -> 12 - 11 = 1 (left: 1 23)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421) -> 0.631578947368421 / 2 = 0.3157894736842105 (left: 0.3157894736842105)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 7 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 1 + 56 = 57 (left: 56 57)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15) -> 15 + 2 = 17 (left: 2 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15) -> 15 + 2 = 17 (left: 2 17) -> 5 + 10 = 15 (left: 15 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112 -> 56 / 112 = 0.5 (left: 0.5 56 112)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 * 3 = 33 (left: 5 33 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 55 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15) -> 15 * 2 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 - 56 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "15 15 20"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15) -> 15 + 2 = 17 (left: 2 17) -> 5 + 10 = 15 (left: 15 15 20) -> 15 - 15 = 0 (left: 0 20)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "15 11 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 - 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 - 12 = 1 (left: 1) -> There are no possible next steps with the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 - 56 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "7 + (-7"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 - 19 = -7 (left: -7) -> 7 + (-7) = 0 -> 7 + -7 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "56 56"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 - 19 = -7 (left: -7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 - 19 = -7 (left: -7) -> 7 + (-7) = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> Input: 48 13 5",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> Input: 48 13 5 -> 48 / 13 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> Input: 48 13 5 -> 48 / 13 = 3 (left: 3 5) -> 3 + 5 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "12 + 11 = 23"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "56 56"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 * 12 = 156 (left: 156) -> 56 / 1 = 56 (left: 56 56) -> 56 + 56 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "15 15 20"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 + 3 = 15 (left: 15) -> 15 + 2 = 17 (left: 2 17) -> 5 + 10 = 15 (left: 15 15 20) -> 15 - 15 = 0 (left: 0 20)",
                "Pruning": null
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No further calculations can be made with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 16"
                }
            },
            "Step 7": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 + 10 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 16) -> 1 + 16 = 17",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 + 10 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 16) -> 1 + 16 = 17 -> 16 / 1 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 7\nSteps:\n3 + 7 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 - 18 = -8 (left: -8)\n-8 * -3 = 24 (left: 24)\nAnswer: (-8) * (10 - 18) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations. -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 10"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 - 4 = 0 (",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 - 4 = 0 ( -> 4 * 4 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 - 4 = 0 ( -> 4 * 4 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No further calculations can be made with only one number provided."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No further calculations can be made with only one number provided. -> Provide additional numbers to perform calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No further calculations can be made with only one number provided. -> Provide additional numbers to perform calculations. -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 15 12)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 3 + 5 = 8 ( -> 3 * 5 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 3 + 5 = 8 ( -> 3 * 5 = 15 (left: 15) -> 15 * 2 = 30 (left: 2)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps with just one number. -> Input: 7 7 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps with just one number. -> Input: 7 7 8 -> 7 * 7 = 49 (left: 8 49)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 / 6 = 1.67 (left: 1.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 / 6 = 1.67 (left: 1.67 8) -> 1.67 + 8 = 9.67 (left: 9.67)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 / 6 = 1.67 (left: 1.67 8) -> 1.67 + 8 = 9.67 (left: 9.67) -> 9.67 + 2 = 11.67",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps with just one number. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps with just one number. -> Please provide at least two numbers to calculate possible next steps. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There is only one possible step for this input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2 -> 2 + 2 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2 -> 2 + 2 = 4 (left: 4) -> 4 * 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "There is only one possible step for this input:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 + 10 = 26 (left: 26)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10) -> 16 + 10 = 26 (left: 26) -> 26 + 2 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "No further calculations can be made with only one number provided."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No further calculations can be made with only one number provided. -> Provide additional numbers to continue the calculations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No further calculations can be made with only one number provided. -> Provide additional numbers to continue the calculations. -> 8 - 6 = 2 (left: 14 2 12)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 /",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 / -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 / -> 6 / 2 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps with just one number. -> Input: 2 5 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2) -> There are no possible next steps with just one number. -> Input: 2 5 7 -> 2 + 5 = 7 (left: 7 7)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to find possible next steps. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 4 10 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37 -> 35 / 2 = 17.5 (left: 17.5 37)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 + 10 = 16 (left: 10 10 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 + 10 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 7": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations. -> 2 ^ 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4) -> Possible next steps: -> There are no more possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 15"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 - 15 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input -2."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 6 13"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is no input provided. Please provide an input sequence to generate possible next steps."
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 15 / 8 = 1.875 (left: 1.875)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 15"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps for the input 3.75."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "40 / 2 = 20"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 10 4) -> 10 * 4 = 40 (left: 40) -> 40 / 2 = 20 -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There is no input provided. Please provide an input sequence to generate possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps. -> There is no input provided. Please provide an input sequence to generate possible next steps. -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps. -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate possible next steps. -> Unfortunately, without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 - 15 = -7 (left: -7)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 4.5."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> There are no possible next steps with the input 4.5.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75) -> There are no possible next steps for the input 3.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 / 10 = 0.4 (left: 0.4 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 / 10 = 0.4 (left: 0.4 4) -> 4 + 0.4 = 4.4 (left: 4.4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps for the input 3.75."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "40 / 2 = 20"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 10 4) -> 10 * 4 = 40 (left: 40) -> 40 / 2 = 20 -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5) -> 5.5 * 8 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "8 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the input 4.5."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5. -> 4.5 * 4.5 = 20.25 (left: 20.25)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no more possible next steps with the given input."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> 30 - 2 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 10 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 10 4) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 10 4) -> 10 * 4 = 40 (left: 40) -> 40 / 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 15 / 8 = 1.875 (left: 1.875)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left: -> 13 + 3 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left: -> 13 + 3 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 6 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5) -> 5.5 - 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps with the input 4.5."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps for the input -2."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 - 6 = -2 (left: -2) -> There are no possible next steps for the input -2. -> There are no possible next steps for the input -2. -> There are no possible next steps for the input -2.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24) -> 3.25 * 24 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Unfortunately, without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further."
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There seems to be an error in the input provided. Please provide the correct input for me to generate possible next steps. -> Unfortunately, without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further. -> Unfortunately, without the correct input, I am unable to generate possible next steps. Please provide the correct input for me to assist you further.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 - 6 = -2 (left: -2) -> There are no possible next steps for the input -2.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 - 6 = -2 (left: -2) -> There are no possible next steps for the input -2. -> There are no possible next steps for the input -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 15"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on. -> There are no possible next steps with the input of 2.66666666667 as it is a single number without any other numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 1.22 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number. -> None",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99) -> No next steps as there are not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 / 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 * 2 = 22"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 11 - 2 = 9 (left: 9 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 11 - 2 = 9 (left: 9 22) -> 22 / 9 = 2.44444444444 (left: 2.44444444444)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "54 - 6 = 48 (left"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "19"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: -> 11 * 30 = 330 (left: 19 -> 19 + 2 = 21",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: -> 11 * 30 = 330 (left: 19 -> 19 + 2 = 21 -> 19 + 2 - 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 16"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 + 6 = 60 (left: 60 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 + 6 = 60 (left: 60 48) -> 60 + 48 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 1.22 as it is already a single number."
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "9 22"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 11 - 2 = 9 (left: 9 22) -> 9 - 22 = -13 (left: -13)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 * 2 = 22"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 11 - 2 = 9 (left: 9 22)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 * 17 = 255 (left: 255)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 * 17 = 255 (left: 255) -> 255 / 8 = 31.875 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 6 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 48 + 6 = 54 (left: 54 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 48 + 6 = 54 (left: 54 48) -> 54 / 48 = 1.125 (left: 1.125)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 * 2 = 22"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 11 - 2 = 9 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps for the input 1.22 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number. -> None",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 16"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "11 * 2 = 22"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> -3 / 2 = -1.5 (left: -1.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 11 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 48 + 6 = 54 (left: 6)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 11 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: -> 11 * 30 = 330 (left: 19",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "0.176"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17) -> 3 / 17 = 0.176 (left: 0.176) -> There are no possible next steps for this input as it only consists of one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17) -> 3 / 17 = 0.176 (left: 0.176) -> There are no possible next steps for this input as it only consists of one number. -> There are no possible next steps for this input as it only consists of one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 9 - 3 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 11 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 6 / 54 = 0.111111111 (left: 0.111111111)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 11 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> Possible next steps",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> Possible next steps -> 2 * 8 = 16 (left: 8 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 * 6 = 324 (left: 324)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 1.22 as it is already a single number."
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33) -> 11 * 33 = 363 (left: 363)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33) -> 11 * 33 = 363 (left: 363) -> 3 - 6 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 11 30"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 / 6 = 9 (left: 9 - 48)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 / 6 = 9 (left: 9 - 48) -> 9 - 48 = -39",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 / 6 = 9 (left: 9 - 48) -> 9 - 48 = -39 -> 9 * 48 = 432 (left: 432)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "There are no possible next steps for the input 1.22 as it is already a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "0.176"
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17) -> 3 / 17 = 0.176 (left: 0.176) -> 0.176 * 2 = 0.352 (left: 0.352)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "19"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 - 11 = 19 (left: -> 11 * 30 = 330 (left: 19 -> There are no possible next steps with the input of 19.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 * 3 = 27 (left: 27 27) -> 27 + 27 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 5 11"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665 30)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665 30) -> 30 - 3.6666666666666665 = 26.333333333333332 (left: 26.333333333333332 ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665 30) -> 30 - 3.6666666666666665 = 26.333333333333332 (left: 26.333333333333332  -> 26.333333333333332 / 8 = 3.2916666666666665 (left: 8",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "54 - 6 = 48 (left"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16"
                }
            },
            "Step 7": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "0.176"
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17) -> 3 / 17 = 0.176 (left: 0.176) -> 0.176 * 2 = 0.352",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 - 6 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 11 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 17 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 17 15) -> 17 / 15 = 1.13 (left: 1.13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps for the input 1.22 as it is already a single number."
                }
            },
            "Step 7": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number. -> There are no possible next steps for the input 1.22 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "54 - 6 = 48 (left"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 54 - 6 = 48 (left -> 54 + 6 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 6 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 + 11 = 17 (left: 3 17) -> 3 / 17 = 0.176 (left: 0.176)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "8 14 "
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> Possible next steps -> 2 * 8 = 16 (left: 8 14  -> 8 * 14 = 112 (left: 112)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "No next steps as there are not enough numbers to perform any operations."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99) -> No next steps as there are not enough numbers to perform any operations. -> No next steps as there are not enough numbers to perform any operations.",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 =  -> 13 / 6 = 2.16666666667",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 =  -> 13 / 6 = 2.16666666667 -> 13 + 6 = 19 (left: 19 / 6 = 3.16666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with just one number provided. Please provide more numbers to continue."
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> There are no possible next steps with just one number provided. Please provide more numbers to continue. -> 8 + 14 = 22 (left: 22 8 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571) -> 0.8571428571428571 / 2 = 0.42857142857142855",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "19 / 6 = 3.16666666667"
                }
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 =  -> 13 / 6 = 2.16666666667 -> 13 + 6 = 19 (left: 19 / 6 = 3.16666666667) -> 19 * 6 = 114 (left: 114)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps to perform any operations."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps for the input 25 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 + 13 = 61 (left: 61)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 + 13 = 61 (left: 61) -> 61 + 2 = 63",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> Input: 4 6 10",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520) -> 5 + 2 = 7 (left: 7 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1) -> There are no possible next steps with just one number provided. Please provide more numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 8 / 1.6 = 5 (left: 5 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 8 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8 8) -> 5 + 5 = 10 (left",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520) -> Input: 7 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 = ",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 =  -> 13 / 6 = 2.16666666667",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 =  -> 13 / 6 = 2.16666666667 -> 13 + 6 = 19 (left: 19 / 6 = 3.16666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 * 5 = 40 (left: 8 8 40)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 * 5 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 + 13 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13) -> 14 + 13 = 27 (left: 27) -> 27 - 2 = 25 (left: 2 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with just one number provided. Please provide more numbers to continue."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 * 8 = 48 (left: 48 13) -> 48 - 13 = 35 (left: 35) -> 35 is a single number, so there are no possible next steps to take.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13) -> 8 * 8 = 64 (left: 64 13)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) ->  -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "1 + 1 = 2"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 13 / 1.33 = 9.77 (left: 9.77)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13) -> 13 / 1.33 = 9.77 (left: 9.77) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 7": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 - 8 = 5 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 40 - 8 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "Input: 7 5"
                }
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> Possible next steps: -> There are no possible next steps with the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7) -> Possible next steps",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7) -> Possible next steps -> None. The input is already in its final form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps with the input 13."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13. -> There are no possible next steps with the input 13.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> There are no possible next steps for the input 2.25 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "14 / 2 = 7"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7 -> 14 + 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 9) -> 1.3333333333333333 * 9 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 9) -> 1.3333333333333333 * 9 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 3 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 -> 13 * 1 = 13 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None. The input is already in its final form."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7) -> Possible next steps -> None. The input is already in its final form. -> None. The input is already in its final form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7) -> Possible next steps -> None. The input is already in its final form. -> None. The input is already in its final form. -> None. The input is already in its final form.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 + 22 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 + 22 = 28 (left: 28) -> 28 / 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 9 13"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> Possible next steps:",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31) -> 31 + 2 = 33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations on. -> 3 + 5 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "There are no possible next steps as the input is already in its simplest form."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 + 1 = 2.2857142857142858",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 9 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "31 + 2 = 33"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 13 18) -> 13 + 18 = 31 (left: 31) -> 31 + 2 = 33 -> 31 * 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1.2857142857142858 + 1 = 2.2857142857142858"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 + 1 = 2.2857142857142858 -> 1.2857142857142858 / 1 = 1.2857142857142858 (left: 1.2857142857142858 1 2.2857142857142858)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 9 13"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "None. The input is already in its final form."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7) -> Possible next steps -> None. The input is already in its final form. -> None. The input is already in its final form.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 4 = 7 (left: 3 7) -> Possible next steps -> None. The input is already in its final form. -> None. The input is already in its final form. -> None. The input is already in its final form.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12 -> 3 / 4 = 0.75 (left: 0.75 = 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations. -> 5 + 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> 63 / 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 9 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234) -> 2 * 3 * 4 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1.2857142857142858 + 1 = 2.2857142857142858"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "14 / 2 = 7"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7 -> 7 * 2 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14) -> 14 / 2 = 7 -> 7 * 2 = 14 (left: 14 14) -> 14 / 14 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1.2857142857142858 + 1 = 2.2857142857142858"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 5 6 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 5 6 7 -> 7 - 5 = 2 (left: 2 6 7)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 5 6 7 -> 7 - 5 = 2 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with just the number 4."
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 7 - 3 = 4 (left: 4) -> There are no possible next steps with just the number 4. -> 4 + 4 = 8 -> 4 - 4 = 0 (left: 0 4 8)",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> No possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 10 49"
                }
            },
            "Step 4": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 - 9 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 - 9 = 40 (left: 10 40) -> 10 * 2 = 20 (left: 20 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 7 = 49 (left: 9 10 49) -> 49 - 9 = 40 (left: 10 40) -> 10 * 2 = 20 (left: 20 40) -> 40 - 20 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "There are no possible next steps with the input of 0.8."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12 - 2 = 10.612 (left: 10.612 12.612)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12 - 2 = 10.612 (left: 10.612 12.612) -> 10.612 + 12.612 = 23.224 (left: 23.224)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "12 / 2 = 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> Input: 14 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> Input: 14 5 5 -> 5 / 14 = 0.357 (left: 0.357 5)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> Input: 14 5 5 -> 5 / 14 = 0.357 (left: 0.357 5) -> 0.357 + 5 = 5.357 (left: 5.357)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "9 10 14"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> -4 + 2 = -2 (left: 2)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 2 * 12 = 24.0 (left: 24.0)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35) -> 35 / 8 = 4.375 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 10 49"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 2 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 2 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 2 14 10) -> 14 - 10 = 4 (left: 4) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12 / 2 = 6 (left: 6 12.612)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12 / 2 = 6 (left: 6 12.612) -> 12.612 - 6 = 6.612 (left: 6 6.612)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 - 8 = 7 (left: 8)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps for the input 1."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 2 * 12 = 24.0 (left: 24.0 12.612)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 2 * 12 = 24.0 (left: 24.0 12.612) -> 24.0 - 12.612 = 11.388 (left: 11.388 12.612)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 2 + 12 = 14.612 (left: 12.612 14.612)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 2 + 12 = 14.612 (left: 12.612 14.612) -> 12.612 * 14.612 = 184.403344 (left: 184.403344)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 * 10 = 28.57 (left: 28.57)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "7 10 10"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 2 14 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 2 14 10) -> 14 - 2 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 * 2 = 14 (left: 2 14 10) -> 14 - 2 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "12 / 2 = 6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 2 + 12 = 14.612 (left: 12.612 14.612)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 2 + 12 = 14.612 (left: 12.612 14.612) -> 12.612 / 14.612 = 0.863934 (left: 0.863934)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "12 / 2 = 6"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 10 49"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> 50 * 8 = 400 (left: 8)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12.612 / 2 = 6.306 (left: 6.306 12.612)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12.612 / 2 = 6.306 (left: 6.306 12.612) -> 6.306 * 2 = 12.612 (left: 12.612)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "2 12.612"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 3.5 * 10 = 35 (left: 10 35)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 3.5 * 10 = 35 (left: 10 35) -> 10 - 35 = -25 (left: -25)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12.612 - 2 = 10.612 (left: 2 10.612)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12.612 - 2 = 10.612 (left: 2 10.612) -> 2 + 10.612 = 12.612 (left: 10.612 12.612)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10)",
                "Pruning": null
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10) -> 10 - (-1) = 11 (left: 11) ",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 9 10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "9 10 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12.612",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 + 2 = 9 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 7 5) -> 5 - 7 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 7 5) -> 5 - 7 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "2 12.612"
                }
            },
            "Step 7": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12 - 2 = 10.612 (left: 10.612 12.612",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 / 9 = 1.11 (left: 1.11 14) -> 14 / 1.11 = 12.612 (left: 12.612)  -> 12 / 6 = 2 (left: 2 12.612) -> 12 - 2 = 10.612 (left: 10.612 12.612 -> 10.612 * 12.612 = 134.290144 (left: 134.290144)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "No possible next steps for the input 1."
                }
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 786949,
        "output_tokens": 366958.44523809536,
        "total_cost": 0.9439121678571429
    }
}